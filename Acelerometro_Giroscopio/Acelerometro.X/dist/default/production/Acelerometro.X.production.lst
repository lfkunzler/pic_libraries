

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 08 09:19:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     _TRISDbits	set	3989
    85  0000                     _TRISD	set	3989
    86  0000                     _PORTD	set	3971
    87  0000                     _LATDbits	set	3980
    88  0000                     _PORTCbits	set	3970
    89  0000                     _TRISC	set	3988
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPSTATbits	set	4039
    92  0000                     _SSPCON2bits	set	4037
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPCON2	set	4037
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPSTAT	set	4039
    97  0000                     _PEN	set	32298
    98  0000                     _RCEN	set	32299
    99  0000                     _ACKEN	set	32300
   100  0000                     _ACKDT	set	32301
   101  0000                     _RSEN	set	32297
   102  0000                     _ACKSTAT	set	32302
   103  0000                     _SSPIF	set	31987
   104  0000                     _SSPIE	set	31979
   105  0000                     _TRISB1	set	31897
   106  0000                     _TRISB0	set	31896
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	opt stack 0
   111  000800  00                 	db	0
   112  000801                     STR_7:
   113  000801  54                 	db	84	;'T'
   114  000802  45                 	db	69	;'E'
   115  000803  4D                 	db	77	;'M'
   116  000804  50                 	db	80	;'P'
   117  000805  45                 	db	69	;'E'
   118  000806  52                 	db	82	;'R'
   119  000807  41                 	db	65	;'A'
   120  000808  54                 	db	84	;'T'
   121  000809  55                 	db	85	;'U'
   122  00080A  52                 	db	82	;'R'
   123  00080B  41                 	db	65	;'A'
   124  00080C  00                 	db	0
   125  00080D                     STR_1:
   126  00080D  41                 	db	65	;'A'
   127  00080E  78                 	db	120	;'x'
   128  00080F  3A                 	db	58	;':'
   129  000810  00                 	db	0
   130  000811  00                 	db	0
   131  000812                     STR_4:
   132  000812  47                 	db	71	;'G'
   133  000813  78                 	db	120	;'x'
   134  000814  3A                 	db	58	;':'
   135  000815  00                 	db	0
   136  000816  00                 	db	0
   137  000817                     STR_2:
   138  000817  41                 	db	65	;'A'
   139  000818  79                 	db	121	;'y'
   140  000819  3A                 	db	58	;':'
   141  00081A  00                 	db	0
   142  00081B  00                 	db	0
   143  00081C                     STR_5:
   144  00081C  47                 	db	71	;'G'
   145  00081D  79                 	db	121	;'y'
   146  00081E  3A                 	db	58	;':'
   147  00081F  00                 	db	0
   148  000820  00                 	db	0
   149  000821                     STR_3:
   150  000821  41                 	db	65	;'A'
   151  000822  7A                 	db	122	;'z'
   152  000823  3A                 	db	58	;':'
   153  000824  00                 	db	0
   154  000825  00                 	db	0
   155  000826                     STR_6:
   156  000826  47                 	db	71	;'G'
   157  000827  7A                 	db	122	;'z'
   158  000828  3A                 	db	58	;':'
   159  000829  00                 	db	0
   160  00082A  00                 	db	0
   161                           
   162                           ; #config settings
   163  00082B  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           	psect	cinit
   166  001B24                     __pcinit:
   167                           	opt stack 0
   168  001B24                     start_initialization:
   169                           	opt stack 0
   170  001B24                     __initialization:
   171                           	opt stack 0
   172  001B24                     end_of_initialization:
   173                           	opt stack 0
   174  001B24                     __end_of__initialization:
   175                           	opt stack 0
   176  001B24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  001B26  6EF8               	movwf	tblptru,c
   178  001B28  0100               	movlb	0
   179  001B2A  EF16  F004         	goto	_main	;jump to C main() function
   180                           tblptru	equ	0xFF8
   181                           
   182                           	psect	cstackBANK0
   183  000060                     __pcstackBANK0:
   184                           	opt stack 0
   185  000060                     main@txt:
   186                           	opt stack 0
   187                           
   188                           ; 10 bytes @ 0x0
   189  000060                     	ds	10
   190  00006A                     main@str1:
   191                           	opt stack 0
   192                           
   193                           ; 5 bytes @ 0xA
   194  00006A                     	ds	5
   195  00006F                     main@str2:
   196                           	opt stack 0
   197                           
   198                           ; 5 bytes @ 0xF
   199  00006F                     	ds	5
   200  000074                     main@Xa:
   201                           	opt stack 0
   202                           
   203                           ; 3 bytes @ 0x14
   204  000074                     	ds	3
   205  000077                     main@Ya:
   206                           	opt stack 0
   207                           
   208                           ; 3 bytes @ 0x17
   209  000077                     	ds	3
   210  00007A                     main@Za:
   211                           	opt stack 0
   212                           
   213                           ; 3 bytes @ 0x1A
   214  00007A                     	ds	3
   215  00007D                     main@t:
   216                           	opt stack 0
   217                           
   218                           ; 3 bytes @ 0x1D
   219  00007D                     	ds	3
   220  000080                     main@Xg:
   221                           	opt stack 0
   222                           
   223                           ; 3 bytes @ 0x20
   224  000080                     	ds	3
   225  000083                     main@Yg:
   226                           	opt stack 0
   227                           
   228                           ; 3 bytes @ 0x23
   229  000083                     	ds	3
   230  000086                     main@Zg:
   231                           	opt stack 0
   232                           
   233                           ; 3 bytes @ 0x26
   234  000086                     	ds	3
   235  000089                     main@Ax:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x29
   239  000089                     	ds	2
   240  00008B                     main@Ay:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x2B
   244  00008B                     	ds	2
   245  00008D                     main@Az:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x2D
   249  00008D                     	ds	2
   250  00008F                     main@T:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x2F
   254  00008F                     	ds	2
   255  000091                     main@Gx:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x31
   259  000091                     	ds	2
   260  000093                     main@Gy:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x33
   264  000093                     	ds	2
   265  000095                     main@Gz:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x35
   269  000095                     	ds	2
   270  000097                     main@select:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x37
   274  000097                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	opt stack 0
   280  000001                     ??_SetDDRamAddr:
   281  000001                     ??_Delay10KTCYx:
   282  000001                     ??_DelayPORXLCD:
   283  000001                     ?___awdiv:
   284                           	opt stack 0
   285  000001                     ?___ftpack:
   286                           	opt stack 0
   287  000001                     ?___fttol:
   288                           	opt stack 0
   289  000001                     I2C_Write@data:
   290                           	opt stack 0
   291  000001                     I2C_Read@flag:
   292                           	opt stack 0
   293  000001                     WriteCmdXLCD@cmd:
   294                           	opt stack 0
   295  000001                     WriteDataXLCD@data:
   296                           	opt stack 0
   297  000001                     Mydelay@tempo:
   298                           	opt stack 0
   299  000001                     ___awdiv@dividend:
   300                           	opt stack 0
   301  000001                     strcpy@to:
   302                           	opt stack 0
   303  000001                     ___ftpack@arg:
   304                           	opt stack 0
   305  000001                     ___ftge@ff1:
   306                           	opt stack 0
   307  000001                     ___fttol@f1:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x0
   311  000001                     	ds	1
   312  000002                     I2C_Start_Wait@slave_write_address:
   313                           	opt stack 0
   314  000002                     I2C_Repeated_Start@slave_read_address:
   315                           	opt stack 0
   316  000002                     I2C_Read@buffer:
   317                           	opt stack 0
   318  000002                     Delay10KTCYx@unit:
   319                           	opt stack 0
   320  000002                     putrsXLCD@buffer:
   321                           	opt stack 0
   322  000002                     putsXLCD@buffer:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x1
   326  000002                     	ds	1
   327  000003                     ??_Mydelay:
   328  000003                     ___awdiv@divisor:
   329                           	opt stack 0
   330  000003                     strcpy@from:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x2
   334  000003                     	ds	1
   335  000004                     SetDDRamAddr@DDaddr:
   336                           	opt stack 0
   337  000004                     ___ftpack@exp:
   338                           	opt stack 0
   339  000004                     Mydelay@i:
   340                           	opt stack 0
   341  000004                     ___ftge@ff2:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0x3
   345  000004                     	ds	1
   346  000005                     ??___fttol:
   347  000005                     OpenXLCD@lcdtype:
   348                           	opt stack 0
   349  000005                     ___awdiv@counter:
   350                           	opt stack 0
   351  000005                     ___ftpack@sign:
   352                           	opt stack 0
   353  000005                     strcpy@cp:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x4
   357  000005                     	ds	1
   358  000006                     ??___ftpack:
   359  000006                     ___awdiv@sign:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363  000006                     	ds	1
   364  000007                     ??___ftge:
   365  000007                     ___awdiv@quotient:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369  000007                     	ds	2
   370  000009                     ?___ftmul:
   371                           	opt stack 0
   372  000009                     ?___awtoft:
   373                           	opt stack 0
   374  000009                     ___awtoft@c:
   375                           	opt stack 0
   376  000009                     ___ftmul@f1:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x8
   380  000009                     	ds	1
   381  00000A                     ___fttol@sign1:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x9
   385  00000A                     	ds	1
   386  00000B                     ___fttol@lval:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0xA
   390  00000B                     	ds	1
   391  00000C                     ___awtoft@sign:
   392                           	opt stack 0
   393  00000C                     ___ftmul@f2:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0xB
   397  00000C                     	ds	1
   398  00000D                     ?___ftdiv:
   399                           	opt stack 0
   400  00000D                     ?___ftneg:
   401                           	opt stack 0
   402  00000D                     ___ftdiv@f1:
   403                           	opt stack 0
   404  00000D                     ___ftneg@f1:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0xC
   408  00000D                     	ds	2
   409  00000F                     ??___ftmul:
   410  00000F                     ___fttol@exp1:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0xE
   414  00000F                     	ds	1
   415  000010                     ?___awmod:
   416                           	opt stack 0
   417  000010                     ___awmod@dividend:
   418                           	opt stack 0
   419  000010                     ___ftdiv@f2:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0xF
   423  000010                     	ds	2
   424  000012                     ___ftmul@exp:
   425                           	opt stack 0
   426  000012                     ___awmod@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x11
   430  000012                     	ds	1
   431  000013                     ??___ftdiv:
   432  000013                     ___ftmul@f3_as_product:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x12
   436  000013                     	ds	1
   437  000014                     ___awmod@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x13
   441  000014                     	ds	1
   442  000015                     ___awmod@sign:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x14
   446  000015                     	ds	1
   447  000016                     ___ftdiv@cntr:
   448                           	opt stack 0
   449  000016                     ___ftmul@cntr:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x15
   453  000016                     	ds	1
   454  000017                     ___ftmul@sign:
   455                           	opt stack 0
   456  000017                     ___ftdiv@f3:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x16
   460  000017                     	ds	3
   461  00001A                     ___ftdiv@exp:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x19
   465  00001A                     	ds	1
   466  00001B                     ___ftdiv@sign:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x1A
   470  00001B                     	ds	1
   471  00001C                     ?___ftadd:
   472                           	opt stack 0
   473  00001C                     ___ftadd@f1:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x1B
   477  00001C                     	ds	3
   478  00001F                     ___ftadd@f2:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x1E
   482  00001F                     	ds	3
   483  000022                     ??___ftadd:
   484                           
   485                           ; 1 bytes @ 0x21
   486  000022                     	ds	3
   487  000025                     ___ftadd@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x24
   491  000025                     	ds	1
   492  000026                     ___ftadd@exp2:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x25
   496  000026                     	ds	1
   497  000027                     ___ftadd@exp1:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x26
   501  000027                     	ds	1
   502  000028                     traduz@num:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x27
   506  000028                     	ds	3
   507  00002B                     traduz@txt:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x2A
   511  00002B                     	ds	2
   512  00002D                     ??_traduz:
   513                           
   514                           ; 1 bytes @ 0x2C
   515  00002D                     	ds	1
   516  00002E                     traduz@stringh:
   517                           	opt stack 0
   518                           
   519                           ; 10 bytes @ 0x2D
   520  00002E                     	ds	10
   521  000038                     traduz@aux:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x37
   525  000038                     	ds	3
   526  00003B                     traduz@aux_453:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x3A
   530  00003B                     	ds	2
   531  00003D                     traduz@pfloat:
   532                           	opt stack 0
   533                           
   534                           ; 3 bytes @ 0x3C
   535  00003D                     	ds	3
   536  000040                     traduz@pint:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x3F
   540  000040                     	ds	2
   541  000042                     traduz@j:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x41
   545  000042                     	ds	2
   546  000044                     traduz@i:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x43
   550  000044                     	ds	2
   551  000046                     escreve@str2:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x45
   555  000046                     	ds	1
   556  000047                     escreve@N1:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x46
   560  000047                     	ds	3
   561  00004A                     escreve@N2:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0x49
   565  00004A                     	ds	3
   566  00004D                     ??_escreve:
   567                           
   568                           ; 1 bytes @ 0x4C
   569  00004D                     	ds	2
   570  00004F                     escreve@txt:
   571                           	opt stack 0
   572                           
   573                           ; 10 bytes @ 0x4E
   574  00004F                     	ds	10
   575  000059                     escreve@str1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x58
   579  000059                     	ds	1
   580  00005A                     ??_main:
   581                           
   582                           ; 1 bytes @ 0x59
   583  00005A                     	ds	4
   584                           tblptru	equ	0xFF8
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 12 in file "../PIC_MPU-6050.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  txt            10    0[BANK0 ] unsigned char [10]
   596 ;;  str2            5   15[BANK0 ] unsigned char [5]
   597 ;;  str1            5   10[BANK0 ] unsigned char [5]
   598 ;;  Zg              3   38[BANK0 ] float 
   599 ;;  Yg              3   35[BANK0 ] float 
   600 ;;  Xg              3   32[BANK0 ] float 
   601 ;;  t               3   29[BANK0 ] float 
   602 ;;  Za              3   26[BANK0 ] float 
   603 ;;  Ya              3   23[BANK0 ] float 
   604 ;;  Xa              3   20[BANK0 ] float 
   605 ;;  Gz              2   53[BANK0 ] int 
   606 ;;  Gy              2   51[BANK0 ] int 
   607 ;;  Gx              2   49[BANK0 ] int 
   608 ;;  T               2   47[BANK0 ] int 
   609 ;;  Az              2   45[BANK0 ] int 
   610 ;;  Ay              2   43[BANK0 ] int 
   611 ;;  Ax              2   41[BANK0 ] int 
   612 ;;  select          1   55[BANK0 ] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         0       0       0       0       0       0       0       0       0
   623 ;;      Locals:         0      56       0       0       0       0       0       0       0
   624 ;;      Temps:          4       0       0       0       0       0       0       0       0
   625 ;;      Totals:         4      56       0       0       0       0       0       0       0
   626 ;;Total ram usage:       60 bytes
   627 ;; Hardware stack levels required when called:    4
   628 ;; This function calls:
   629 ;;		_BusyXLCD
   630 ;;		_I2C_Init
   631 ;;		_I2C_Read
   632 ;;		_I2C_Stop
   633 ;;		_MPU6050_Init
   634 ;;		_MPU_Start_Loc
   635 ;;		_Mydelay
   636 ;;		_SetDDRamAddr
   637 ;;		___awtoft
   638 ;;		___ftadd
   639 ;;		___ftdiv
   640 ;;		_escreve
   641 ;;		_inic_XLCD
   642 ;;		_limpa
   643 ;;		_putrsXLCD
   644 ;;		_strcpy
   645 ;;		_traduz
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text0
   652  00082C                     __ptext0:
   653                           	opt stack 0
   654  00082C                     _main:
   655                           	opt stack 27
   656                           
   657                           ;PIC_MPU-6050.c: 15: inic_XLCD();
   658                           
   659                           ;incstack = 0
   660  00082C  ECC2  F00C         	call	_inic_XLCD	;wreg free
   661                           
   662                           ;PIC_MPU-6050.c: 16: char select = 0;
   663  000830  0E00               	movlw	0
   664  000832  0100               	movlb	0	; () banked
   665  000834  6F97               	movwf	main@select& (0+255),b
   666                           
   667                           ; BSR set to: 0
   668                           ;PIC_MPU-6050.c: 17: char str1[5];
   669                           ;PIC_MPU-6050.c: 18: char str2[5];
   670                           ;PIC_MPU-6050.c: 19: char txt[10];
   671                           ;PIC_MPU-6050.c: 20: int Ax,Ay,Az,T,Gx,Gy,Gz;
   672                           ;PIC_MPU-6050.c: 21: float Xa,Ya,Za,t,Xg,Yg,Zg;
   673                           ;PIC_MPU-6050.c: 22: I2C_Init();
   674  000836  EC4C  F00D         	call	_I2C_Init	;wreg free
   675                           
   676                           ;PIC_MPU-6050.c: 23: MPU6050_Init();
   677  00083A  EC64  F00B         	call	_MPU6050_Init	;wreg free
   678                           
   679                           ;PIC_MPU-6050.c: 25: TRISC = 0b00000001;
   680  00083E  0E01               	movlw	1
   681  000840  6E94               	movwf	3988,c	;volatile
   682  000842                     
   683                           ;PIC_MPU-6050.c: 27: {
   684                           ;PIC_MPU-6050.c: 28: if (PORTCbits.RC0 == 0){
   685  000842  B082               	btfsc	3970,0,c	;volatile
   686  000844  D009               	goto	l162
   687                           
   688                           ;PIC_MPU-6050.c: 29: if((select)== 3){
   689  000846  0E03               	movlw	3
   690  000848  0100               	movlb	0	; () banked
   691  00084A  1997               	xorwf	main@select& (0+255),w,b
   692  00084C  A4D8               	btfss	status,2,c
   693  00084E  D002               	goto	l161
   694                           
   695                           ; BSR set to: 0
   696                           ;PIC_MPU-6050.c: 30: select = 0;
   697  000850  0E00               	movlw	0
   698  000852  D001               	goto	L1
   699  000854                     l161:
   700                           
   701                           ; BSR set to: 0
   702                           ;PIC_MPU-6050.c: 32: else{
   703                           ;PIC_MPU-6050.c: 33: (select)=(select)+1;
   704                           
   705                           ; BSR set to: 0
   706  000854  2997               	incf	main@select& (0+255),w,b
   707  000856                     L1:
   708  000856  6F97               	movwf	main@select& (0+255),b
   709  000858                     l162:
   710                           
   711                           ;PIC_MPU-6050.c: 34: }
   712                           ;PIC_MPU-6050.c: 35: }
   713                           ;PIC_MPU-6050.c: 36: MPU_Start_Loc();
   714                           
   715                           ; BSR set to: 0
   716                           
   717                           ; BSR set to: 0
   718  000858  EC7A  F00D         	call	_MPU_Start_Loc	;wreg free
   719                           
   720                           ;PIC_MPU-6050.c: 37: Ax = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   721  00085C  0E00               	movlw	0
   722  00085E  EC1C  F00D         	call	_I2C_Read
   723  000862  6E5A               	movwf	??_main& (0+255),c
   724  000864  505A               	movf	??_main,w,c
   725  000866  6E5C               	movwf	(??_main+2)& (0+255),c
   726  000868  6A5B               	clrf	(??_main+1)& (0+255),c
   727  00086A  0E00               	movlw	0
   728  00086C  EC1C  F00D         	call	_I2C_Read
   729  000870  6E5D               	movwf	(??_main+3)& (0+255),c
   730  000872  505D               	movf	??_main+3,w,c
   731  000874  105B               	iorwf	??_main+1,w,c
   732  000876  0100               	movlb	0	; () banked
   733  000878  6F89               	movwf	main@Ax& (0+255),b
   734  00087A  505C               	movf	??_main+2,w,c
   735  00087C  6F8A               	movwf	(main@Ax+1)& (0+255),b
   736                           
   737                           ; BSR set to: 0
   738                           ;PIC_MPU-6050.c: 38: Ay = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   739  00087E  0E00               	movlw	0
   740  000880  EC1C  F00D         	call	_I2C_Read
   741  000884  6E5A               	movwf	??_main& (0+255),c
   742  000886  505A               	movf	??_main,w,c
   743  000888  6E5C               	movwf	(??_main+2)& (0+255),c
   744  00088A  6A5B               	clrf	(??_main+1)& (0+255),c
   745  00088C  0E00               	movlw	0
   746  00088E  EC1C  F00D         	call	_I2C_Read
   747  000892  6E5D               	movwf	(??_main+3)& (0+255),c
   748  000894  505D               	movf	??_main+3,w,c
   749  000896  105B               	iorwf	??_main+1,w,c
   750  000898  0100               	movlb	0	; () banked
   751  00089A  6F8B               	movwf	main@Ay& (0+255),b
   752  00089C  505C               	movf	??_main+2,w,c
   753  00089E  6F8C               	movwf	(main@Ay+1)& (0+255),b
   754                           
   755                           ; BSR set to: 0
   756                           ;PIC_MPU-6050.c: 39: Az = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   757  0008A0  0E00               	movlw	0
   758  0008A2  EC1C  F00D         	call	_I2C_Read
   759  0008A6  6E5A               	movwf	??_main& (0+255),c
   760  0008A8  505A               	movf	??_main,w,c
   761  0008AA  6E5C               	movwf	(??_main+2)& (0+255),c
   762  0008AC  6A5B               	clrf	(??_main+1)& (0+255),c
   763  0008AE  0E00               	movlw	0
   764  0008B0  EC1C  F00D         	call	_I2C_Read
   765  0008B4  6E5D               	movwf	(??_main+3)& (0+255),c
   766  0008B6  505D               	movf	??_main+3,w,c
   767  0008B8  105B               	iorwf	??_main+1,w,c
   768  0008BA  0100               	movlb	0	; () banked
   769  0008BC  6F8D               	movwf	main@Az& (0+255),b
   770  0008BE  505C               	movf	??_main+2,w,c
   771  0008C0  6F8E               	movwf	(main@Az+1)& (0+255),b
   772                           
   773                           ; BSR set to: 0
   774                           ;PIC_MPU-6050.c: 40: T = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   775  0008C2  0E00               	movlw	0
   776  0008C4  EC1C  F00D         	call	_I2C_Read
   777  0008C8  6E5A               	movwf	??_main& (0+255),c
   778  0008CA  505A               	movf	??_main,w,c
   779  0008CC  6E5C               	movwf	(??_main+2)& (0+255),c
   780  0008CE  6A5B               	clrf	(??_main+1)& (0+255),c
   781  0008D0  0E00               	movlw	0
   782  0008D2  EC1C  F00D         	call	_I2C_Read
   783  0008D6  6E5D               	movwf	(??_main+3)& (0+255),c
   784  0008D8  505D               	movf	??_main+3,w,c
   785  0008DA  105B               	iorwf	??_main+1,w,c
   786  0008DC  0100               	movlb	0	; () banked
   787  0008DE  6F8F               	movwf	main@T& (0+255),b
   788  0008E0  505C               	movf	??_main+2,w,c
   789  0008E2  6F90               	movwf	(main@T+1)& (0+255),b
   790                           
   791                           ; BSR set to: 0
   792                           ;PIC_MPU-6050.c: 41: Gx = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   793  0008E4  0E00               	movlw	0
   794  0008E6  EC1C  F00D         	call	_I2C_Read
   795  0008EA  6E5A               	movwf	??_main& (0+255),c
   796  0008EC  505A               	movf	??_main,w,c
   797  0008EE  6E5C               	movwf	(??_main+2)& (0+255),c
   798  0008F0  6A5B               	clrf	(??_main+1)& (0+255),c
   799  0008F2  0E00               	movlw	0
   800  0008F4  EC1C  F00D         	call	_I2C_Read
   801  0008F8  6E5D               	movwf	(??_main+3)& (0+255),c
   802  0008FA  505D               	movf	??_main+3,w,c
   803  0008FC  105B               	iorwf	??_main+1,w,c
   804  0008FE  0100               	movlb	0	; () banked
   805  000900  6F91               	movwf	main@Gx& (0+255),b
   806  000902  505C               	movf	??_main+2,w,c
   807  000904  6F92               	movwf	(main@Gx+1)& (0+255),b
   808                           
   809                           ; BSR set to: 0
   810                           ;PIC_MPU-6050.c: 42: Gy = (((int)I2C_Read(0)<<8) | (int)I2C_Read(0));
   811  000906  0E00               	movlw	0
   812  000908  EC1C  F00D         	call	_I2C_Read
   813  00090C  6E5A               	movwf	??_main& (0+255),c
   814  00090E  505A               	movf	??_main,w,c
   815  000910  6E5C               	movwf	(??_main+2)& (0+255),c
   816  000912  6A5B               	clrf	(??_main+1)& (0+255),c
   817  000914  0E00               	movlw	0
   818  000916  EC1C  F00D         	call	_I2C_Read
   819  00091A  6E5D               	movwf	(??_main+3)& (0+255),c
   820  00091C  505D               	movf	??_main+3,w,c
   821  00091E  105B               	iorwf	??_main+1,w,c
   822  000920  0100               	movlb	0	; () banked
   823  000922  6F93               	movwf	main@Gy& (0+255),b
   824  000924  505C               	movf	??_main+2,w,c
   825  000926  6F94               	movwf	(main@Gy+1)& (0+255),b
   826                           
   827                           ; BSR set to: 0
   828                           ;PIC_MPU-6050.c: 43: Gz = (((int)I2C_Read(0)<<8) | (int)I2C_Read(1));
   829  000928  0E00               	movlw	0
   830  00092A  EC1C  F00D         	call	_I2C_Read
   831  00092E  6E5A               	movwf	??_main& (0+255),c
   832  000930  505A               	movf	??_main,w,c
   833  000932  6E5C               	movwf	(??_main+2)& (0+255),c
   834  000934  6A5B               	clrf	(??_main+1)& (0+255),c
   835  000936  0E01               	movlw	1
   836  000938  EC1C  F00D         	call	_I2C_Read
   837  00093C  6E5D               	movwf	(??_main+3)& (0+255),c
   838  00093E  505D               	movf	??_main+3,w,c
   839  000940  105B               	iorwf	??_main+1,w,c
   840  000942  0100               	movlb	0	; () banked
   841  000944  6F95               	movwf	main@Gz& (0+255),b
   842  000946  505C               	movf	??_main+2,w,c
   843  000948  6F96               	movwf	(main@Gz+1)& (0+255),b
   844                           
   845                           ; BSR set to: 0
   846                           ;PIC_MPU-6050.c: 44: I2C_Stop();
   847  00094A  EC8C  F00D         	call	_I2C_Stop	;wreg free
   848                           
   849                           ;PIC_MPU-6050.c: 46: Xa = (float)Ax/16384.0;
   850  00094E  C089  F009         	movff	main@Ax,___awtoft@c
   851  000952  C08A  F00A         	movff	main@Ax+1,___awtoft@c+1
   852  000956  EC8C  F00C         	call	___awtoft	;wreg free
   853  00095A  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   854  00095E  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   855  000962  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   856  000966  0E00               	movlw	0
   857  000968  6E10               	movwf	___ftdiv@f2,c
   858  00096A  0E80               	movlw	128
   859  00096C  6E11               	movwf	___ftdiv@f2+1,c
   860  00096E  0E46               	movlw	70
   861  000970  6E12               	movwf	___ftdiv@f2+2,c
   862  000972  ECBE  F009         	call	___ftdiv	;wreg free
   863  000976  C00D  F074         	movff	?___ftdiv,main@Xa
   864  00097A  C00E  F075         	movff	?___ftdiv+1,main@Xa+1
   865  00097E  C00F  F076         	movff	?___ftdiv+2,main@Xa+2
   866                           
   867                           ;PIC_MPU-6050.c: 47: Ya = (float)Ay/16384.0;
   868  000982  C08B  F009         	movff	main@Ay,___awtoft@c
   869  000986  C08C  F00A         	movff	main@Ay+1,___awtoft@c+1
   870  00098A  EC8C  F00C         	call	___awtoft	;wreg free
   871  00098E  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   872  000992  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   873  000996  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   874  00099A  0E00               	movlw	0
   875  00099C  6E10               	movwf	___ftdiv@f2,c
   876  00099E  0E80               	movlw	128
   877  0009A0  6E11               	movwf	___ftdiv@f2+1,c
   878  0009A2  0E46               	movlw	70
   879  0009A4  6E12               	movwf	___ftdiv@f2+2,c
   880  0009A6  ECBE  F009         	call	___ftdiv	;wreg free
   881  0009AA  C00D  F077         	movff	?___ftdiv,main@Ya
   882  0009AE  C00E  F078         	movff	?___ftdiv+1,main@Ya+1
   883  0009B2  C00F  F079         	movff	?___ftdiv+2,main@Ya+2
   884                           
   885                           ;PIC_MPU-6050.c: 48: Za = (float)Az/16384.0;
   886  0009B6  C08D  F009         	movff	main@Az,___awtoft@c
   887  0009BA  C08E  F00A         	movff	main@Az+1,___awtoft@c+1
   888  0009BE  EC8C  F00C         	call	___awtoft	;wreg free
   889  0009C2  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   890  0009C6  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   891  0009CA  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   892  0009CE  0E00               	movlw	0
   893  0009D0  6E10               	movwf	___ftdiv@f2,c
   894  0009D2  0E80               	movlw	128
   895  0009D4  6E11               	movwf	___ftdiv@f2+1,c
   896  0009D6  0E46               	movlw	70
   897  0009D8  6E12               	movwf	___ftdiv@f2+2,c
   898  0009DA  ECBE  F009         	call	___ftdiv	;wreg free
   899  0009DE  C00D  F07A         	movff	?___ftdiv,main@Za
   900  0009E2  C00E  F07B         	movff	?___ftdiv+1,main@Za+1
   901  0009E6  C00F  F07C         	movff	?___ftdiv+2,main@Za+2
   902                           
   903                           ;PIC_MPU-6050.c: 49: Xg = (float)Gx/131.0;
   904  0009EA  C091  F009         	movff	main@Gx,___awtoft@c
   905  0009EE  C092  F00A         	movff	main@Gx+1,___awtoft@c+1
   906  0009F2  EC8C  F00C         	call	___awtoft	;wreg free
   907  0009F6  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   908  0009FA  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   909  0009FE  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   910  000A02  0E00               	movlw	0
   911  000A04  6E10               	movwf	___ftdiv@f2,c
   912  000A06  0E03               	movlw	3
   913  000A08  6E11               	movwf	___ftdiv@f2+1,c
   914  000A0A  0E43               	movlw	67
   915  000A0C  6E12               	movwf	___ftdiv@f2+2,c
   916  000A0E  ECBE  F009         	call	___ftdiv	;wreg free
   917  000A12  C00D  F080         	movff	?___ftdiv,main@Xg
   918  000A16  C00E  F081         	movff	?___ftdiv+1,main@Xg+1
   919  000A1A  C00F  F082         	movff	?___ftdiv+2,main@Xg+2
   920                           
   921                           ;PIC_MPU-6050.c: 50: Yg = (float)Gy/131.0;
   922  000A1E  C093  F009         	movff	main@Gy,___awtoft@c
   923  000A22  C094  F00A         	movff	main@Gy+1,___awtoft@c+1
   924  000A26  EC8C  F00C         	call	___awtoft	;wreg free
   925  000A2A  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   926  000A2E  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   927  000A32  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   928  000A36  0E00               	movlw	0
   929  000A38  6E10               	movwf	___ftdiv@f2,c
   930  000A3A  0E03               	movlw	3
   931  000A3C  6E11               	movwf	___ftdiv@f2+1,c
   932  000A3E  0E43               	movlw	67
   933  000A40  6E12               	movwf	___ftdiv@f2+2,c
   934  000A42  ECBE  F009         	call	___ftdiv	;wreg free
   935  000A46  C00D  F083         	movff	?___ftdiv,main@Yg
   936  000A4A  C00E  F084         	movff	?___ftdiv+1,main@Yg+1
   937  000A4E  C00F  F085         	movff	?___ftdiv+2,main@Yg+2
   938                           
   939                           ;PIC_MPU-6050.c: 51: Zg = (float)Gz/131.0;
   940  000A52  C095  F009         	movff	main@Gz,___awtoft@c
   941  000A56  C096  F00A         	movff	main@Gz+1,___awtoft@c+1
   942  000A5A  EC8C  F00C         	call	___awtoft	;wreg free
   943  000A5E  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   944  000A62  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   945  000A66  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   946  000A6A  0E00               	movlw	0
   947  000A6C  6E10               	movwf	___ftdiv@f2,c
   948  000A6E  0E03               	movlw	3
   949  000A70  6E11               	movwf	___ftdiv@f2+1,c
   950  000A72  0E43               	movlw	67
   951  000A74  6E12               	movwf	___ftdiv@f2+2,c
   952  000A76  ECBE  F009         	call	___ftdiv	;wreg free
   953  000A7A  C00D  F086         	movff	?___ftdiv,main@Zg
   954  000A7E  C00E  F087         	movff	?___ftdiv+1,main@Zg+1
   955  000A82  C00F  F088         	movff	?___ftdiv+2,main@Zg+2
   956                           
   957                           ;PIC_MPU-6050.c: 52: t = ((float)T/340.00)+36.53;
   958  000A86  0E00               	movlw	0
   959  000A88  6E10               	movwf	___ftdiv@f2,c
   960  000A8A  0EAA               	movlw	170
   961  000A8C  6E11               	movwf	___ftdiv@f2+1,c
   962  000A8E  0E43               	movlw	67
   963  000A90  6E12               	movwf	___ftdiv@f2+2,c
   964  000A92  C08F  F009         	movff	main@T,___awtoft@c
   965  000A96  C090  F00A         	movff	main@T+1,___awtoft@c+1
   966  000A9A  EC8C  F00C         	call	___awtoft	;wreg free
   967  000A9E  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   968  000AA2  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   969  000AA6  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   970  000AAA  ECBE  F009         	call	___ftdiv	;wreg free
   971  000AAE  C00D  F01C         	movff	?___ftdiv,___ftadd@f1
   972  000AB2  C00E  F01D         	movff	?___ftdiv+1,___ftadd@f1+1
   973  000AB6  C00F  F01E         	movff	?___ftdiv+2,___ftadd@f1+2
   974  000ABA  0E1F               	movlw	31
   975  000ABC  6E1F               	movwf	___ftadd@f2,c
   976  000ABE  0E12               	movlw	18
   977  000AC0  6E20               	movwf	___ftadd@f2+1,c
   978  000AC2  0E42               	movlw	66
   979  000AC4  6E21               	movwf	___ftadd@f2+2,c
   980  000AC6  EC80  F007         	call	___ftadd	;wreg free
   981  000ACA  C01C  F07D         	movff	?___ftadd,main@t
   982  000ACE  C01D  F07E         	movff	?___ftadd+1,main@t+1
   983  000AD2  C01E  F07F         	movff	?___ftadd+2,main@t+2
   984                           
   985                           ;PIC_MPU-6050.c: 54: if(select == 0){
   986  000AD6  0100               	movlb	0	; () banked
   987  000AD8  5197               	movf	main@select& (0+255),w,b
   988  000ADA  A4D8               	btfss	status,2,c
   989  000ADC  D026               	goto	l163
   990                           
   991                           ; BSR set to: 0
   992                           ;PIC_MPU-6050.c: 55: strcpy(str1,"Ax:\0");
   993  000ADE  0E6A               	movlw	low main@str1
   994  000AE0  6E01               	movwf	strcpy@to,c
   995  000AE2  0E00               	movlw	high main@str1
   996  000AE4  6E02               	movwf	strcpy@to+1,c
   997  000AE6  0E0D               	movlw	low STR_1
   998  000AE8  6E03               	movwf	strcpy@from,c
   999  000AEA  0E08               	movlw	high STR_1
  1000  000AEC  6E04               	movwf	strcpy@from+1,c
  1001  000AEE  ECDB  F00C         	call	_strcpy	;wreg free
  1002                           
  1003                           ;PIC_MPU-6050.c: 56: strcpy(str2,"Ay:\0");
  1004  000AF2  0E6F               	movlw	low main@str2
  1005  000AF4  6E01               	movwf	strcpy@to,c
  1006  000AF6  0E00               	movlw	high main@str2
  1007  000AF8  6E02               	movwf	strcpy@to+1,c
  1008  000AFA  0E17               	movlw	low STR_2
  1009  000AFC  6E03               	movwf	strcpy@from,c
  1010  000AFE  0E08               	movlw	high STR_2
  1011  000B00  6E04               	movwf	strcpy@from+1,c
  1012  000B02  ECDB  F00C         	call	_strcpy	;wreg free
  1013                           
  1014                           ;PIC_MPU-6050.c: 57: escreve(str1,str2,Xa,Ya);
  1015  000B06  0E6F               	movlw	low main@str2
  1016  000B08  6E46               	movwf	escreve@str2,c
  1017  000B0A  C074  F047         	movff	main@Xa,escreve@N1
  1018  000B0E  C075  F048         	movff	main@Xa+1,escreve@N1+1
  1019  000B12  C076  F049         	movff	main@Xa+2,escreve@N1+2
  1020  000B16  C077  F04A         	movff	main@Ya,escreve@N2
  1021  000B1A  C078  F04B         	movff	main@Ya+1,escreve@N2+1
  1022  000B1E  C079  F04C         	movff	main@Ya+2,escreve@N2+2
  1023  000B22  0E6A               	movlw	main@str1& (0+255)
  1024  000B24  EC4A  F009         	call	_escreve
  1025                           
  1026                           ;PIC_MPU-6050.c: 58: }
  1027  000B28  D68C               	goto	l159
  1028  000B2A                     l163:
  1029                           
  1030                           ;PIC_MPU-6050.c: 59: else if(select == 1){
  1031  000B2A  0100               	movlb	0	; () banked
  1032  000B2C  0597               	decf	main@select& (0+255),w,b
  1033  000B2E  A4D8               	btfss	status,2,c
  1034  000B30  D026               	goto	l165
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;PIC_MPU-6050.c: 60: strcpy(str1,"Az:\0");
  1038  000B32  0E6A               	movlw	low main@str1
  1039  000B34  6E01               	movwf	strcpy@to,c
  1040  000B36  0E00               	movlw	high main@str1
  1041  000B38  6E02               	movwf	strcpy@to+1,c
  1042  000B3A  0E21               	movlw	low STR_3
  1043  000B3C  6E03               	movwf	strcpy@from,c
  1044  000B3E  0E08               	movlw	high STR_3
  1045  000B40  6E04               	movwf	strcpy@from+1,c
  1046  000B42  ECDB  F00C         	call	_strcpy	;wreg free
  1047                           
  1048                           ;PIC_MPU-6050.c: 61: strcpy(str2,"Gx:\0");
  1049  000B46  0E6F               	movlw	low main@str2
  1050  000B48  6E01               	movwf	strcpy@to,c
  1051  000B4A  0E00               	movlw	high main@str2
  1052  000B4C  6E02               	movwf	strcpy@to+1,c
  1053  000B4E  0E12               	movlw	low STR_4
  1054  000B50  6E03               	movwf	strcpy@from,c
  1055  000B52  0E08               	movlw	high STR_4
  1056  000B54  6E04               	movwf	strcpy@from+1,c
  1057  000B56  ECDB  F00C         	call	_strcpy	;wreg free
  1058                           
  1059                           ;PIC_MPU-6050.c: 62: escreve(str1,str2,Za,Xg);
  1060  000B5A  0E6F               	movlw	low main@str2
  1061  000B5C  6E46               	movwf	escreve@str2,c
  1062  000B5E  C07A  F047         	movff	main@Za,escreve@N1
  1063  000B62  C07B  F048         	movff	main@Za+1,escreve@N1+1
  1064  000B66  C07C  F049         	movff	main@Za+2,escreve@N1+2
  1065  000B6A  C080  F04A         	movff	main@Xg,escreve@N2
  1066  000B6E  C081  F04B         	movff	main@Xg+1,escreve@N2+1
  1067  000B72  C082  F04C         	movff	main@Xg+2,escreve@N2+2
  1068  000B76  0E6A               	movlw	main@str1& (0+255)
  1069  000B78  EC4A  F009         	call	_escreve
  1070                           
  1071                           ;PIC_MPU-6050.c: 63: }
  1072  000B7C  D662               	goto	l159
  1073  000B7E                     l165:
  1074                           
  1075                           ;PIC_MPU-6050.c: 64: else if(select == 2){
  1076  000B7E  0E02               	movlw	2
  1077  000B80  0100               	movlb	0	; () banked
  1078  000B82  1997               	xorwf	main@select& (0+255),w,b
  1079  000B84  A4D8               	btfss	status,2,c
  1080  000B86  D026               	goto	l167
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;PIC_MPU-6050.c: 65: strcpy(str1,"Gy:\0");
  1084  000B88  0E6A               	movlw	low main@str1
  1085  000B8A  6E01               	movwf	strcpy@to,c
  1086  000B8C  0E00               	movlw	high main@str1
  1087  000B8E  6E02               	movwf	strcpy@to+1,c
  1088  000B90  0E1C               	movlw	low STR_5
  1089  000B92  6E03               	movwf	strcpy@from,c
  1090  000B94  0E08               	movlw	high STR_5
  1091  000B96  6E04               	movwf	strcpy@from+1,c
  1092  000B98  ECDB  F00C         	call	_strcpy	;wreg free
  1093                           
  1094                           ;PIC_MPU-6050.c: 66: strcpy(str2,"Gz:\0");
  1095  000B9C  0E6F               	movlw	low main@str2
  1096  000B9E  6E01               	movwf	strcpy@to,c
  1097  000BA0  0E00               	movlw	high main@str2
  1098  000BA2  6E02               	movwf	strcpy@to+1,c
  1099  000BA4  0E26               	movlw	low STR_6
  1100  000BA6  6E03               	movwf	strcpy@from,c
  1101  000BA8  0E08               	movlw	high STR_6
  1102  000BAA  6E04               	movwf	strcpy@from+1,c
  1103  000BAC  ECDB  F00C         	call	_strcpy	;wreg free
  1104                           
  1105                           ;PIC_MPU-6050.c: 67: escreve(str1,str2,Yg,Zg);
  1106  000BB0  0E6F               	movlw	low main@str2
  1107  000BB2  6E46               	movwf	escreve@str2,c
  1108  000BB4  C083  F047         	movff	main@Yg,escreve@N1
  1109  000BB8  C084  F048         	movff	main@Yg+1,escreve@N1+1
  1110  000BBC  C085  F049         	movff	main@Yg+2,escreve@N1+2
  1111  000BC0  C086  F04A         	movff	main@Zg,escreve@N2
  1112  000BC4  C087  F04B         	movff	main@Zg+1,escreve@N2+1
  1113  000BC8  C088  F04C         	movff	main@Zg+2,escreve@N2+2
  1114  000BCC  0E6A               	movlw	main@str1& (0+255)
  1115  000BCE  EC4A  F009         	call	_escreve
  1116                           
  1117                           ;PIC_MPU-6050.c: 68: }
  1118  000BD2  D637               	goto	l159
  1119  000BD4                     l167:
  1120                           
  1121                           ;PIC_MPU-6050.c: 69: else if(select == 3){
  1122  000BD4  0E03               	movlw	3
  1123  000BD6  0100               	movlb	0	; () banked
  1124  000BD8  1997               	xorwf	main@select& (0+255),w,b
  1125  000BDA  A4D8               	btfss	status,2,c
  1126  000BDC  D632               	goto	l159
  1127  000BDE                     u2510:
  1128                           
  1129                           ; BSR set to: 0
  1130                           
  1131                           ; BSR set to: 0
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;PIC_MPU-6050.c: 70: while (BusyXLCD());
  1135  000BDE  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1136  000BE2  0900               	iorlw	0
  1137  000BE4  A4D8               	btfss	status,2,c
  1138  000BE6  D7FB               	goto	u2510
  1139                           
  1140                           ;PIC_MPU-6050.c: 71: SetDDRamAddr(0x02);
  1141  000BE8  0E02               	movlw	2
  1142  000BEA  EC08  F00C         	call	_SetDDRamAddr
  1143  000BEE  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1144  000BF2  0900               	iorlw	0
  1145  000BF4  A4D8               	btfss	status,2,c
  1146  000BF6  D7FB               	goto	l174
  1147                           
  1148                           ;PIC_MPU-6050.c: 73: putrsXLCD("TEMPERATURA");
  1149  000BF8  0E01               	movlw	low STR_7
  1150  000BFA  6E02               	movwf	putrsXLCD@buffer,c
  1151  000BFC  0E08               	movlw	high STR_7
  1152  000BFE  6E03               	movwf	putrsXLCD@buffer+1,c
  1153  000C00  ECDA  F00B         	call	_putrsXLCD	;wreg free
  1154                           
  1155                           ;PIC_MPU-6050.c: 74: traduz(t, &txt);
  1156  000C04  C07D  F028         	movff	main@t,traduz@num
  1157  000C08  C07E  F029         	movff	main@t+1,traduz@num+1
  1158  000C0C  C07F  F02A         	movff	main@t+2,traduz@num+2
  1159  000C10  0E60               	movlw	low main@txt
  1160  000C12  6E2B               	movwf	traduz@txt,c
  1161  000C14  0E00               	movlw	high main@txt
  1162  000C16  6E2C               	movwf	traduz@txt+1,c
  1163  000C18  EC2A  F006         	call	_traduz	;wreg free
  1164  000C1C  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1165  000C20  0900               	iorlw	0
  1166  000C22  A4D8               	btfss	status,2,c
  1167  000C24  D7FB               	goto	l177
  1168                           
  1169                           ;PIC_MPU-6050.c: 76: SetDDRamAddr(0x44);
  1170  000C26  0E44               	movlw	68
  1171  000C28  EC08  F00C         	call	_SetDDRamAddr
  1172  000C2C  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1173  000C30  0900               	iorlw	0
  1174  000C32  A4D8               	btfss	status,2,c
  1175  000C34  D7FB               	goto	l180
  1176                           
  1177                           ;PIC_MPU-6050.c: 78: putrsXLCD(txt);
  1178  000C36  0E60               	movlw	low main@txt
  1179  000C38  6E02               	movwf	putrsXLCD@buffer,c
  1180  000C3A  0E00               	movlw	high main@txt
  1181  000C3C  6E03               	movwf	putrsXLCD@buffer+1,c
  1182  000C3E  ECDA  F00B         	call	_putrsXLCD	;wreg free
  1183                           
  1184                           ;PIC_MPU-6050.c: 79: Mydelay(500);
  1185  000C42  0E01               	movlw	1
  1186  000C44  6E02               	movwf	Mydelay@tempo+1,c
  1187  000C46  0EF4               	movlw	244
  1188  000C48  6E01               	movwf	Mydelay@tempo,c
  1189  000C4A  ECA8  F00C         	call	_Mydelay	;wreg free
  1190                           
  1191                           ;PIC_MPU-6050.c: 80: limpa();
  1192  000C4E  EC2E  F00D         	call	_limpa	;wreg free
  1193  000C52  D5F7               	goto	l159
  1194  000C54                     __end_of_main:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _strcpy *****************
  1200 ;; Defined at:
  1201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  to              2    0[COMRAM] PTR unsigned char 
  1204 ;;		 -> main@str2(5), main@str1(5), 
  1205 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1206 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(5), 
  1207 ;;		 -> STR_2(5), STR_1(5), 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1210 ;;		 -> main@str2(5), main@str1(5), 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    0[COMRAM] PTR unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         4       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        6 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text1
  1234  0019B6                     __ptext1:
  1235                           	opt stack 0
  1236  0019B6                     _strcpy:
  1237                           	opt stack 30
  1238                           
  1239                           ;incstack = 0
  1240  0019B6  C001  F005         	movff	strcpy@to,strcpy@cp
  1241  0019BA  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  1242  0019BE  D004               	goto	l912
  1243  0019C0  4A05               	infsnz	strcpy@cp,f,c
  1244  0019C2  2A06               	incf	strcpy@cp+1,f,c
  1245  0019C4  4A03               	infsnz	strcpy@from,f,c
  1246  0019C6  2A04               	incf	strcpy@from+1,f,c
  1247  0019C8                     l912:
  1248  0019C8  C003  FFF6         	movff	strcpy@from,tblptrl
  1249  0019CC  C004  FFF7         	movff	strcpy@from+1,tblptrh
  1250  0019D0                     	if	0	;tblptru may be non-zero
  1251  0019D0                     	endif
  1252  0019D0                     	if	0	;tblptru may be non-zero
  1253  0019D0                     	endif
  1254  0019D0  C005  FFD9         	movff	strcpy@cp,fsr2l
  1255  0019D4  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  1256  0019D8  0008               	tblrd		*
  1257  0019DA  CFF5 FFDF          	movff	tablat,indf2
  1258  0019DE  50DF               	movf	indf2,w,c
  1259  0019E0  B4D8               	btfsc	status,2,c
  1260  0019E2  0012               	return	
  1261  0019E4  D7ED               	goto	l913
  1262  0019E6                     __end_of_strcpy:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           indf2	equ	0xFDF
  1269                           fsr2h	equ	0xFDA
  1270                           fsr2l	equ	0xFD9
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _putrsXLCD *****************
  1274 ;; Defined at:
  1275 ;;		line 52 in file "../mylcd.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  1278 ;;		 -> main@txt(10), STR_7(12), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         2       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        2 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    2
  1297 ;; This function calls:
  1298 ;;		_BusyXLCD
  1299 ;;		_WriteDataXLCD
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text2
  1306  0017B4                     __ptext2:
  1307                           	opt stack 0
  1308  0017B4                     _putrsXLCD:
  1309                           	opt stack 28
  1310                           
  1311                           ;mylcd.c: 54: while(*buffer)
  1312                           
  1313                           ;incstack = 0
  1314  0017B4  D019               	goto	l300
  1315  0017B6                     
  1316                           ;mylcd.c: 55: {
  1317                           ;mylcd.c: 56: while(BusyXLCD());
  1318  0017B6  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1319  0017BA  0900               	iorlw	0
  1320  0017BC  A4D8               	btfss	status,2,c
  1321  0017BE  D7FB               	goto	l301
  1322                           
  1323                           ;mylcd.c: 57: WriteDataXLCD(*buffer);
  1324  0017C0  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1325  0017C4  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1326  0017C8  6AF8               	clrf	tblptru,c
  1327  0017CA  0E07               	movlw	(high __ramtop+-1)
  1328  0017CC  64F7               	cpfsgt	tblptrh,c
  1329  0017CE  D003               	bra	u2367
  1330  0017D0  0008               	tblrd		*
  1331  0017D2  50F5               	movf	tablat,w,c
  1332  0017D4  D005               	bra	u2360
  1333  0017D6                     u2367:
  1334  0017D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  1335  0017DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  1336  0017DE  50E7               	movf	indf1,w,c
  1337  0017E0                     u2360:
  1338  0017E0  EC31  F00C         	call	_WriteDataXLCD
  1339                           
  1340                           ;mylcd.c: 58: buffer++;
  1341  0017E4  4A02               	infsnz	putrsXLCD@buffer,f,c
  1342  0017E6  2A03               	incf	putrsXLCD@buffer+1,f,c
  1343  0017E8                     l300:
  1344  0017E8  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1345  0017EC  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1346  0017F0  6AF8               	clrf	tblptru,c
  1347  0017F2  0E07               	movlw	(high __ramtop+-1)
  1348  0017F4  64F7               	cpfsgt	tblptrh,c
  1349  0017F6  D003               	bra	u2377
  1350  0017F8  0008               	tblrd		*
  1351  0017FA  50F5               	movf	tablat,w,c
  1352  0017FC  D005               	bra	u2370
  1353  0017FE                     u2377:
  1354  0017FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  1355  001802  CFF7 FFE2          	movff	tblptrh,fsr1h
  1356  001806  50E7               	movf	indf1,w,c
  1357  001808                     u2370:
  1358  001808  0900               	iorlw	0
  1359  00180A  B4D8               	btfsc	status,2,c
  1360  00180C  0012               	return	
  1361  00180E  D7D3               	goto	l301
  1362  001810                     __end_of_putrsXLCD:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           indf1	equ	0xFE7
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _inic_XLCD *****************
  1377 ;; Defined at:
  1378 ;;		line 127 in file "../PIC_MPU-6050.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    3
  1399 ;; This function calls:
  1400 ;;		_BusyXLCD
  1401 ;;		_OpenXLCD
  1402 ;;		_WriteCmdXLCD
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409  001984                     __ptext3:
  1410                           	opt stack 0
  1411  001984                     _inic_XLCD:
  1412                           	opt stack 27
  1413                           
  1414                           ;PIC_MPU-6050.c: 128: OpenXLCD(0b00101100 & 0b00111000);
  1415                           
  1416                           ;incstack = 0
  1417  001984  0E28               	movlw	40
  1418  001986  EC88  F00A         	call	_OpenXLCD
  1419  00198A  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1420  00198E  0900               	iorlw	0
  1421  001990  A4D8               	btfss	status,2,c
  1422  001992  D7FB               	goto	l200
  1423                           
  1424                           ;PIC_MPU-6050.c: 130: WriteCmdXLCD(0x06);
  1425  001994  0E06               	movlw	6
  1426  001996  EC50  F00C         	call	_WriteCmdXLCD
  1427  00199A  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1428  00199E  0900               	iorlw	0
  1429  0019A0  A4D8               	btfss	status,2,c
  1430  0019A2  D7FB               	goto	l203
  1431                           
  1432                           ;PIC_MPU-6050.c: 132: WriteCmdXLCD(0x0C);
  1433  0019A4  0E0C               	movlw	12
  1434  0019A6  EC50  F00C         	call	_WriteCmdXLCD
  1435  0019AA  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1436  0019AE  0900               	iorlw	0
  1437  0019B0  B4D8               	btfsc	status,2,c
  1438  0019B2  0012               	return	
  1439  0019B4  D7FA               	goto	l206
  1440  0019B6                     __end_of_inic_XLCD:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           indf1	equ	0xFE7
  1447                           fsr1h	equ	0xFE2
  1448                           fsr1l	equ	0xFE1
  1449                           indf2	equ	0xFDF
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _OpenXLCD *****************
  1455 ;; Defined at:
  1456 ;;		line 63 in file "../mylcd.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  lcdtype         1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		_BusyXLCD
  1479 ;;		_Delay10KTCYx
  1480 ;;		_DelayPORXLCD
  1481 ;;		_SetDDRamAddr
  1482 ;;		_WriteCmdXLCD
  1483 ;; This function is called by:
  1484 ;;		_inic_XLCD
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text4
  1489  001510                     __ptext4:
  1490                           	opt stack 0
  1491  001510                     _OpenXLCD:
  1492                           	opt stack 27
  1493                           
  1494                           ;incstack = 0
  1495                           ;OpenXLCD@lcdtype stored from wreg
  1496  001510  6E05               	movwf	OpenXLCD@lcdtype,c
  1497                           
  1498                           ;mylcd.c: 75: PORTD &= 0xf0;
  1499  001512  0EF0               	movlw	240
  1500  001514  1683               	andwf	3971,f,c	;volatile
  1501                           
  1502                           ;mylcd.c: 76: TRISD &= 0xF0;
  1503  001516  0EF0               	movlw	240
  1504  001518  1695               	andwf	3989,f,c	;volatile
  1505                           
  1506                           ;mylcd.c: 79: TRISDbits.TRISD5 = 0;
  1507  00151A  9A95               	bcf	3989,5,c	;volatile
  1508                           
  1509                           ;mylcd.c: 80: TRISDbits.TRISD6 = 0;
  1510  00151C  9C95               	bcf	3989,6,c	;volatile
  1511                           
  1512                           ;mylcd.c: 81: TRISDbits.TRISD4 = 0;
  1513  00151E  9895               	bcf	3989,4,c	;volatile
  1514                           
  1515                           ;mylcd.c: 82: LATDbits.LATD5 = 0;
  1516  001520  9A8C               	bcf	3980,5,c	;volatile
  1517                           
  1518                           ;mylcd.c: 83: LATDbits.LATD6 = 0;
  1519  001522  9C8C               	bcf	3980,6,c	;volatile
  1520                           
  1521                           ;mylcd.c: 84: LATDbits.LATD4 = 0;
  1522  001524  988C               	bcf	3980,4,c	;volatile
  1523                           
  1524                           ;mylcd.c: 87: DelayPORXLCD();
  1525  001526  EC84  F00D         	call	_DelayPORXLCD	;wreg free
  1526                           
  1527                           ;mylcd.c: 89: WriteCmdXLCD(0x30);
  1528  00152A  0E30               	movlw	48
  1529  00152C  EC50  F00C         	call	_WriteCmdXLCD
  1530                           
  1531                           ;mylcd.c: 90: Delay10KTCYx(0x05);
  1532  001530  0E05               	movlw	5
  1533  001532  EC59  F00D         	call	_Delay10KTCYx
  1534                           
  1535                           ;mylcd.c: 92: WriteCmdXLCD(0x30);
  1536  001536  0E30               	movlw	48
  1537  001538  EC50  F00C         	call	_WriteCmdXLCD
  1538                           
  1539                           ;mylcd.c: 93: Delay10KTCYx(0x01);
  1540  00153C  0E01               	movlw	1
  1541  00153E  EC59  F00D         	call	_Delay10KTCYx
  1542                           
  1543                           ;mylcd.c: 96: WriteCmdXLCD(0x32);
  1544  001542  0E32               	movlw	50
  1545  001544  EC50  F00C         	call	_WriteCmdXLCD
  1546  001548  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1547  00154C  0900               	iorlw	0
  1548  00154E  A4D8               	btfss	status,2,c
  1549  001550  D7FB               	goto	l310
  1550  001552                     u2120:
  1551                           
  1552                           ;mylcd.c: 102: while(BusyXLCD());
  1553  001552  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1554  001556  0900               	iorlw	0
  1555  001558  A4D8               	btfss	status,2,c
  1556  00155A  D7FB               	goto	u2120
  1557                           
  1558                           ;mylcd.c: 103: WriteCmdXLCD(lcdtype);
  1559  00155C  5005               	movf	OpenXLCD@lcdtype,w,c
  1560  00155E  EC50  F00C         	call	_WriteCmdXLCD
  1561  001562  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1562  001566  0900               	iorlw	0
  1563  001568  A4D8               	btfss	status,2,c
  1564  00156A  D7FB               	goto	l316
  1565                           
  1566                           ;mylcd.c: 107: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1567  00156C  0E08               	movlw	8
  1568  00156E  EC50  F00C         	call	_WriteCmdXLCD
  1569  001572  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1570  001576  0900               	iorlw	0
  1571  001578  A4D8               	btfss	status,2,c
  1572  00157A  D7FB               	goto	l319
  1573                           
  1574                           ;mylcd.c: 109: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1575  00157C  0E0F               	movlw	15
  1576  00157E  EC50  F00C         	call	_WriteCmdXLCD
  1577  001582  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1578  001586  0900               	iorlw	0
  1579  001588  A4D8               	btfss	status,2,c
  1580  00158A  D7FB               	goto	l322
  1581                           
  1582                           ;mylcd.c: 113: WriteCmdXLCD(0x01);
  1583  00158C  0E01               	movlw	1
  1584  00158E  EC50  F00C         	call	_WriteCmdXLCD
  1585  001592  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1586  001596  0900               	iorlw	0
  1587  001598  A4D8               	btfss	status,2,c
  1588  00159A  D7FB               	goto	l325
  1589                           
  1590                           ;mylcd.c: 117: WriteCmdXLCD(0b00000100);
  1591  00159C  0E04               	movlw	4
  1592  00159E  EC50  F00C         	call	_WriteCmdXLCD
  1593  0015A2  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1594  0015A6  0900               	iorlw	0
  1595  0015A8  A4D8               	btfss	status,2,c
  1596  0015AA  D7FB               	goto	l328
  1597                           
  1598                           ;mylcd.c: 121: SetDDRamAddr(0x80);
  1599  0015AC  0E80               	movlw	128
  1600  0015AE  EC08  F00C         	call	_SetDDRamAddr
  1601  0015B2  0012               	return	
  1602  0015B4                     __end_of_OpenXLCD:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           indf1	equ	0xFE7
  1609                           fsr1h	equ	0xFE2
  1610                           fsr1l	equ	0xFE1
  1611                           indf2	equ	0xFDF
  1612                           fsr2h	equ	0xFDA
  1613                           fsr2l	equ	0xFD9
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function _DelayPORXLCD *****************
  1617 ;; Defined at:
  1618 ;;		line 234 in file "../PIC_MPU-6050.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1635 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        1 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_OpenXLCD
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text5
  1646  001B08                     __ptext5:
  1647                           	opt stack 0
  1648  001B08                     _DelayPORXLCD:
  1649                           	opt stack 28
  1650                           
  1651                           ;PIC_MPU-6050.c: 235: _delay((unsigned long)((15)*(20000000/4000.0)));
  1652                           
  1653                           ;incstack = 0
  1654  001B08  0E62               	movlw	98
  1655  001B0A  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1656  001B0C  0E66               	movlw	102
  1657  001B0E                     u2577:
  1658  001B0E  2EE8               	decfsz	wreg,f,c
  1659  001B10  D7FE               	bra	u2577
  1660  001B12  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1661  001B14  D7FC               	bra	u2577
  1662  001B16  0012               	return		;funcret
  1663  001B18                     __end_of_DelayPORXLCD:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           wreg	equ	0xFE8
  1670                           indf1	equ	0xFE7
  1671                           fsr1h	equ	0xFE2
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _Delay10KTCYx *****************
  1679 ;; Defined at:
  1680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10ktcyx.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  unit            1    wreg     unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  unit            1    1[COMRAM] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0
  1695 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1696 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1697 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:        2 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_OpenXLCD
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text6
  1708  001AB2                     __ptext6:
  1709                           	opt stack 0
  1710  001AB2                     _Delay10KTCYx:
  1711                           	opt stack 28
  1712                           
  1713                           ;incstack = 0
  1714                           ;Delay10KTCYx@unit stored from wreg
  1715  001AB2  6E02               	movwf	Delay10KTCYx@unit,c
  1716  001AB4                     l559:
  1717  001AB4  0E0D               	movlw	13
  1718  001AB6  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1719  001AB8  0EFC               	movlw	252
  1720  001ABA                     u2587:
  1721  001ABA  2EE8               	decfsz	wreg,f,c
  1722  001ABC  D7FE               	bra	u2587
  1723  001ABE  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1724  001AC0  D7FC               	bra	u2587
  1725  001AC2  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1726  001AC4  D7F7               	goto	l559
  1727  001AC6  0012               	return	
  1728  001AC8                     __end_of_Delay10KTCYx:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           wreg	equ	0xFE8
  1735                           indf1	equ	0xFE7
  1736                           fsr1h	equ	0xFE2
  1737                           fsr1l	equ	0xFE1
  1738                           indf2	equ	0xFDF
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function _escreve *****************
  1744 ;; Defined at:
  1745 ;;		line 204 in file "../PIC_MPU-6050.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  str1            1    wreg     unsigned char 
  1748 ;;  str2            1   69[COMRAM] unsigned char 
  1749 ;;  N1              3   70[COMRAM] float 
  1750 ;;  N2              3   73[COMRAM] float 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  str1            1   88[COMRAM] unsigned char 
  1753 ;;  txt            10   78[COMRAM] unsigned char [10]
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         7       0       0       0       0       0       0       0       0
  1764 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1765 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1766 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1767 ;;Total ram usage:       20 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    3
  1770 ;; This function calls:
  1771 ;;		_BusyXLCD
  1772 ;;		_Mydelay
  1773 ;;		_SetDDRamAddr
  1774 ;;		_limpa
  1775 ;;		_putsXLCD
  1776 ;;		_traduz
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text7
  1783  001294                     __ptext7:
  1784                           	opt stack 0
  1785  001294                     _escreve:
  1786                           	opt stack 27
  1787                           
  1788                           ;incstack = 0
  1789                           ;escreve@str1 stored from wreg
  1790  001294  6E59               	movwf	escreve@str1,c
  1791  001296                     
  1792                           ;PIC_MPU-6050.c: 205: char txt[10];
  1793                           ;PIC_MPU-6050.c: 206: while (BusyXLCD());
  1794  001296  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1795  00129A  0900               	iorlw	0
  1796  00129C  A4D8               	btfss	status,2,c
  1797  00129E  D7FB               	goto	l2720
  1798                           
  1799                           ;PIC_MPU-6050.c: 207: SetDDRamAddr(0x00);
  1800  0012A0  0E00               	movlw	0
  1801  0012A2  EC08  F00C         	call	_SetDDRamAddr
  1802  0012A6  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1803  0012AA  0900               	iorlw	0
  1804  0012AC  A4D8               	btfss	status,2,c
  1805  0012AE  D7FB               	goto	l243
  1806                           
  1807                           ;PIC_MPU-6050.c: 209: putsXLCD(str1);
  1808  0012B0  5059               	movf	escreve@str1,w,c
  1809  0012B2  6E4D               	movwf	??_escreve& (0+255),c
  1810  0012B4  6A4E               	clrf	(??_escreve+1)& (0+255),c
  1811  0012B6  C04D  F002         	movff	??_escreve,putsXLCD@buffer
  1812  0012BA  C04E  F003         	movff	??_escreve+1,putsXLCD@buffer+1
  1813  0012BE  ECF3  F00C         	call	_putsXLCD	;wreg free
  1814                           
  1815                           ;PIC_MPU-6050.c: 210: traduz(N1, &txt);
  1816  0012C2  C047  F028         	movff	escreve@N1,traduz@num
  1817  0012C6  C048  F029         	movff	escreve@N1+1,traduz@num+1
  1818  0012CA  C049  F02A         	movff	escreve@N1+2,traduz@num+2
  1819  0012CE  0E4F               	movlw	low escreve@txt
  1820  0012D0  6E2B               	movwf	traduz@txt,c
  1821  0012D2  0E00               	movlw	high escreve@txt
  1822  0012D4  6E2C               	movwf	traduz@txt+1,c
  1823  0012D6  EC2A  F006         	call	_traduz	;wreg free
  1824  0012DA  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1825  0012DE  0900               	iorlw	0
  1826  0012E0  A4D8               	btfss	status,2,c
  1827  0012E2  D7FB               	goto	l246
  1828                           
  1829                           ;PIC_MPU-6050.c: 212: SetDDRamAddr(0x03);
  1830  0012E4  0E03               	movlw	3
  1831  0012E6  EC08  F00C         	call	_SetDDRamAddr
  1832  0012EA  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1833  0012EE  0900               	iorlw	0
  1834  0012F0  A4D8               	btfss	status,2,c
  1835  0012F2  D7FB               	goto	l249
  1836                           
  1837                           ;PIC_MPU-6050.c: 214: putsXLCD(txt);
  1838  0012F4  0E4F               	movlw	low escreve@txt
  1839  0012F6  6E02               	movwf	putsXLCD@buffer,c
  1840  0012F8  0E00               	movlw	high escreve@txt
  1841  0012FA  6E03               	movwf	putsXLCD@buffer+1,c
  1842  0012FC  ECF3  F00C         	call	_putsXLCD	;wreg free
  1843  001300  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1844  001304  0900               	iorlw	0
  1845  001306  A4D8               	btfss	status,2,c
  1846  001308  D7FB               	goto	l252
  1847                           
  1848                           ;PIC_MPU-6050.c: 216: SetDDRamAddr(0x40);
  1849  00130A  0E40               	movlw	64
  1850  00130C  EC08  F00C         	call	_SetDDRamAddr
  1851  001310  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1852  001314  0900               	iorlw	0
  1853  001316  A4D8               	btfss	status,2,c
  1854  001318  D7FB               	goto	l255
  1855                           
  1856                           ;PIC_MPU-6050.c: 218: putsXLCD(str2);
  1857  00131A  5046               	movf	escreve@str2,w,c
  1858  00131C  6E4D               	movwf	??_escreve& (0+255),c
  1859  00131E  6A4E               	clrf	(??_escreve+1)& (0+255),c
  1860  001320  C04D  F002         	movff	??_escreve,putsXLCD@buffer
  1861  001324  C04E  F003         	movff	??_escreve+1,putsXLCD@buffer+1
  1862  001328  ECF3  F00C         	call	_putsXLCD	;wreg free
  1863                           
  1864                           ;PIC_MPU-6050.c: 219: traduz(N2, &txt);
  1865  00132C  C04A  F028         	movff	escreve@N2,traduz@num
  1866  001330  C04B  F029         	movff	escreve@N2+1,traduz@num+1
  1867  001334  C04C  F02A         	movff	escreve@N2+2,traduz@num+2
  1868  001338  0E4F               	movlw	low escreve@txt
  1869  00133A  6E2B               	movwf	traduz@txt,c
  1870  00133C  0E00               	movlw	high escreve@txt
  1871  00133E  6E2C               	movwf	traduz@txt+1,c
  1872  001340  EC2A  F006         	call	_traduz	;wreg free
  1873  001344  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1874  001348  0900               	iorlw	0
  1875  00134A  A4D8               	btfss	status,2,c
  1876  00134C  D7FB               	goto	l258
  1877                           
  1878                           ;PIC_MPU-6050.c: 221: SetDDRamAddr(0x43);
  1879  00134E  0E43               	movlw	67
  1880  001350  EC08  F00C         	call	_SetDDRamAddr
  1881  001354  EC6F  F00C         	call	_BusyXLCD	;wreg free
  1882  001358  0900               	iorlw	0
  1883  00135A  A4D8               	btfss	status,2,c
  1884  00135C  D7FB               	goto	l261
  1885                           
  1886                           ;PIC_MPU-6050.c: 223: putsXLCD(txt);
  1887  00135E  0E4F               	movlw	low escreve@txt
  1888  001360  6E02               	movwf	putsXLCD@buffer,c
  1889  001362  0E00               	movlw	high escreve@txt
  1890  001364  6E03               	movwf	putsXLCD@buffer+1,c
  1891  001366  ECF3  F00C         	call	_putsXLCD	;wreg free
  1892                           
  1893                           ;PIC_MPU-6050.c: 224: Mydelay(500);
  1894  00136A  0E01               	movlw	1
  1895  00136C  6E02               	movwf	Mydelay@tempo+1,c
  1896  00136E  0EF4               	movlw	244
  1897  001370  6E01               	movwf	Mydelay@tempo,c
  1898  001372  ECA8  F00C         	call	_Mydelay	;wreg free
  1899                           
  1900                           ;PIC_MPU-6050.c: 225: limpa();
  1901  001376  EC2E  F00D         	call	_limpa	;wreg free
  1902  00137A  0012               	return		;funcret
  1903  00137C                     __end_of_escreve:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           wreg	equ	0xFE8
  1910                           indf1	equ	0xFE7
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           indf2	equ	0xFDF
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _traduz *****************
  1919 ;; Defined at:
  1920 ;;		line 140 in file "../PIC_MPU-6050.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  num             3   39[COMRAM] float 
  1923 ;;  txt             2   42[COMRAM] PTR unsigned char 
  1924 ;;		 -> escreve@txt(10), main@txt(10), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  aux             2   58[COMRAM] int 
  1927 ;;  stringh        10   45[COMRAM] unsigned char [10]
  1928 ;;  pfloat          3   60[COMRAM] float 
  1929 ;;  aux             3   55[COMRAM] float 
  1930 ;;  i               2   67[COMRAM] int 
  1931 ;;  j               2   65[COMRAM] int 
  1932 ;;  pint            2   63[COMRAM] int 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         5       0       0       0       0       0       0       0       0
  1943 ;;      Locals:        24       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1945 ;;      Totals:        30       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:       30 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    2
  1949 ;; This function calls:
  1950 ;;		___awdiv
  1951 ;;		___awmod
  1952 ;;		___awtoft
  1953 ;;		___ftadd
  1954 ;;		___ftge
  1955 ;;		___ftmul
  1956 ;;		___ftneg
  1957 ;;		___fttol
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;;		_escreve
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text8
  1965  000C54                     __ptext8:
  1966                           	opt stack 0
  1967  000C54                     _traduz:
  1968                           	opt stack 28
  1969                           
  1970                           ;PIC_MPU-6050.c: 141: float aux,pfloat;
  1971                           ;PIC_MPU-6050.c: 142: int i,j,pint;
  1972                           ;PIC_MPU-6050.c: 143: char stringh[10];
  1973                           ;PIC_MPU-6050.c: 144: j=1;
  1974                           
  1975                           ;incstack = 0
  1976  000C54  0E00               	movlw	0
  1977  000C56  6E43               	movwf	traduz@j+1,c
  1978  000C58  0E01               	movlw	1
  1979  000C5A  6E42               	movwf	traduz@j,c
  1980                           
  1981                           ;PIC_MPU-6050.c: 145: if (num < 0){
  1982  000C5C  AE2A               	btfss	traduz@num+2,7,c
  1983  000C5E  D01A               	goto	l217
  1984                           
  1985                           ;PIC_MPU-6050.c: 146: aux = (num * -1);
  1986  000C60  C028  F009         	movff	traduz@num,___ftmul@f1
  1987  000C64  C029  F00A         	movff	traduz@num+1,___ftmul@f1+1
  1988  000C68  C02A  F00B         	movff	traduz@num+2,___ftmul@f1+2
  1989  000C6C  0E00               	movlw	0
  1990  000C6E  6E0C               	movwf	___ftmul@f2,c
  1991  000C70  0E80               	movlw	128
  1992  000C72  6E0D               	movwf	___ftmul@f2+1,c
  1993  000C74  0EBF               	movlw	191
  1994  000C76  6E0E               	movwf	___ftmul@f2+2,c
  1995  000C78  ECD0  F008         	call	___ftmul	;wreg free
  1996  000C7C  C009  F038         	movff	?___ftmul,traduz@aux
  1997  000C80  C00A  F039         	movff	?___ftmul+1,traduz@aux+1
  1998  000C84  C00B  F03A         	movff	?___ftmul+2,traduz@aux+2
  1999                           
  2000                           ;PIC_MPU-6050.c: 147: txt[0]= '-';
  2001  000C88  C02B  FFD9         	movff	traduz@txt,fsr2l
  2002  000C8C  C02C  FFDA         	movff	traduz@txt+1,fsr2h
  2003  000C90  0E2D               	movlw	45
  2004  000C92  D00B               	goto	L2
  2005  000C94                     l217:
  2006                           
  2007                           ;PIC_MPU-6050.c: 149: else{
  2008                           ;PIC_MPU-6050.c: 150: aux = num;
  2009  000C94  C028  F038         	movff	traduz@num,traduz@aux
  2010  000C98  C029  F039         	movff	traduz@num+1,traduz@aux+1
  2011  000C9C  C02A  F03A         	movff	traduz@num+2,traduz@aux+2
  2012                           
  2013                           ;PIC_MPU-6050.c: 151: txt[0]='+';
  2014  000CA0  C02B  FFD9         	movff	traduz@txt,fsr2l
  2015  000CA4  C02C  FFDA         	movff	traduz@txt+1,fsr2h
  2016  000CA8  0E2B               	movlw	43
  2017  000CAA                     L2:
  2018  000CAA  6EDF               	movwf	indf2,c
  2019                           
  2020                           ;PIC_MPU-6050.c: 152: }
  2021                           ;PIC_MPU-6050.c: 153: pint=(int) aux;
  2022  000CAC  C038  F001         	movff	traduz@aux,___fttol@f1
  2023  000CB0  C039  F002         	movff	traduz@aux+1,___fttol@f1+1
  2024  000CB4  C03A  F003         	movff	traduz@aux+2,___fttol@f1+2
  2025  000CB8  EC56  F008         	call	___fttol	;wreg free
  2026  000CBC  C001  F040         	movff	?___fttol,traduz@pint
  2027  000CC0  C002  F041         	movff	?___fttol+1,traduz@pint+1
  2028                           
  2029                           ;PIC_MPU-6050.c: 154: pfloat = aux - (float) pint;
  2030  000CC4  C040  F009         	movff	traduz@pint,___awtoft@c
  2031  000CC8  C041  F00A         	movff	traduz@pint+1,___awtoft@c+1
  2032  000CCC  EC8C  F00C         	call	___awtoft	;wreg free
  2033  000CD0  C009  F00D         	movff	?___awtoft,___ftneg@f1
  2034  000CD4  C00A  F00E         	movff	?___awtoft+1,___ftneg@f1+1
  2035  000CD8  C00B  F00F         	movff	?___awtoft+2,___ftneg@f1+2
  2036  000CDC  EC0A  F00D         	call	___ftneg	;wreg free
  2037  000CE0  C00D  F01C         	movff	?___ftneg,___ftadd@f1
  2038  000CE4  C00E  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  2039  000CE8  C00F  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  2040  000CEC  C038  F01F         	movff	traduz@aux,___ftadd@f2
  2041  000CF0  C039  F020         	movff	traduz@aux+1,___ftadd@f2+1
  2042  000CF4  C03A  F021         	movff	traduz@aux+2,___ftadd@f2+2
  2043  000CF8  EC80  F007         	call	___ftadd	;wreg free
  2044  000CFC  C01C  F03D         	movff	?___ftadd,traduz@pfloat
  2045  000D00  C01D  F03E         	movff	?___ftadd+1,traduz@pfloat+1
  2046  000D04  C01E  F03F         	movff	?___ftadd+2,traduz@pfloat+2
  2047                           
  2048                           ;PIC_MPU-6050.c: 155: if(pint==0){
  2049  000D08  5040               	movf	traduz@pint,w,c
  2050  000D0A  1041               	iorwf	traduz@pint+1,w,c
  2051  000D0C  A4D8               	btfss	status,2,c
  2052  000D0E  D00B               	goto	l219
  2053                           
  2054                           ;PIC_MPU-6050.c: 156: txt[1]='0';
  2055  000D10  EE20 F001          	lfsr	2,1
  2056  000D14  502B               	movf	traduz@txt,w,c
  2057  000D16  26D9               	addwf	fsr2l,f,c
  2058  000D18  502C               	movf	traduz@txt+1,w,c
  2059  000D1A  22DA               	addwfc	fsr2h,f,c
  2060  000D1C  0E30               	movlw	48
  2061  000D1E  6EDF               	movwf	indf2,c
  2062                           
  2063                           ;PIC_MPU-6050.c: 157: j++;
  2064  000D20  4A42               	infsnz	traduz@j,f,c
  2065  000D22  2A43               	incf	traduz@j+1,f,c
  2066                           
  2067                           ;PIC_MPU-6050.c: 158: }
  2068  000D24  D048               	goto	u2060
  2069  000D26                     l219:
  2070                           
  2071                           ;PIC_MPU-6050.c: 159: else{
  2072                           ;PIC_MPU-6050.c: 160: i=0;
  2073  000D26  0E00               	movlw	0
  2074  000D28  6E45               	movwf	traduz@i+1,c
  2075  000D2A  0E00               	movlw	0
  2076  000D2C  6E44               	movwf	traduz@i,c
  2077                           
  2078                           ;PIC_MPU-6050.c: 161: while(pint > 0){
  2079  000D2E  D023               	goto	l221
  2080  000D30                     l2504:
  2081                           
  2082                           ;PIC_MPU-6050.c: 162: stringh[i] = (pint % 10) + 48;
  2083  000D30  0E2E               	movlw	low traduz@stringh
  2084  000D32  2444               	addwf	traduz@i,w,c
  2085  000D34  6ED9               	movwf	fsr2l,c
  2086  000D36  0E00               	movlw	high traduz@stringh
  2087  000D38  2045               	addwfc	traduz@i+1,w,c
  2088  000D3A  6EDA               	movwf	fsr2h,c
  2089  000D3C  C040  F010         	movff	traduz@pint,___awmod@dividend
  2090  000D40  C041  F011         	movff	traduz@pint+1,___awmod@dividend+1
  2091  000D44  0E00               	movlw	0
  2092  000D46  6E13               	movwf	___awmod@divisor+1,c
  2093  000D48  0E0A               	movlw	10
  2094  000D4A  6E12               	movwf	___awmod@divisor,c
  2095  000D4C  ECA2  F00B         	call	___awmod	;wreg free
  2096  000D50  5010               	movf	?___awmod,w,c
  2097  000D52  0F30               	addlw	48
  2098  000D54  6EDF               	movwf	indf2,c
  2099                           
  2100                           ;PIC_MPU-6050.c: 163: pint = pint / 10;
  2101  000D56  C040  F001         	movff	traduz@pint,___awdiv@dividend
  2102  000D5A  C041  F002         	movff	traduz@pint+1,___awdiv@dividend+1
  2103  000D5E  0E00               	movlw	0
  2104  000D60  6E04               	movwf	___awdiv@divisor+1,c
  2105  000D62  0E0A               	movlw	10
  2106  000D64  6E03               	movwf	___awdiv@divisor,c
  2107  000D66  EC22  F00B         	call	___awdiv	;wreg free
  2108  000D6A  C001  F040         	movff	?___awdiv,traduz@pint
  2109  000D6E  C002  F041         	movff	?___awdiv+1,traduz@pint+1
  2110                           
  2111                           ;PIC_MPU-6050.c: 164: i++;
  2112  000D72  4A44               	infsnz	traduz@i,f,c
  2113  000D74  2A45               	incf	traduz@i+1,f,c
  2114  000D76                     l221:
  2115  000D76  BE41               	btfsc	traduz@pint+1,7,c
  2116  000D78  D005               	goto	u2040
  2117  000D7A  5041               	movf	traduz@pint+1,w,c
  2118  000D7C  E1D9               	bnz	l2504
  2119  000D7E  0440               	decf	traduz@pint,w,c
  2120  000D80  B0D8               	btfsc	status,0,c
  2121  000D82  D7D6               	goto	l222
  2122  000D84                     u2040:
  2123                           
  2124                           ;PIC_MPU-6050.c: 165: }
  2125                           ;PIC_MPU-6050.c: 166: i--;
  2126  000D84  0644               	decf	traduz@i,f,c
  2127  000D86  A0D8               	btfss	status,0,c
  2128  000D88  0645               	decf	traduz@i+1,f,c
  2129  000D8A                     l2514:
  2130                           
  2131                           ;PIC_MPU-6050.c: 167: for(; i>=0; i--,j++){
  2132  000D8A  BE45               	btfsc	traduz@i+1,7,c
  2133  000D8C  D014               	goto	u2060
  2134                           
  2135                           ;PIC_MPU-6050.c: 168: txt[j] = stringh[i];
  2136  000D8E  0E2E               	movlw	low traduz@stringh
  2137  000D90  2444               	addwf	traduz@i,w,c
  2138  000D92  6ED9               	movwf	fsr2l,c
  2139  000D94  0E00               	movlw	high traduz@stringh
  2140  000D96  2045               	addwfc	traduz@i+1,w,c
  2141  000D98  6EDA               	movwf	fsr2h,c
  2142  000D9A  5042               	movf	traduz@j,w,c
  2143  000D9C  242B               	addwf	traduz@txt,w,c
  2144  000D9E  6EE1               	movwf	fsr1l,c
  2145  000DA0  5043               	movf	traduz@j+1,w,c
  2146  000DA2  202C               	addwfc	traduz@txt+1,w,c
  2147  000DA4  6EE2               	movwf	fsr1h,c
  2148  000DA6  CFDF FFE7          	movff	indf2,indf1
  2149  000DAA  0644               	decf	traduz@i,f,c
  2150  000DAC  A0D8               	btfss	status,0,c
  2151  000DAE  0645               	decf	traduz@i+1,f,c
  2152  000DB0  4A42               	infsnz	traduz@j,f,c
  2153  000DB2  2A43               	incf	traduz@j+1,f,c
  2154  000DB4  D7EA               	goto	l2514
  2155  000DB6                     u2060:
  2156                           
  2157                           ;PIC_MPU-6050.c: 170: }
  2158                           ;PIC_MPU-6050.c: 171: }
  2159                           ;PIC_MPU-6050.c: 172: txt[j]='.';
  2160  000DB6  5042               	movf	traduz@j,w,c
  2161  000DB8  242B               	addwf	traduz@txt,w,c
  2162  000DBA  6ED9               	movwf	fsr2l,c
  2163  000DBC  5043               	movf	traduz@j+1,w,c
  2164  000DBE  202C               	addwfc	traduz@txt+1,w,c
  2165  000DC0  6EDA               	movwf	fsr2h,c
  2166  000DC2  0E2E               	movlw	46
  2167  000DC4  6EDF               	movwf	indf2,c
  2168                           
  2169                           ;PIC_MPU-6050.c: 173: j++;
  2170  000DC6  4A42               	infsnz	traduz@j,f,c
  2171  000DC8  2A43               	incf	traduz@j+1,f,c
  2172                           
  2173                           ;PIC_MPU-6050.c: 175: if (pfloat == 0 ){
  2174  000DCA  503D               	movf	traduz@pfloat,w,c
  2175  000DCC  103E               	iorwf	traduz@pfloat+1,w,c
  2176  000DCE  103F               	iorwf	traduz@pfloat+2,w,c
  2177  000DD0  A4D8               	btfss	status,2,c
  2178  000DD2  D00B               	goto	l226
  2179                           
  2180                           ;PIC_MPU-6050.c: 176: txt[j]= '0';
  2181  000DD4  5042               	movf	traduz@j,w,c
  2182  000DD6  242B               	addwf	traduz@txt,w,c
  2183  000DD8  6ED9               	movwf	fsr2l,c
  2184  000DDA  5043               	movf	traduz@j+1,w,c
  2185  000DDC  202C               	addwfc	traduz@txt+1,w,c
  2186  000DDE  6EDA               	movwf	fsr2h,c
  2187  000DE0  0E30               	movlw	48
  2188  000DE2  6EDF               	movwf	indf2,c
  2189                           
  2190                           ;PIC_MPU-6050.c: 177: j++;
  2191  000DE4  4A42               	infsnz	traduz@j,f,c
  2192  000DE6  2A43               	incf	traduz@j+1,f,c
  2193                           
  2194                           ;PIC_MPU-6050.c: 178: }
  2195  000DE8  D082               	goto	u2100
  2196  000DEA                     l226:
  2197                           
  2198                           ;PIC_MPU-6050.c: 179: else
  2199                           ;PIC_MPU-6050.c: 180: {
  2200                           ;PIC_MPU-6050.c: 181: i=0;
  2201  000DEA  0E00               	movlw	0
  2202  000DEC  6E45               	movwf	traduz@i+1,c
  2203  000DEE  0E00               	movlw	0
  2204  000DF0  6E44               	movwf	traduz@i,c
  2205                           
  2206                           ;PIC_MPU-6050.c: 182: while (pfloat < 1){
  2207  000DF2  D049               	goto	l231
  2208  000DF4                     
  2209                           ;PIC_MPU-6050.c: 183: pfloat = pfloat * 10;
  2210  000DF4  C03D  F009         	movff	traduz@pfloat,___ftmul@f1
  2211  000DF8  C03E  F00A         	movff	traduz@pfloat+1,___ftmul@f1+1
  2212  000DFC  C03F  F00B         	movff	traduz@pfloat+2,___ftmul@f1+2
  2213  000E00  0E00               	movlw	0
  2214  000E02  6E0C               	movwf	___ftmul@f2,c
  2215  000E04  0E20               	movlw	32
  2216  000E06  6E0D               	movwf	___ftmul@f2+1,c
  2217  000E08  0E41               	movlw	65
  2218  000E0A  6E0E               	movwf	___ftmul@f2+2,c
  2219  000E0C  ECD0  F008         	call	___ftmul	;wreg free
  2220  000E10  C009  F03D         	movff	?___ftmul,traduz@pfloat
  2221  000E14  C00A  F03E         	movff	?___ftmul+1,traduz@pfloat+1
  2222  000E18  C00B  F03F         	movff	?___ftmul+2,traduz@pfloat+2
  2223                           
  2224                           ;PIC_MPU-6050.c: 184: if(pfloat > 1){
  2225  000E1C  0E00               	movlw	0
  2226  000E1E  6E01               	movwf	___ftge@ff1,c
  2227  000E20  0E80               	movlw	128
  2228  000E22  6E02               	movwf	___ftge@ff1+1,c
  2229  000E24  0E3F               	movlw	63
  2230  000E26  6E03               	movwf	___ftge@ff1+2,c
  2231  000E28  C03D  F004         	movff	traduz@pfloat,___ftge@ff2
  2232  000E2C  C03E  F005         	movff	traduz@pfloat+1,___ftge@ff2+1
  2233  000E30  C03F  F006         	movff	traduz@pfloat+2,___ftge@ff2+2
  2234  000E34  ECDA  F00A         	call	___ftge	;wreg free
  2235  000E38  B0D8               	btfsc	status,0,c
  2236  000E3A  D01B               	goto	l230
  2237                           
  2238                           ;PIC_MPU-6050.c: 185: stringh[i] = (((int)pfloat) % 10)+48;
  2239  000E3C  0E2E               	movlw	low traduz@stringh
  2240  000E3E  2444               	addwf	traduz@i,w,c
  2241  000E40  6ED9               	movwf	fsr2l,c
  2242  000E42  0E00               	movlw	high traduz@stringh
  2243  000E44  2045               	addwfc	traduz@i+1,w,c
  2244  000E46  6EDA               	movwf	fsr2h,c
  2245  000E48  C03D  F001         	movff	traduz@pfloat,___fttol@f1
  2246  000E4C  C03E  F002         	movff	traduz@pfloat+1,___fttol@f1+1
  2247  000E50  C03F  F003         	movff	traduz@pfloat+2,___fttol@f1+2
  2248  000E54  EC56  F008         	call	___fttol	;wreg free
  2249  000E58  C001  F010         	movff	?___fttol,___awmod@dividend
  2250  000E5C  C002  F011         	movff	?___fttol+1,___awmod@dividend+1
  2251  000E60  0E00               	movlw	0
  2252  000E62  6E13               	movwf	___awmod@divisor+1,c
  2253  000E64  0E0A               	movlw	10
  2254  000E66  6E12               	movwf	___awmod@divisor,c
  2255  000E68  ECA2  F00B         	call	___awmod	;wreg free
  2256  000E6C  5010               	movf	?___awmod,w,c
  2257  000E6E  0F30               	addlw	48
  2258  000E70  D007               	goto	L3
  2259  000E72                     l230:
  2260                           
  2261                           ;PIC_MPU-6050.c: 188: else{
  2262                           ;PIC_MPU-6050.c: 189: stringh[i]= '0';
  2263  000E72  0E2E               	movlw	low traduz@stringh
  2264  000E74  2444               	addwf	traduz@i,w,c
  2265  000E76  6ED9               	movwf	fsr2l,c
  2266  000E78  0E00               	movlw	high traduz@stringh
  2267  000E7A  2045               	addwfc	traduz@i+1,w,c
  2268  000E7C  6EDA               	movwf	fsr2h,c
  2269  000E7E  0E30               	movlw	48
  2270  000E80                     L3:
  2271  000E80  6EDF               	movwf	indf2,c
  2272                           
  2273                           ;PIC_MPU-6050.c: 190: i++;
  2274  000E82  4A44               	infsnz	traduz@i,f,c
  2275  000E84  2A45               	incf	traduz@i+1,f,c
  2276  000E86                     l231:
  2277  000E86  C03D  F001         	movff	traduz@pfloat,___ftge@ff1
  2278  000E8A  C03E  F002         	movff	traduz@pfloat+1,___ftge@ff1+1
  2279  000E8E  C03F  F003         	movff	traduz@pfloat+2,___ftge@ff1+2
  2280  000E92  0E00               	movlw	0
  2281  000E94  6E04               	movwf	___ftge@ff2,c
  2282  000E96  0E80               	movlw	128
  2283  000E98  6E05               	movwf	___ftge@ff2+1,c
  2284  000E9A  0E3F               	movlw	63
  2285  000E9C  6E06               	movwf	___ftge@ff2+2,c
  2286  000E9E  ECDA  F00A         	call	___ftge	;wreg free
  2287  000EA2  A0D8               	btfss	status,0,c
  2288  000EA4  D7A7               	goto	l229
  2289                           
  2290                           ;PIC_MPU-6050.c: 192: }
  2291                           ;PIC_MPU-6050.c: 193: }
  2292                           ;PIC_MPU-6050.c: 196: i--;
  2293  000EA6  0644               	decf	traduz@i,f,c
  2294  000EA8  A0D8               	btfss	status,0,c
  2295  000EAA  0645               	decf	traduz@i+1,f,c
  2296                           
  2297                           ;PIC_MPU-6050.c: 197: for(int aux=0; aux<=i; j++,aux++){
  2298  000EAC  0E00               	movlw	0
  2299  000EAE  6E3C               	movwf	traduz@aux_453+1,c
  2300  000EB0  0E00               	movlw	0
  2301  000EB2  6E3B               	movwf	traduz@aux_453,c
  2302  000EB4  D012               	goto	l233
  2303  000EB6                     
  2304                           ;PIC_MPU-6050.c: 198: txt[j] = stringh[aux];
  2305  000EB6  0E2E               	movlw	low traduz@stringh
  2306  000EB8  243B               	addwf	traduz@aux_453,w,c
  2307  000EBA  6ED9               	movwf	fsr2l,c
  2308  000EBC  0E00               	movlw	high traduz@stringh
  2309  000EBE  203C               	addwfc	traduz@aux_453+1,w,c
  2310  000EC0  6EDA               	movwf	fsr2h,c
  2311  000EC2  5042               	movf	traduz@j,w,c
  2312  000EC4  242B               	addwf	traduz@txt,w,c
  2313  000EC6  6EE1               	movwf	fsr1l,c
  2314  000EC8  5043               	movf	traduz@j+1,w,c
  2315  000ECA  202C               	addwfc	traduz@txt+1,w,c
  2316  000ECC  6EE2               	movwf	fsr1h,c
  2317  000ECE  CFDF FFE7          	movff	indf2,indf1
  2318  000ED2  4A42               	infsnz	traduz@j,f,c
  2319  000ED4  2A43               	incf	traduz@j+1,f,c
  2320  000ED6  4A3B               	infsnz	traduz@aux_453,f,c
  2321  000ED8  2A3C               	incf	traduz@aux_453+1,f,c
  2322  000EDA                     l233:
  2323  000EDA  503B               	movf	traduz@aux_453,w,c
  2324  000EDC  5C44               	subwf	traduz@i,w,c
  2325  000EDE  5045               	movf	traduz@i+1,w,c
  2326  000EE0  0A80               	xorlw	128
  2327  000EE2  6E2D               	movwf	??_traduz& (0+255),c
  2328  000EE4  503C               	movf	traduz@aux_453+1,w,c
  2329  000EE6  0A80               	xorlw	128
  2330  000EE8  582D               	subwfb	??_traduz& (0+255),w,c
  2331  000EEA  B0D8               	btfsc	status,0,c
  2332  000EEC  D7E4               	goto	l234
  2333  000EEE                     u2100:
  2334                           
  2335                           ;PIC_MPU-6050.c: 199: }
  2336                           ;PIC_MPU-6050.c: 200: }
  2337                           ;PIC_MPU-6050.c: 201: txt[j]='\0';
  2338  000EEE  5042               	movf	traduz@j,w,c
  2339  000EF0  242B               	addwf	traduz@txt,w,c
  2340  000EF2  6ED9               	movwf	fsr2l,c
  2341  000EF4  5043               	movf	traduz@j+1,w,c
  2342  000EF6  202C               	addwfc	traduz@txt+1,w,c
  2343  000EF8  6EDA               	movwf	fsr2h,c
  2344  000EFA  0E00               	movlw	0
  2345  000EFC  6EDF               	movwf	indf2,c
  2346  000EFE  0012               	return		;funcret
  2347  000F00                     __end_of_traduz:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           wreg	equ	0xFE8
  2354                           indf1	equ	0xFE7
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           indf2	equ	0xFDF
  2358                           fsr2h	equ	0xFDA
  2359                           fsr2l	equ	0xFD9
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function ___fttol *****************
  2363 ;; Defined at:
  2364 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  f1              3    0[COMRAM] float 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  lval            4   10[COMRAM] unsigned long 
  2369 ;;  exp1            1   14[COMRAM] unsigned char 
  2370 ;;  sign1           1    9[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  4    0[COMRAM] long 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2380 ;;      Params:         4       0       0       0       0       0       0       0       0
  2381 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2382 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2383 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2384 ;;Total ram usage:       15 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_traduz
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text9
  2394  0010AC                     __ptext9:
  2395                           	opt stack 0
  2396  0010AC                     ___fttol:
  2397                           	opt stack 29
  2398                           
  2399                           ;incstack = 0
  2400  0010AC  C003  F005         	movff	___fttol@f1+2,??___fttol
  2401  0010B0  6A06               	clrf	(??___fttol+1)& (0+255),c
  2402  0010B2  6A07               	clrf	(??___fttol+2)& (0+255),c
  2403  0010B4  3402               	rlcf	___fttol@f1+1,w,c
  2404  0010B6  3605               	rlcf	??___fttol& (0+255),f,c
  2405  0010B8  E301               	bnc	u1871
  2406  0010BA  8006               	bsf	(??___fttol+1)& (0+255),0,c
  2407  0010BC                     u1871:
  2408  0010BC  5005               	movf	??___fttol,w,c
  2409  0010BE  6E0F               	movwf	___fttol@exp1,c
  2410  0010C0  500F               	movf	___fttol@exp1,w,c
  2411  0010C2  A4D8               	btfss	status,2,c
  2412  0010C4  D009               	goto	l679
  2413  0010C6  0E00               	movlw	0
  2414  0010C8  6E01               	movwf	?___fttol,c
  2415  0010CA  0E00               	movlw	0
  2416  0010CC  6E02               	movwf	?___fttol+1,c
  2417  0010CE  0E00               	movlw	0
  2418  0010D0  6E03               	movwf	?___fttol+2,c
  2419  0010D2  0E00               	movlw	0
  2420  0010D4  6E04               	movwf	?___fttol+3,c
  2421  0010D6  0012               	return	
  2422  0010D8                     l679:
  2423  0010D8  0E17               	movlw	23
  2424  0010DA  6E05               	movwf	??___fttol& (0+255),c
  2425  0010DC  C001  F006         	movff	___fttol@f1,??___fttol+1
  2426  0010E0  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  2427  0010E4  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  2428  0010E8  2805               	incf	??___fttol,w,c
  2429  0010EA  6E09               	movwf	(??___fttol+4)& (0+255),c
  2430  0010EC  D004               	goto	u1890
  2431  0010EE                     u1895:
  2432  0010EE  90D8               	bcf	status,0,c
  2433  0010F0  3208               	rrcf	??___fttol+3,f,c
  2434  0010F2  3207               	rrcf	??___fttol+2,f,c
  2435  0010F4  3206               	rrcf	??___fttol+1,f,c
  2436  0010F6                     u1890:
  2437  0010F6  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  2438  0010F8  D7FA               	goto	u1895
  2439  0010FA  5006               	movf	??___fttol+1,w,c
  2440  0010FC  6E0A               	movwf	___fttol@sign1,c
  2441  0010FE  8E02               	bsf	___fttol@f1+1,7,c
  2442  001100  0EFF               	movlw	255
  2443  001102  1601               	andwf	___fttol@f1,f,c
  2444  001104  0EFF               	movlw	255
  2445  001106  1602               	andwf	___fttol@f1+1,f,c
  2446  001108  0E00               	movlw	0
  2447  00110A  1603               	andwf	___fttol@f1+2,f,c
  2448  00110C  5001               	movf	___fttol@f1,w,c
  2449  00110E  6E0B               	movwf	___fttol@lval,c
  2450  001110  5002               	movf	___fttol@f1+1,w,c
  2451  001112  6E0C               	movwf	___fttol@lval+1,c
  2452  001114  5003               	movf	___fttol@f1+2,w,c
  2453  001116  6E0D               	movwf	___fttol@lval+2,c
  2454  001118  6A0E               	clrf	___fttol@lval+3,c
  2455  00111A  0E8E               	movlw	142
  2456  00111C  5E0F               	subwf	___fttol@exp1,f,c
  2457  00111E  AE0F               	btfss	___fttol@exp1,7,c
  2458  001120  D016               	goto	l681
  2459  001122  500F               	movf	___fttol@exp1,w,c
  2460  001124  0A80               	xorlw	128
  2461  001126  0F8F               	addlw	143
  2462  001128  B0D8               	btfsc	status,0,c
  2463  00112A  D009               	goto	l682
  2464  00112C  0E00               	movlw	0
  2465  00112E  6E01               	movwf	?___fttol,c
  2466  001130  0E00               	movlw	0
  2467  001132  6E02               	movwf	?___fttol+1,c
  2468  001134  0E00               	movlw	0
  2469  001136  6E03               	movwf	?___fttol+2,c
  2470  001138  0E00               	movlw	0
  2471  00113A  6E04               	movwf	?___fttol+3,c
  2472  00113C  0012               	return	
  2473  00113E                     l682:
  2474  00113E  90D8               	bcf	status,0,c
  2475  001140  320E               	rrcf	___fttol@lval+3,f,c
  2476  001142  320D               	rrcf	___fttol@lval+2,f,c
  2477  001144  320C               	rrcf	___fttol@lval+1,f,c
  2478  001146  320B               	rrcf	___fttol@lval,f,c
  2479  001148  3E0F               	incfsz	___fttol@exp1,f,c
  2480  00114A  D7F9               	goto	l682
  2481  00114C  D015               	goto	u1930
  2482  00114E                     l681:
  2483  00114E  0E17               	movlw	23
  2484  001150  640F               	cpfsgt	___fttol@exp1,c
  2485  001152  D00F               	goto	l687
  2486  001154  0E00               	movlw	0
  2487  001156  6E01               	movwf	?___fttol,c
  2488  001158  0E00               	movlw	0
  2489  00115A  6E02               	movwf	?___fttol+1,c
  2490  00115C  0E00               	movlw	0
  2491  00115E  6E03               	movwf	?___fttol+2,c
  2492  001160  0E00               	movlw	0
  2493  001162  6E04               	movwf	?___fttol+3,c
  2494  001164  0012               	return	
  2495  001166  90D8               	bcf	status,0,c
  2496  001168  360B               	rlcf	___fttol@lval,f,c
  2497  00116A  360C               	rlcf	___fttol@lval+1,f,c
  2498  00116C  360D               	rlcf	___fttol@lval+2,f,c
  2499  00116E  360E               	rlcf	___fttol@lval+3,f,c
  2500  001170  060F               	decf	___fttol@exp1,f,c
  2501  001172                     l687:
  2502  001172  500F               	movf	___fttol@exp1,w,c
  2503  001174  A4D8               	btfss	status,2,c
  2504  001176  D7F7               	goto	l688
  2505  001178                     u1930:
  2506  001178  500A               	movf	___fttol@sign1,w,c
  2507  00117A  B4D8               	btfsc	status,2,c
  2508  00117C  D008               	goto	l690
  2509  00117E  1E0E               	comf	___fttol@lval+3,f,c
  2510  001180  1E0D               	comf	___fttol@lval+2,f,c
  2511  001182  1E0C               	comf	___fttol@lval+1,f,c
  2512  001184  6C0B               	negf	___fttol@lval,c
  2513  001186  0E00               	movlw	0
  2514  001188  220C               	addwfc	___fttol@lval+1,f,c
  2515  00118A  220D               	addwfc	___fttol@lval+2,f,c
  2516  00118C  220E               	addwfc	___fttol@lval+3,f,c
  2517  00118E                     l690:
  2518  00118E  C00B  F001         	movff	___fttol@lval,?___fttol
  2519  001192  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  2520  001196  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  2521  00119A  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  2522  00119E  0012               	return	
  2523  0011A0                     __end_of___fttol:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           wreg	equ	0xFE8
  2530                           indf1	equ	0xFE7
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function ___ftneg *****************
  2539 ;; Defined at:
  2540 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  f1              3   12[COMRAM] float 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  3   12[COMRAM] float 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         3       0       0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2557 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_traduz
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text10
  2568  001A14                     __ptext10:
  2569                           	opt stack 0
  2570  001A14                     ___ftneg:
  2571                           	opt stack 29
  2572                           
  2573                           ;incstack = 0
  2574  001A14  500D               	movf	___ftneg@f1,w,c
  2575  001A16  100E               	iorwf	___ftneg@f1+1,w,c
  2576  001A18  100F               	iorwf	___ftneg@f1+2,w,c
  2577  001A1A  B4D8               	btfsc	status,2,c
  2578  001A1C  D006               	goto	l669
  2579  001A1E  0E00               	movlw	0
  2580  001A20  1A0D               	xorwf	___ftneg@f1,f,c
  2581  001A22  0E00               	movlw	0
  2582  001A24  1A0E               	xorwf	___ftneg@f1+1,f,c
  2583  001A26  0E80               	movlw	128
  2584  001A28  1A0F               	xorwf	___ftneg@f1+2,f,c
  2585  001A2A                     l669:
  2586  001A2A  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  2587  001A2E  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  2588  001A32  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  2589  001A36  0012               	return		;funcret
  2590  001A38                     __end_of___ftneg:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           wreg	equ	0xFE8
  2597                           indf1	equ	0xFE7
  2598                           fsr1h	equ	0xFE2
  2599                           fsr1l	equ	0xFE1
  2600                           indf2	equ	0xFDF
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function ___ftmul *****************
  2606 ;; Defined at:
  2607 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  f1              3    8[COMRAM] float 
  2610 ;;  f2              3   11[COMRAM] float 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2613 ;;  sign            1   22[COMRAM] unsigned char 
  2614 ;;  cntr            1   21[COMRAM] unsigned char 
  2615 ;;  exp             1   17[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  3    8[COMRAM] float 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2625 ;;      Params:         6       0       0       0       0       0       0       0       0
  2626 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2627 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2628 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2629 ;;Total ram usage:       15 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    1
  2632 ;; This function calls:
  2633 ;;		___ftpack
  2634 ;; This function is called by:
  2635 ;;		_traduz
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text11
  2640  0011A0                     __ptext11:
  2641                           	opt stack 0
  2642  0011A0                     ___ftmul:
  2643                           	opt stack 28
  2644                           
  2645                           ;incstack = 0
  2646  0011A0  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2647  0011A4  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2648  0011A6  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2649  0011A8  340A               	rlcf	___ftmul@f1+1,w,c
  2650  0011AA  360F               	rlcf	??___ftmul& (0+255),f,c
  2651  0011AC  E301               	bnc	u1641
  2652  0011AE  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2653  0011B0                     u1641:
  2654  0011B0  500F               	movf	??___ftmul,w,c
  2655  0011B2  6E12               	movwf	___ftmul@exp,c
  2656  0011B4  5012               	movf	___ftmul@exp,w,c
  2657  0011B6  A4D8               	btfss	status,2,c
  2658  0011B8  D007               	goto	l658
  2659  0011BA  0E00               	movlw	0
  2660  0011BC  6E09               	movwf	?___ftmul,c
  2661  0011BE  0E00               	movlw	0
  2662  0011C0  6E0A               	movwf	?___ftmul+1,c
  2663  0011C2  0E00               	movlw	0
  2664  0011C4  6E0B               	movwf	?___ftmul+2,c
  2665  0011C6  0012               	return	
  2666  0011C8                     l658:
  2667  0011C8  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2668  0011CC  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2669  0011CE  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2670  0011D0  340D               	rlcf	___ftmul@f2+1,w,c
  2671  0011D2  360F               	rlcf	??___ftmul& (0+255),f,c
  2672  0011D4  E301               	bnc	u1661
  2673  0011D6  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2674  0011D8                     u1661:
  2675  0011D8  500F               	movf	??___ftmul,w,c
  2676  0011DA  6E17               	movwf	___ftmul@sign,c
  2677  0011DC  5017               	movf	___ftmul@sign,w,c
  2678  0011DE  A4D8               	btfss	status,2,c
  2679  0011E0  D007               	goto	l660
  2680  0011E2  0E00               	movlw	0
  2681  0011E4  6E09               	movwf	?___ftmul,c
  2682  0011E6  0E00               	movlw	0
  2683  0011E8  6E0A               	movwf	?___ftmul+1,c
  2684  0011EA  0E00               	movlw	0
  2685  0011EC  6E0B               	movwf	?___ftmul+2,c
  2686  0011EE  0012               	return	
  2687  0011F0                     l660:
  2688  0011F0  5017               	movf	___ftmul@sign,w,c
  2689  0011F2  0F7B               	addlw	123
  2690  0011F4  2612               	addwf	___ftmul@exp,f,c
  2691  0011F6  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2692  0011FA  500E               	movf	___ftmul@f2+2,w,c
  2693  0011FC  1A17               	xorwf	___ftmul@sign,f,c
  2694  0011FE  0E80               	movlw	128
  2695  001200  1617               	andwf	___ftmul@sign,f,c
  2696  001202  8E0A               	bsf	___ftmul@f1+1,7,c
  2697  001204  8E0D               	bsf	___ftmul@f2+1,7,c
  2698  001206  0EFF               	movlw	255
  2699  001208  160C               	andwf	___ftmul@f2,f,c
  2700  00120A  0EFF               	movlw	255
  2701  00120C  160D               	andwf	___ftmul@f2+1,f,c
  2702  00120E  0E00               	movlw	0
  2703  001210  160E               	andwf	___ftmul@f2+2,f,c
  2704  001212  0E00               	movlw	0
  2705  001214  6E13               	movwf	___ftmul@f3_as_product,c
  2706  001216  0E00               	movlw	0
  2707  001218  6E14               	movwf	___ftmul@f3_as_product+1,c
  2708  00121A  0E00               	movlw	0
  2709  00121C  6E15               	movwf	___ftmul@f3_as_product+2,c
  2710  00121E  0E07               	movlw	7
  2711  001220  6E16               	movwf	___ftmul@cntr,c
  2712  001222  A009               	btfss	___ftmul@f1,0,c
  2713  001224  D006               	goto	l662
  2714  001226  500C               	movf	___ftmul@f2,w,c
  2715  001228  2613               	addwf	___ftmul@f3_as_product,f,c
  2716  00122A  500D               	movf	___ftmul@f2+1,w,c
  2717  00122C  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2718  00122E  500E               	movf	___ftmul@f2+2,w,c
  2719  001230  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2720  001232                     l662:
  2721  001232  90D8               	bcf	status,0,c
  2722  001234  320B               	rrcf	___ftmul@f1+2,f,c
  2723  001236  320A               	rrcf	___ftmul@f1+1,f,c
  2724  001238  3209               	rrcf	___ftmul@f1,f,c
  2725  00123A  90D8               	bcf	status,0,c
  2726  00123C  360C               	rlcf	___ftmul@f2,f,c
  2727  00123E  360D               	rlcf	___ftmul@f2+1,f,c
  2728  001240  360E               	rlcf	___ftmul@f2+2,f,c
  2729  001242  2E16               	decfsz	___ftmul@cntr,f,c
  2730  001244  D7EE               	goto	l661
  2731  001246  0E09               	movlw	9
  2732  001248  6E16               	movwf	___ftmul@cntr,c
  2733  00124A  A009               	btfss	___ftmul@f1,0,c
  2734  00124C  D006               	goto	l665
  2735  00124E  500C               	movf	___ftmul@f2,w,c
  2736  001250  2613               	addwf	___ftmul@f3_as_product,f,c
  2737  001252  500D               	movf	___ftmul@f2+1,w,c
  2738  001254  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2739  001256  500E               	movf	___ftmul@f2+2,w,c
  2740  001258  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2741  00125A                     l665:
  2742  00125A  90D8               	bcf	status,0,c
  2743  00125C  320B               	rrcf	___ftmul@f1+2,f,c
  2744  00125E  320A               	rrcf	___ftmul@f1+1,f,c
  2745  001260  3209               	rrcf	___ftmul@f1,f,c
  2746  001262  90D8               	bcf	status,0,c
  2747  001264  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2748  001266  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2749  001268  3213               	rrcf	___ftmul@f3_as_product,f,c
  2750  00126A  2E16               	decfsz	___ftmul@cntr,f,c
  2751  00126C  D7EE               	goto	l664
  2752  00126E  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2753  001272  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2754  001276  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2755  00127A  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2756  00127E  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2757  001282  EC31  F00A         	call	___ftpack	;wreg free
  2758  001286  C001  F009         	movff	?___ftpack,?___ftmul
  2759  00128A  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2760  00128E  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2761  001292  0012               	return	
  2762  001294                     __end_of___ftmul:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           wreg	equ	0xFE8
  2769                           indf1	equ	0xFE7
  2770                           fsr1h	equ	0xFE2
  2771                           fsr1l	equ	0xFE1
  2772                           indf2	equ	0xFDF
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777 ;; *************** function ___ftge *****************
  2778 ;; Defined at:
  2779 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  ff1             3    0[COMRAM] float 
  2782 ;;  ff2             3    3[COMRAM] float 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;		None               void
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2794 ;;      Params:         6       0       0       0       0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2796 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2797 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2798 ;;Total ram usage:        9 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_traduz
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text12
  2808  0015B4                     __ptext12:
  2809                           	opt stack 0
  2810  0015B4                     ___ftge:
  2811                           	opt stack 29
  2812                           
  2813                           ;incstack = 0
  2814  0015B4  AE03               	btfss	___ftge@ff1+2,7,c
  2815  0015B6  D016               	goto	l651
  2816  0015B8  C001  F007         	movff	___ftge@ff1,??___ftge
  2817  0015BC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2818  0015C0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2819  0015C4  1E07               	comf	??___ftge,f,c
  2820  0015C6  1E08               	comf	??___ftge+1,f,c
  2821  0015C8  1E09               	comf	??___ftge+2,f,c
  2822  0015CA  2A07               	incf	??___ftge,f,c
  2823  0015CC  0E00               	movlw	0
  2824  0015CE  2208               	addwfc	??___ftge+1,f,c
  2825  0015D0  2209               	addwfc	??___ftge+2,f,c
  2826  0015D2  0E00               	movlw	0
  2827  0015D4  2407               	addwf	??___ftge,w,c
  2828  0015D6  6E01               	movwf	___ftge@ff1,c
  2829  0015D8  0E00               	movlw	0
  2830  0015DA  2008               	addwfc	??___ftge+1,w,c
  2831  0015DC  6E02               	movwf	___ftge@ff1+1,c
  2832  0015DE  0E80               	movlw	128
  2833  0015E0  2009               	addwfc	??___ftge+2,w,c
  2834  0015E2  6E03               	movwf	___ftge@ff1+2,c
  2835  0015E4                     l651:
  2836  0015E4  AE06               	btfss	___ftge@ff2+2,7,c
  2837  0015E6  D016               	goto	l652
  2838  0015E8  C004  F007         	movff	___ftge@ff2,??___ftge
  2839  0015EC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2840  0015F0  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2841  0015F4  1E07               	comf	??___ftge,f,c
  2842  0015F6  1E08               	comf	??___ftge+1,f,c
  2843  0015F8  1E09               	comf	??___ftge+2,f,c
  2844  0015FA  2A07               	incf	??___ftge,f,c
  2845  0015FC  0E00               	movlw	0
  2846  0015FE  2208               	addwfc	??___ftge+1,f,c
  2847  001600  2209               	addwfc	??___ftge+2,f,c
  2848  001602  0E00               	movlw	0
  2849  001604  2407               	addwf	??___ftge,w,c
  2850  001606  6E04               	movwf	___ftge@ff2,c
  2851  001608  0E00               	movlw	0
  2852  00160A  2008               	addwfc	??___ftge+1,w,c
  2853  00160C  6E05               	movwf	___ftge@ff2+1,c
  2854  00160E  0E80               	movlw	128
  2855  001610  2009               	addwfc	??___ftge+2,w,c
  2856  001612  6E06               	movwf	___ftge@ff2+2,c
  2857  001614                     l652:
  2858  001614  0E00               	movlw	0
  2859  001616  1A01               	xorwf	___ftge@ff1,f,c
  2860  001618  0E00               	movlw	0
  2861  00161A  1A02               	xorwf	___ftge@ff1+1,f,c
  2862  00161C  0E80               	movlw	128
  2863  00161E  1A03               	xorwf	___ftge@ff1+2,f,c
  2864  001620  0E00               	movlw	0
  2865  001622  1A04               	xorwf	___ftge@ff2,f,c
  2866  001624  0E00               	movlw	0
  2867  001626  1A05               	xorwf	___ftge@ff2+1,f,c
  2868  001628  0E80               	movlw	128
  2869  00162A  1A06               	xorwf	___ftge@ff2+2,f,c
  2870  00162C  5004               	movf	___ftge@ff2,w,c
  2871  00162E  5C01               	subwf	___ftge@ff1,w,c
  2872  001630  5005               	movf	___ftge@ff2+1,w,c
  2873  001632  5802               	subwfb	___ftge@ff1+1,w,c
  2874  001634  5006               	movf	___ftge@ff2+2,w,c
  2875  001636  5803               	subwfb	___ftge@ff1+2,w,c
  2876  001638  B0D8               	btfsc	status,0,c
  2877  00163A  D002               	goto	l1998
  2878  00163C  90D8               	bcf	status,0,c
  2879  00163E  0012               	return	
  2880  001640                     l1998:
  2881  001640  80D8               	bsf	status,0,c
  2882  001642  0012               	return	
  2883  001644                     __end_of___ftge:
  2884                           	opt stack 0
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           wreg	equ	0xFE8
  2890                           indf1	equ	0xFE7
  2891                           fsr1h	equ	0xFE2
  2892                           fsr1l	equ	0xFE1
  2893                           indf2	equ	0xFDF
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function ___ftadd *****************
  2899 ;; Defined at:
  2900 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  f1              3   27[COMRAM] float 
  2903 ;;  f2              3   30[COMRAM] float 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  exp1            1   38[COMRAM] unsigned char 
  2906 ;;  exp2            1   37[COMRAM] unsigned char 
  2907 ;;  sign            1   36[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  3   27[COMRAM] float 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         6       0       0       0       0       0       0       0       0
  2918 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2920 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2921 ;;Total ram usage:       12 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		___ftpack
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;;		_traduz
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text13
  2933  000F00                     __ptext13:
  2934                           	opt stack 0
  2935  000F00                     ___ftadd:
  2936                           	opt stack 28
  2937                           
  2938                           ;incstack = 0
  2939  000F00  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  2940  000F04  6A23               	clrf	(??___ftadd+1)& (0+255),c
  2941  000F06  6A24               	clrf	(??___ftadd+2)& (0+255),c
  2942  000F08  341D               	rlcf	___ftadd@f1+1,w,c
  2943  000F0A  3622               	rlcf	??___ftadd& (0+255),f,c
  2944  000F0C  E301               	bnc	u1431
  2945  000F0E  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  2946  000F10                     u1431:
  2947  000F10  5022               	movf	??___ftadd,w,c
  2948  000F12  6E27               	movwf	___ftadd@exp1,c
  2949  000F14  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  2950  000F18  6A23               	clrf	(??___ftadd+1)& (0+255),c
  2951  000F1A  6A24               	clrf	(??___ftadd+2)& (0+255),c
  2952  000F1C  3420               	rlcf	___ftadd@f2+1,w,c
  2953  000F1E  3622               	rlcf	??___ftadd& (0+255),f,c
  2954  000F20  E301               	bnc	u1441
  2955  000F22  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  2956  000F24                     u1441:
  2957  000F24  5022               	movf	??___ftadd,w,c
  2958  000F26  6E26               	movwf	___ftadd@exp2,c
  2959  000F28  5027               	movf	___ftadd@exp1,w,c
  2960  000F2A  B4D8               	btfsc	status,2,c
  2961  000F2C  D00B               	goto	u1470
  2962  000F2E  5026               	movf	___ftadd@exp2,w,c
  2963  000F30  5C27               	subwf	___ftadd@exp1,w,c
  2964  000F32  B0D8               	btfsc	status,0,c
  2965  000F34  D00E               	goto	l610
  2966  000F36  5027               	movf	___ftadd@exp1,w,c
  2967  000F38  0800               	sublw	0
  2968  000F3A  2426               	addwf	___ftadd@exp2,w,c
  2969  000F3C  6E22               	movwf	??___ftadd& (0+255),c
  2970  000F3E  0E18               	movlw	24
  2971  000F40  6422               	cpfsgt	??___ftadd,c
  2972  000F42  D007               	goto	l610
  2973  000F44                     u1470:
  2974  000F44  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  2975  000F48  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  2976  000F4C  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  2977  000F50  0012               	return	
  2978  000F52                     l610:
  2979  000F52  5026               	movf	___ftadd@exp2,w,c
  2980  000F54  B4D8               	btfsc	status,2,c
  2981  000F56  D00B               	goto	u1500
  2982  000F58  5027               	movf	___ftadd@exp1,w,c
  2983  000F5A  5C26               	subwf	___ftadd@exp2,w,c
  2984  000F5C  B0D8               	btfsc	status,0,c
  2985  000F5E  D00E               	goto	l614
  2986  000F60  5026               	movf	___ftadd@exp2,w,c
  2987  000F62  0800               	sublw	0
  2988  000F64  2427               	addwf	___ftadd@exp1,w,c
  2989  000F66  6E22               	movwf	??___ftadd& (0+255),c
  2990  000F68  0E18               	movlw	24
  2991  000F6A  6422               	cpfsgt	??___ftadd,c
  2992  000F6C  D007               	goto	l614
  2993  000F6E                     u1500:
  2994  000F6E  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  2995  000F72  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  2996  000F76  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  2997  000F7A  0012               	return	
  2998  000F7C                     l614:
  2999  000F7C  0E06               	movlw	6
  3000  000F7E  6E25               	movwf	___ftadd@sign,c
  3001  000F80  BE1E               	btfsc	___ftadd@f1+2,7,c
  3002  000F82  8E25               	bsf	___ftadd@sign,7,c
  3003  000F84  BE21               	btfsc	___ftadd@f2+2,7,c
  3004  000F86  8C25               	bsf	___ftadd@sign,6,c
  3005  000F88  8E1D               	bsf	___ftadd@f1+1,7,c
  3006  000F8A  0EFF               	movlw	255
  3007  000F8C  161C               	andwf	___ftadd@f1,f,c
  3008  000F8E  0EFF               	movlw	255
  3009  000F90  161D               	andwf	___ftadd@f1+1,f,c
  3010  000F92  0E00               	movlw	0
  3011  000F94  161E               	andwf	___ftadd@f1+2,f,c
  3012  000F96  8E20               	bsf	___ftadd@f2+1,7,c
  3013  000F98  0EFF               	movlw	255
  3014  000F9A  161F               	andwf	___ftadd@f2,f,c
  3015  000F9C  0EFF               	movlw	255
  3016  000F9E  1620               	andwf	___ftadd@f2+1,f,c
  3017  000FA0  0E00               	movlw	0
  3018  000FA2  1621               	andwf	___ftadd@f2+2,f,c
  3019  000FA4  5026               	movf	___ftadd@exp2,w,c
  3020  000FA6  5C27               	subwf	___ftadd@exp1,w,c
  3021  000FA8  B0D8               	btfsc	status,0,c
  3022  000FAA  D01B               	goto	l619
  3023  000FAC                     u1530:
  3024  000FAC  90D8               	bcf	status,0,c
  3025  000FAE  361F               	rlcf	___ftadd@f2,f,c
  3026  000FB0  3620               	rlcf	___ftadd@f2+1,f,c
  3027  000FB2  3621               	rlcf	___ftadd@f2+2,f,c
  3028  000FB4  0626               	decf	___ftadd@exp2,f,c
  3029  000FB6  5027               	movf	___ftadd@exp1,w,c
  3030  000FB8  1826               	xorwf	___ftadd@exp2,w,c
  3031  000FBA  B4D8               	btfsc	status,2,c
  3032  000FBC  D00D               	goto	l624
  3033  000FBE  0625               	decf	___ftadd@sign,f,c
  3034  000FC0  C025  F022         	movff	___ftadd@sign,??___ftadd
  3035  000FC4  0E07               	movlw	7
  3036  000FC6  1622               	andwf	??___ftadd,f,c
  3037  000FC8  B4D8               	btfsc	status,2,c
  3038  000FCA  D006               	goto	l624
  3039  000FCC  D7EF               	goto	u1530
  3040  000FCE  90D8               	bcf	status,0,c
  3041  000FD0  321E               	rrcf	___ftadd@f1+2,f,c
  3042  000FD2  321D               	rrcf	___ftadd@f1+1,f,c
  3043  000FD4  321C               	rrcf	___ftadd@f1,f,c
  3044  000FD6  2A27               	incf	___ftadd@exp1,f,c
  3045  000FD8                     l624:
  3046  000FD8  5026               	movf	___ftadd@exp2,w,c
  3047  000FDA  1827               	xorwf	___ftadd@exp1,w,c
  3048  000FDC  B4D8               	btfsc	status,2,c
  3049  000FDE  D01F               	goto	u1600
  3050  000FE0  D7F6               	goto	l625
  3051  000FE2                     l619:
  3052  000FE2  5027               	movf	___ftadd@exp1,w,c
  3053  000FE4  5C26               	subwf	___ftadd@exp2,w,c
  3054  000FE6  B0D8               	btfsc	status,0,c
  3055  000FE8  D01A               	goto	u1600
  3056  000FEA                     u1570:
  3057  000FEA  90D8               	bcf	status,0,c
  3058  000FEC  361C               	rlcf	___ftadd@f1,f,c
  3059  000FEE  361D               	rlcf	___ftadd@f1+1,f,c
  3060  000FF0  361E               	rlcf	___ftadd@f1+2,f,c
  3061  000FF2  0627               	decf	___ftadd@exp1,f,c
  3062  000FF4  5027               	movf	___ftadd@exp1,w,c
  3063  000FF6  1826               	xorwf	___ftadd@exp2,w,c
  3064  000FF8  B4D8               	btfsc	status,2,c
  3065  000FFA  D00D               	goto	l633
  3066  000FFC  0625               	decf	___ftadd@sign,f,c
  3067  000FFE  C025  F022         	movff	___ftadd@sign,??___ftadd
  3068  001002  0E07               	movlw	7
  3069  001004  1622               	andwf	??___ftadd,f,c
  3070  001006  B4D8               	btfsc	status,2,c
  3071  001008  D006               	goto	l633
  3072  00100A  D7EF               	goto	u1570
  3073  00100C  90D8               	bcf	status,0,c
  3074  00100E  3221               	rrcf	___ftadd@f2+2,f,c
  3075  001010  3220               	rrcf	___ftadd@f2+1,f,c
  3076  001012  321F               	rrcf	___ftadd@f2,f,c
  3077  001014  2A26               	incf	___ftadd@exp2,f,c
  3078  001016                     l633:
  3079  001016  5026               	movf	___ftadd@exp2,w,c
  3080  001018  1827               	xorwf	___ftadd@exp1,w,c
  3081  00101A  A4D8               	btfss	status,2,c
  3082  00101C  D7F7               	goto	l634
  3083  00101E                     u1600:
  3084  00101E  AE25               	btfss	___ftadd@sign,7,c
  3085  001020  D00C               	goto	l636
  3086  001022  0EFF               	movlw	255
  3087  001024  1A1C               	xorwf	___ftadd@f1,f,c
  3088  001026  0EFF               	movlw	255
  3089  001028  1A1D               	xorwf	___ftadd@f1+1,f,c
  3090  00102A  0EFF               	movlw	255
  3091  00102C  1A1E               	xorwf	___ftadd@f1+2,f,c
  3092  00102E  0E01               	movlw	1
  3093  001030  261C               	addwf	___ftadd@f1,f,c
  3094  001032  0E00               	movlw	0
  3095  001034  221D               	addwfc	___ftadd@f1+1,f,c
  3096  001036  0E00               	movlw	0
  3097  001038  221E               	addwfc	___ftadd@f1+2,f,c
  3098  00103A                     l636:
  3099  00103A  AC25               	btfss	___ftadd@sign,6,c
  3100  00103C  D00C               	goto	l637
  3101  00103E  0EFF               	movlw	255
  3102  001040  1A1F               	xorwf	___ftadd@f2,f,c
  3103  001042  0EFF               	movlw	255
  3104  001044  1A20               	xorwf	___ftadd@f2+1,f,c
  3105  001046  0EFF               	movlw	255
  3106  001048  1A21               	xorwf	___ftadd@f2+2,f,c
  3107  00104A  0E01               	movlw	1
  3108  00104C  261F               	addwf	___ftadd@f2,f,c
  3109  00104E  0E00               	movlw	0
  3110  001050  2220               	addwfc	___ftadd@f2+1,f,c
  3111  001052  0E00               	movlw	0
  3112  001054  2221               	addwfc	___ftadd@f2+2,f,c
  3113  001056                     l637:
  3114  001056  0E00               	movlw	0
  3115  001058  6E25               	movwf	___ftadd@sign,c
  3116  00105A  501C               	movf	___ftadd@f1,w,c
  3117  00105C  261F               	addwf	___ftadd@f2,f,c
  3118  00105E  501D               	movf	___ftadd@f1+1,w,c
  3119  001060  2220               	addwfc	___ftadd@f2+1,f,c
  3120  001062  501E               	movf	___ftadd@f1+2,w,c
  3121  001064  2221               	addwfc	___ftadd@f2+2,f,c
  3122  001066  AE21               	btfss	___ftadd@f2+2,7,c
  3123  001068  D00E               	goto	l638
  3124  00106A  0EFF               	movlw	255
  3125  00106C  1A1F               	xorwf	___ftadd@f2,f,c
  3126  00106E  0EFF               	movlw	255
  3127  001070  1A20               	xorwf	___ftadd@f2+1,f,c
  3128  001072  0EFF               	movlw	255
  3129  001074  1A21               	xorwf	___ftadd@f2+2,f,c
  3130  001076  0E01               	movlw	1
  3131  001078  261F               	addwf	___ftadd@f2,f,c
  3132  00107A  0E00               	movlw	0
  3133  00107C  2220               	addwfc	___ftadd@f2+1,f,c
  3134  00107E  0E00               	movlw	0
  3135  001080  2221               	addwfc	___ftadd@f2+2,f,c
  3136  001082  0E01               	movlw	1
  3137  001084  6E25               	movwf	___ftadd@sign,c
  3138  001086                     l638:
  3139  001086  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  3140  00108A  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3141  00108E  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3142  001092  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  3143  001096  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  3144  00109A  EC31  F00A         	call	___ftpack	;wreg free
  3145  00109E  C001  F01C         	movff	?___ftpack,?___ftadd
  3146  0010A2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  3147  0010A6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  3148  0010AA  0012               	return	
  3149  0010AC                     __end_of___ftadd:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           wreg	equ	0xFE8
  3156                           indf1	equ	0xFE7
  3157                           fsr1h	equ	0xFE2
  3158                           fsr1l	equ	0xFE1
  3159                           indf2	equ	0xFDF
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function ___awtoft *****************
  3165 ;; Defined at:
  3166 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  c               2    8[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  sign            1   11[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  3    8[COMRAM] float 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3180 ;;      Params:         3       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    1
  3187 ;; This function calls:
  3188 ;;		___ftpack
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;;		_traduz
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text14
  3196  001918                     __ptext14:
  3197                           	opt stack 0
  3198  001918                     ___awtoft:
  3199                           	opt stack 28
  3200                           
  3201                           ;incstack = 0
  3202  001918  0E00               	movlw	0
  3203  00191A  6E0C               	movwf	___awtoft@sign,c
  3204  00191C  AE0A               	btfss	___awtoft@c+1,7,c
  3205  00191E  D006               	goto	l553
  3206  001920  6C09               	negf	___awtoft@c,c
  3207  001922  1E0A               	comf	___awtoft@c+1,f,c
  3208  001924  B0D8               	btfsc	status,0,c
  3209  001926  2A0A               	incf	___awtoft@c+1,f,c
  3210  001928  0E01               	movlw	1
  3211  00192A  6E0C               	movwf	___awtoft@sign,c
  3212  00192C                     l553:
  3213  00192C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3214  001930  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3215  001934  6A03               	clrf	___ftpack@arg+2,c
  3216  001936  0E8E               	movlw	142
  3217  001938  6E04               	movwf	___ftpack@exp,c
  3218  00193A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3219  00193E  EC31  F00A         	call	___ftpack	;wreg free
  3220  001942  C001  F009         	movff	?___ftpack,?___awtoft
  3221  001946  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3222  00194A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3223  00194E  0012               	return	
  3224  001950                     __end_of___awtoft:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           wreg	equ	0xFE8
  3231                           indf1	equ	0xFE7
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function ___awmod *****************
  3240 ;; Defined at:
  3241 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  dividend        2   15[COMRAM] int 
  3244 ;;  divisor         2   17[COMRAM] int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  sign            1   20[COMRAM] unsigned char 
  3247 ;;  counter         1   19[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2   15[COMRAM] int 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3257 ;;      Params:         4       0       0       0       0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3260 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        6 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_traduz
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text15
  3271  001744                     __ptext15:
  3272                           	opt stack 0
  3273  001744                     ___awmod:
  3274                           	opt stack 29
  3275                           
  3276                           ;incstack = 0
  3277  001744  0E00               	movlw	0
  3278  001746  6E15               	movwf	___awmod@sign,c
  3279  001748  AE11               	btfss	___awmod@dividend+1,7,c
  3280  00174A  D006               	goto	l538
  3281  00174C  6C10               	negf	___awmod@dividend,c
  3282  00174E  1E11               	comf	___awmod@dividend+1,f,c
  3283  001750  B0D8               	btfsc	status,0,c
  3284  001752  2A11               	incf	___awmod@dividend+1,f,c
  3285  001754  0E01               	movlw	1
  3286  001756  6E15               	movwf	___awmod@sign,c
  3287  001758                     l538:
  3288  001758  AE13               	btfss	___awmod@divisor+1,7,c
  3289  00175A  D004               	goto	l539
  3290  00175C  6C12               	negf	___awmod@divisor,c
  3291  00175E  1E13               	comf	___awmod@divisor+1,f,c
  3292  001760  B0D8               	btfsc	status,0,c
  3293  001762  2A13               	incf	___awmod@divisor+1,f,c
  3294  001764                     l539:
  3295  001764  5012               	movf	___awmod@divisor,w,c
  3296  001766  1013               	iorwf	___awmod@divisor+1,w,c
  3297  001768  B4D8               	btfsc	status,2,c
  3298  00176A  D018               	goto	l546
  3299  00176C  0E01               	movlw	1
  3300  00176E  6E14               	movwf	___awmod@counter,c
  3301  001770  D004               	goto	l541
  3302  001772  90D8               	bcf	status,0,c
  3303  001774  3612               	rlcf	___awmod@divisor,f,c
  3304  001776  3613               	rlcf	___awmod@divisor+1,f,c
  3305  001778  2A14               	incf	___awmod@counter,f,c
  3306  00177A                     l541:
  3307  00177A  AE13               	btfss	___awmod@divisor+1,7,c
  3308  00177C  D7FA               	goto	l542
  3309  00177E                     u1790:
  3310  00177E  5012               	movf	___awmod@divisor,w,c
  3311  001780  5C10               	subwf	___awmod@dividend,w,c
  3312  001782  5013               	movf	___awmod@divisor+1,w,c
  3313  001784  5811               	subwfb	___awmod@dividend+1,w,c
  3314  001786  A0D8               	btfss	status,0,c
  3315  001788  D004               	goto	l545
  3316  00178A  5012               	movf	___awmod@divisor,w,c
  3317  00178C  5E10               	subwf	___awmod@dividend,f,c
  3318  00178E  5013               	movf	___awmod@divisor+1,w,c
  3319  001790  5A11               	subwfb	___awmod@dividend+1,f,c
  3320  001792                     l545:
  3321  001792  90D8               	bcf	status,0,c
  3322  001794  3213               	rrcf	___awmod@divisor+1,f,c
  3323  001796  3212               	rrcf	___awmod@divisor,f,c
  3324  001798  2E14               	decfsz	___awmod@counter,f,c
  3325  00179A  D7F1               	goto	u1790
  3326  00179C                     l546:
  3327  00179C  5015               	movf	___awmod@sign,w,c
  3328  00179E  B4D8               	btfsc	status,2,c
  3329  0017A0  D004               	goto	l547
  3330  0017A2  6C10               	negf	___awmod@dividend,c
  3331  0017A4  1E11               	comf	___awmod@dividend+1,f,c
  3332  0017A6  B0D8               	btfsc	status,0,c
  3333  0017A8  2A11               	incf	___awmod@dividend+1,f,c
  3334  0017AA                     l547:
  3335  0017AA  C010  F010         	movff	___awmod@dividend,?___awmod
  3336  0017AE  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
  3337  0017B2  0012               	return	
  3338  0017B4                     __end_of___awmod:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           wreg	equ	0xFE8
  3345                           indf1	equ	0xFE7
  3346                           fsr1h	equ	0xFE2
  3347                           fsr1l	equ	0xFE1
  3348                           indf2	equ	0xFDF
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function ___awdiv *****************
  3354 ;; Defined at:
  3355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  dividend        2    0[COMRAM] int 
  3358 ;;  divisor         2    2[COMRAM] int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  quotient        2    6[COMRAM] int 
  3361 ;;  sign            1    5[COMRAM] unsigned char 
  3362 ;;  counter         1    4[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    0[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0
  3373 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3375 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3376 ;;Total ram usage:        8 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_traduz
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text16
  3386  001644                     __ptext16:
  3387                           	opt stack 0
  3388  001644                     ___awdiv:
  3389                           	opt stack 29
  3390                           
  3391                           ;incstack = 0
  3392  001644  0E00               	movlw	0
  3393  001646  6E06               	movwf	___awdiv@sign,c
  3394  001648  AE04               	btfss	___awdiv@divisor+1,7,c
  3395  00164A  D006               	goto	l525
  3396  00164C  6C03               	negf	___awdiv@divisor,c
  3397  00164E  1E04               	comf	___awdiv@divisor+1,f,c
  3398  001650  B0D8               	btfsc	status,0,c
  3399  001652  2A04               	incf	___awdiv@divisor+1,f,c
  3400  001654  0E01               	movlw	1
  3401  001656  6E06               	movwf	___awdiv@sign,c
  3402  001658                     l525:
  3403  001658  AE02               	btfss	___awdiv@dividend+1,7,c
  3404  00165A  D006               	goto	l526
  3405  00165C  6C01               	negf	___awdiv@dividend,c
  3406  00165E  1E02               	comf	___awdiv@dividend+1,f,c
  3407  001660  B0D8               	btfsc	status,0,c
  3408  001662  2A02               	incf	___awdiv@dividend+1,f,c
  3409  001664  0E01               	movlw	1
  3410  001666  1A06               	xorwf	___awdiv@sign,f,c
  3411  001668                     l526:
  3412  001668  0E00               	movlw	0
  3413  00166A  6E08               	movwf	___awdiv@quotient+1,c
  3414  00166C  0E00               	movlw	0
  3415  00166E  6E07               	movwf	___awdiv@quotient,c
  3416  001670  5003               	movf	___awdiv@divisor,w,c
  3417  001672  1004               	iorwf	___awdiv@divisor+1,w,c
  3418  001674  B4D8               	btfsc	status,2,c
  3419  001676  D01C               	goto	l533
  3420  001678  0E01               	movlw	1
  3421  00167A  6E05               	movwf	___awdiv@counter,c
  3422  00167C  D004               	goto	l528
  3423  00167E  90D8               	bcf	status,0,c
  3424  001680  3603               	rlcf	___awdiv@divisor,f,c
  3425  001682  3604               	rlcf	___awdiv@divisor+1,f,c
  3426  001684  2A05               	incf	___awdiv@counter,f,c
  3427  001686                     l528:
  3428  001686  AE04               	btfss	___awdiv@divisor+1,7,c
  3429  001688  D7FA               	goto	l529
  3430  00168A                     u1730:
  3431  00168A  90D8               	bcf	status,0,c
  3432  00168C  3607               	rlcf	___awdiv@quotient,f,c
  3433  00168E  3608               	rlcf	___awdiv@quotient+1,f,c
  3434  001690  5003               	movf	___awdiv@divisor,w,c
  3435  001692  5C01               	subwf	___awdiv@dividend,w,c
  3436  001694  5004               	movf	___awdiv@divisor+1,w,c
  3437  001696  5802               	subwfb	___awdiv@dividend+1,w,c
  3438  001698  A0D8               	btfss	status,0,c
  3439  00169A  D005               	goto	l532
  3440  00169C  5003               	movf	___awdiv@divisor,w,c
  3441  00169E  5E01               	subwf	___awdiv@dividend,f,c
  3442  0016A0  5004               	movf	___awdiv@divisor+1,w,c
  3443  0016A2  5A02               	subwfb	___awdiv@dividend+1,f,c
  3444  0016A4  8007               	bsf	___awdiv@quotient,0,c
  3445  0016A6                     l532:
  3446  0016A6  90D8               	bcf	status,0,c
  3447  0016A8  3204               	rrcf	___awdiv@divisor+1,f,c
  3448  0016AA  3203               	rrcf	___awdiv@divisor,f,c
  3449  0016AC  2E05               	decfsz	___awdiv@counter,f,c
  3450  0016AE  D7ED               	goto	u1730
  3451  0016B0                     l533:
  3452  0016B0  5006               	movf	___awdiv@sign,w,c
  3453  0016B2  B4D8               	btfsc	status,2,c
  3454  0016B4  D004               	goto	l534
  3455  0016B6  6C07               	negf	___awdiv@quotient,c
  3456  0016B8  1E08               	comf	___awdiv@quotient+1,f,c
  3457  0016BA  B0D8               	btfsc	status,0,c
  3458  0016BC  2A08               	incf	___awdiv@quotient+1,f,c
  3459  0016BE                     l534:
  3460  0016BE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3461  0016C2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3462  0016C6  0012               	return	
  3463  0016C8                     __end_of___awdiv:
  3464                           	opt stack 0
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           wreg	equ	0xFE8
  3470                           indf1	equ	0xFE7
  3471                           fsr1h	equ	0xFE2
  3472                           fsr1l	equ	0xFE1
  3473                           indf2	equ	0xFDF
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _putsXLCD *****************
  3479 ;; Defined at:
  3480 ;;		line 125 in file "../mylcd.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  3483 ;;		 -> escreve@txt(10), RAM(2047), 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3495 ;;      Params:         2       0       0       0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3498 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3499 ;;Total ram usage:        2 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    2
  3502 ;; This function calls:
  3503 ;;		_BusyXLCD
  3504 ;;		_WriteDataXLCD
  3505 ;; This function is called by:
  3506 ;;		_escreve
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text17
  3511  0019E6                     __ptext17:
  3512                           	opt stack 0
  3513  0019E6                     _putsXLCD:
  3514                           	opt stack 27
  3515                           
  3516                           ;mylcd.c: 127: while(*buffer)
  3517                           
  3518                           ;incstack = 0
  3519  0019E6  D00E               	goto	l333
  3520  0019E8                     
  3521                           ;mylcd.c: 128: {
  3522                           ;mylcd.c: 129: while(BusyXLCD());
  3523  0019E8  EC6F  F00C         	call	_BusyXLCD	;wreg free
  3524  0019EC  0900               	iorlw	0
  3525  0019EE  A4D8               	btfss	status,2,c
  3526  0019F0  D7FB               	goto	l334
  3527                           
  3528                           ;mylcd.c: 130: WriteDataXLCD(*buffer);
  3529  0019F2  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  3530  0019F6  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  3531  0019FA  50DF               	movf	indf2,w,c
  3532  0019FC  EC31  F00C         	call	_WriteDataXLCD
  3533                           
  3534                           ;mylcd.c: 131: buffer++;
  3535  001A00  4A02               	infsnz	putsXLCD@buffer,f,c
  3536  001A02  2A03               	incf	putsXLCD@buffer+1,f,c
  3537  001A04                     l333:
  3538  001A04  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  3539  001A08  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  3540  001A0C  50DF               	movf	indf2,w,c
  3541  001A0E  B4D8               	btfsc	status,2,c
  3542  001A10  0012               	return	
  3543  001A12  D7EA               	goto	l334
  3544  001A14                     __end_of_putsXLCD:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           wreg	equ	0xFE8
  3551                           indf1	equ	0xFE7
  3552                           fsr1h	equ	0xFE2
  3553                           fsr1l	equ	0xFE1
  3554                           indf2	equ	0xFDF
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _WriteDataXLCD *****************
  3560 ;; Defined at:
  3561 ;;		line 357 in file "../mylcd.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  data            1    wreg     unsigned char 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  data            1    0[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        1 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    1
  3582 ;; This function calls:
  3583 ;;		_DelayFor18TCY
  3584 ;; This function is called by:
  3585 ;;		_putrsXLCD
  3586 ;;		_putsXLCD
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text18
  3591  001862                     __ptext18:
  3592                           	opt stack 0
  3593  001862                     _WriteDataXLCD:
  3594                           	opt stack 28
  3595                           
  3596                           ;incstack = 0
  3597                           ;WriteDataXLCD@data stored from wreg
  3598  001862  6E01               	movwf	WriteDataXLCD@data,c
  3599                           
  3600                           ;mylcd.c: 376: TRISD &= 0xf0;
  3601  001864  0EF0               	movlw	240
  3602  001866  1695               	andwf	3989,f,c	;volatile
  3603                           
  3604                           ;mylcd.c: 377: PORTD &= 0xf0;
  3605  001868  0EF0               	movlw	240
  3606  00186A  1683               	andwf	3971,f,c	;volatile
  3607                           
  3608                           ;mylcd.c: 378: PORTD |= ((data>>4)&0x0f);
  3609  00186C  3801               	swapf	WriteDataXLCD@data,w,c
  3610  00186E  0B0F               	andlw	15
  3611  001870  0B0F               	andlw	15
  3612  001872  1283               	iorwf	3971,f,c	;volatile
  3613                           
  3614                           ;mylcd.c: 380: LATDbits.LATD6 = 1;
  3615  001874  8C8C               	bsf	3980,6,c	;volatile
  3616                           
  3617                           ;mylcd.c: 381: LATDbits.LATD5 = 0;
  3618  001876  9A8C               	bcf	3980,5,c	;volatile
  3619                           
  3620                           ;mylcd.c: 382: DelayFor18TCY();
  3621  001878  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3622                           
  3623                           ;mylcd.c: 383: LATDbits.LATD4 = 1;
  3624  00187C  888C               	bsf	3980,4,c	;volatile
  3625                           
  3626                           ;mylcd.c: 384: DelayFor18TCY();
  3627  00187E  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3628                           
  3629                           ;mylcd.c: 385: LATDbits.LATD4 = 0;
  3630  001882  988C               	bcf	3980,4,c	;volatile
  3631                           
  3632                           ;mylcd.c: 390: PORTD &= 0xf0;
  3633  001884  0EF0               	movlw	240
  3634  001886  1683               	andwf	3971,f,c	;volatile
  3635                           
  3636                           ;mylcd.c: 391: PORTD |= (data&0x0f);
  3637  001888  5001               	movf	WriteDataXLCD@data,w,c
  3638  00188A  0B0F               	andlw	15
  3639  00188C  1283               	iorwf	3971,f,c	;volatile
  3640                           
  3641                           ;mylcd.c: 393: DelayFor18TCY();
  3642  00188E  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3643                           
  3644                           ;mylcd.c: 394: LATDbits.LATD4 = 1;
  3645  001892  888C               	bsf	3980,4,c	;volatile
  3646                           
  3647                           ;mylcd.c: 395: DelayFor18TCY();
  3648  001894  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3649                           
  3650                           ;mylcd.c: 396: LATDbits.LATD4 = 0;
  3651  001898  988C               	bcf	3980,4,c	;volatile
  3652                           
  3653                           ;mylcd.c: 400: TRISD |= 0x0f;
  3654  00189A  0E0F               	movlw	15
  3655  00189C  1295               	iorwf	3989,f,c	;volatile
  3656  00189E  0012               	return	
  3657  0018A0                     __end_of_WriteDataXLCD:
  3658                           	opt stack 0
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           wreg	equ	0xFE8
  3664                           indf1	equ	0xFE7
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _limpa *****************
  3673 ;; Defined at:
  3674 ;;		line 135 in file "../PIC_MPU-6050.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    2
  3695 ;; This function calls:
  3696 ;;		_BusyXLCD
  3697 ;;		_Mydelay
  3698 ;;		_WriteCmdXLCD
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;;		_escreve
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text19
  3706  001A5C                     __ptext19:
  3707                           	opt stack 0
  3708  001A5C                     _limpa:
  3709                           	opt stack 28
  3710                           
  3711                           ;PIC_MPU-6050.c: 136: while (BusyXLCD());
  3712                           
  3713                           ;incstack = 0
  3714  001A5C  EC6F  F00C         	call	_BusyXLCD	;wreg free
  3715  001A60  0900               	iorlw	0
  3716  001A62  A4D8               	btfss	status,2,c
  3717  001A64  D7FB               	goto	_limpa
  3718                           
  3719                           ;PIC_MPU-6050.c: 137: WriteCmdXLCD(0x01);
  3720  001A66  0E01               	movlw	1
  3721  001A68  EC50  F00C         	call	_WriteCmdXLCD
  3722                           
  3723                           ;PIC_MPU-6050.c: 138: Mydelay(80);
  3724  001A6C  0E00               	movlw	0
  3725  001A6E  6E02               	movwf	Mydelay@tempo+1,c
  3726  001A70  0E50               	movlw	80
  3727  001A72  6E01               	movwf	Mydelay@tempo,c
  3728  001A74  ECA8  F00C         	call	_Mydelay	;wreg free
  3729  001A78  0012               	return		;funcret
  3730  001A7A                     __end_of_limpa:
  3731                           	opt stack 0
  3732                           tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           wreg	equ	0xFE8
  3737                           indf1	equ	0xFE7
  3738                           fsr1h	equ	0xFE2
  3739                           fsr1l	equ	0xFE1
  3740                           indf2	equ	0xFDF
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _WriteCmdXLCD *****************
  3746 ;; Defined at:
  3747 ;;		line 309 in file "../mylcd.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  cmd             1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  cmd             1    0[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0
  3762 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		_DelayFor18TCY
  3770 ;; This function is called by:
  3771 ;;		_inic_XLCD
  3772 ;;		_limpa
  3773 ;;		_OpenXLCD
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text20
  3778  0018A0                     __ptext20:
  3779                           	opt stack 0
  3780  0018A0                     _WriteCmdXLCD:
  3781                           	opt stack 28
  3782                           
  3783                           ;incstack = 0
  3784                           ;WriteCmdXLCD@cmd stored from wreg
  3785  0018A0  6E01               	movwf	WriteCmdXLCD@cmd,c
  3786                           
  3787                           ;mylcd.c: 328: TRISD &= 0xf0;
  3788  0018A2  0EF0               	movlw	240
  3789  0018A4  1695               	andwf	3989,f,c	;volatile
  3790                           
  3791                           ;mylcd.c: 329: PORTD &= 0xf0;
  3792  0018A6  0EF0               	movlw	240
  3793  0018A8  1683               	andwf	3971,f,c	;volatile
  3794                           
  3795                           ;mylcd.c: 330: PORTD |= (cmd>>4)&0x0f;
  3796  0018AA  3801               	swapf	WriteCmdXLCD@cmd,w,c
  3797  0018AC  0B0F               	andlw	15
  3798  0018AE  0B0F               	andlw	15
  3799  0018B0  1283               	iorwf	3971,f,c	;volatile
  3800                           
  3801                           ;mylcd.c: 332: LATDbits.LATD5 = 0;
  3802  0018B2  9A8C               	bcf	3980,5,c	;volatile
  3803                           
  3804                           ;mylcd.c: 333: LATDbits.LATD6 = 0;
  3805  0018B4  9C8C               	bcf	3980,6,c	;volatile
  3806                           
  3807                           ;mylcd.c: 334: DelayFor18TCY();
  3808  0018B6  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3809                           
  3810                           ;mylcd.c: 335: LATDbits.LATD4 = 1;
  3811  0018BA  888C               	bsf	3980,4,c	;volatile
  3812                           
  3813                           ;mylcd.c: 336: DelayFor18TCY();
  3814  0018BC  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3815                           
  3816                           ;mylcd.c: 337: LATDbits.LATD4 = 0;
  3817  0018C0  988C               	bcf	3980,4,c	;volatile
  3818                           
  3819                           ;mylcd.c: 342: PORTD &= 0xf0;
  3820  0018C2  0EF0               	movlw	240
  3821  0018C4  1683               	andwf	3971,f,c	;volatile
  3822                           
  3823                           ;mylcd.c: 343: PORTD |= cmd&0x0f;
  3824  0018C6  5001               	movf	WriteCmdXLCD@cmd,w,c
  3825  0018C8  0B0F               	andlw	15
  3826  0018CA  1283               	iorwf	3971,f,c	;volatile
  3827                           
  3828                           ;mylcd.c: 345: DelayFor18TCY();
  3829  0018CC  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3830                           
  3831                           ;mylcd.c: 346: LATDbits.LATD4 = 1;
  3832  0018D0  888C               	bsf	3980,4,c	;volatile
  3833                           
  3834                           ;mylcd.c: 347: DelayFor18TCY();
  3835  0018D2  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3836                           
  3837                           ;mylcd.c: 348: LATDbits.LATD4 = 0;
  3838  0018D6  988C               	bcf	3980,4,c	;volatile
  3839                           
  3840                           ;mylcd.c: 352: TRISD |= 0x0f;
  3841  0018D8  0E0F               	movlw	15
  3842  0018DA  1295               	iorwf	3989,f,c	;volatile
  3843  0018DC  0012               	return	
  3844  0018DE                     __end_of_WriteCmdXLCD:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           wreg	equ	0xFE8
  3851                           indf1	equ	0xFE7
  3852                           fsr1h	equ	0xFE2
  3853                           fsr1l	equ	0xFE1
  3854                           indf2	equ	0xFDF
  3855                           fsr2h	equ	0xFDA
  3856                           fsr2l	equ	0xFD9
  3857                           status	equ	0xFD8
  3858                           
  3859 ;; *************** function _BusyXLCD *****************
  3860 ;; Defined at:
  3861 ;;		line 4 in file "../mylcd.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    1
  3882 ;; This function calls:
  3883 ;;		_DelayFor18TCY
  3884 ;; This function is called by:
  3885 ;;		_main
  3886 ;;		_inic_XLCD
  3887 ;;		_limpa
  3888 ;;		_escreve
  3889 ;;		_putrsXLCD
  3890 ;;		_OpenXLCD
  3891 ;;		_putsXLCD
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text21
  3896  0018DE                     __ptext21:
  3897                           	opt stack 0
  3898  0018DE                     _BusyXLCD:
  3899                           	opt stack 28
  3900                           
  3901                           ;mylcd.c: 6: LATDbits.LATD5 = 1;
  3902                           
  3903                           ;incstack = 0
  3904  0018DE  8A8C               	bsf	3980,5,c	;volatile
  3905                           
  3906                           ;mylcd.c: 7: LATDbits.LATD6 = 0;
  3907  0018E0  9C8C               	bcf	3980,6,c	;volatile
  3908                           
  3909                           ;mylcd.c: 8: DelayFor18TCY();
  3910  0018E2  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3911                           
  3912                           ;mylcd.c: 9: LATDbits.LATD4 = 1;
  3913  0018E6  888C               	bsf	3980,4,c	;volatile
  3914                           
  3915                           ;mylcd.c: 10: DelayFor18TCY();
  3916  0018E8  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3917                           
  3918                           ;mylcd.c: 28: if(PORTD&0x08)
  3919  0018EC  A683               	btfss	3971,3,c	;volatile
  3920  0018EE  D00A               	goto	l295
  3921                           
  3922                           ;mylcd.c: 30: {
  3923                           ;mylcd.c: 31: LATDbits.LATD4 = 0;
  3924  0018F0  988C               	bcf	3980,4,c	;volatile
  3925                           
  3926                           ;mylcd.c: 32: DelayFor18TCY();
  3927  0018F2  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3928                           
  3929                           ;mylcd.c: 33: LATDbits.LATD4 = 1;
  3930  0018F6  888C               	bsf	3980,4,c	;volatile
  3931                           
  3932                           ;mylcd.c: 34: DelayFor18TCY();
  3933  0018F8  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3934                           
  3935                           ;mylcd.c: 35: LATDbits.LATD4 = 0;
  3936  0018FC  988C               	bcf	3980,4,c	;volatile
  3937                           
  3938                           ;mylcd.c: 36: LATDbits.LATD5 = 0;
  3939  0018FE  9A8C               	bcf	3980,5,c	;volatile
  3940                           
  3941                           ;mylcd.c: 37: return 1;
  3942  001900  0E01               	movlw	1
  3943                           
  3944                           ;mylcd.c: 38: }
  3945  001902  0012               	return	
  3946  001904                     l295:
  3947                           
  3948                           ;mylcd.c: 39: else
  3949                           ;mylcd.c: 40: {
  3950                           ;mylcd.c: 41: LATDbits.LATD4 = 0;
  3951  001904  988C               	bcf	3980,4,c	;volatile
  3952                           
  3953                           ;mylcd.c: 42: DelayFor18TCY();
  3954  001906  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3955                           
  3956                           ;mylcd.c: 43: LATDbits.LATD4 = 1;
  3957  00190A  888C               	bsf	3980,4,c	;volatile
  3958                           
  3959                           ;mylcd.c: 44: DelayFor18TCY();
  3960  00190C  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  3961                           
  3962                           ;mylcd.c: 45: LATDbits.LATD4 = 0;
  3963  001910  988C               	bcf	3980,4,c	;volatile
  3964                           
  3965                           ;mylcd.c: 46: LATDbits.LATD5 = 0;
  3966  001912  9A8C               	bcf	3980,5,c	;volatile
  3967                           
  3968                           ;mylcd.c: 47: return 0;
  3969  001914  0E00               	movlw	0
  3970  001916  0012               	return	
  3971  001918                     __end_of_BusyXLCD:
  3972                           	opt stack 0
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           wreg	equ	0xFE8
  3978                           indf1	equ	0xFE7
  3979                           fsr1h	equ	0xFE2
  3980                           fsr1l	equ	0xFE1
  3981                           indf2	equ	0xFDF
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function _SetDDRamAddr *****************
  3987 ;; Defined at:
  3988 ;;		line 261 in file "../mylcd.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  DDaddr          1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  DDaddr          1    3[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        4 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    1
  4009 ;; This function calls:
  4010 ;;		_DelayFor18TCY
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;;		_escreve
  4014 ;;		_OpenXLCD
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text22
  4019  001810                     __ptext22:
  4020                           	opt stack 0
  4021  001810                     _SetDDRamAddr:
  4022                           	opt stack 27
  4023                           
  4024                           ;incstack = 0
  4025                           ;SetDDRamAddr@DDaddr stored from wreg
  4026  001810  6E04               	movwf	SetDDRamAddr@DDaddr,c
  4027                           
  4028                           ;mylcd.c: 280: TRISD &= 0xf0;
  4029  001812  0EF0               	movlw	240
  4030  001814  1695               	andwf	3989,f,c	;volatile
  4031                           
  4032                           ;mylcd.c: 281: PORTD &= 0xf0;
  4033  001816  0EF0               	movlw	240
  4034  001818  1683               	andwf	3971,f,c	;volatile
  4035                           
  4036                           ;mylcd.c: 282: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  4037  00181A  5004               	movf	SetDDRamAddr@DDaddr,w,c
  4038  00181C  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  4039  00181E  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4040  001820  8E01               	bsf	??_SetDDRamAddr,7,c
  4041  001822  0E04               	movlw	4
  4042  001824  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4043  001826                     u1415:
  4044  001826  3402               	rlcf	??_SetDDRamAddr+1,w,c
  4045  001828  3202               	rrcf	??_SetDDRamAddr+1,f,c
  4046  00182A  3201               	rrcf	??_SetDDRamAddr,f,c
  4047  00182C  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4048  00182E  D7FB               	goto	u1415
  4049  001830  5001               	movf	??_SetDDRamAddr,w,c
  4050  001832  0B0F               	andlw	15
  4051  001834  1283               	iorwf	3971,f,c	;volatile
  4052                           
  4053                           ;mylcd.c: 284: LATDbits.LATD5 = 0;
  4054  001836  9A8C               	bcf	3980,5,c	;volatile
  4055                           
  4056                           ;mylcd.c: 285: LATDbits.LATD6 = 0;
  4057  001838  9C8C               	bcf	3980,6,c	;volatile
  4058                           
  4059                           ;mylcd.c: 286: DelayFor18TCY();
  4060  00183A  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  4061                           
  4062                           ;mylcd.c: 287: LATDbits.LATD4 = 1;
  4063  00183E  888C               	bsf	3980,4,c	;volatile
  4064                           
  4065                           ;mylcd.c: 288: DelayFor18TCY();
  4066  001840  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  4067                           
  4068                           ;mylcd.c: 289: LATDbits.LATD4 = 0;
  4069  001844  988C               	bcf	3980,4,c	;volatile
  4070                           
  4071                           ;mylcd.c: 294: PORTD &= 0xf0;
  4072  001846  0EF0               	movlw	240
  4073  001848  1683               	andwf	3971,f,c	;volatile
  4074                           
  4075                           ;mylcd.c: 295: PORTD |= (DDaddr&0x0f);
  4076  00184A  5004               	movf	SetDDRamAddr@DDaddr,w,c
  4077  00184C  0B0F               	andlw	15
  4078  00184E  1283               	iorwf	3971,f,c	;volatile
  4079                           
  4080                           ;mylcd.c: 297: DelayFor18TCY();
  4081  001850  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  4082                           
  4083                           ;mylcd.c: 298: LATDbits.LATD4 = 1;
  4084  001854  888C               	bsf	3980,4,c	;volatile
  4085                           
  4086                           ;mylcd.c: 299: DelayFor18TCY();
  4087  001856  ECA1  F00D         	call	_DelayFor18TCY	;wreg free
  4088                           
  4089                           ;mylcd.c: 300: LATDbits.LATD4 = 0;
  4090  00185A  988C               	bcf	3980,4,c	;volatile
  4091                           
  4092                           ;mylcd.c: 304: TRISD |= 0x0f;
  4093  00185C  0E0F               	movlw	15
  4094  00185E  1295               	iorwf	3989,f,c	;volatile
  4095  001860  0012               	return	
  4096  001862                     __end_of_SetDDRamAddr:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           wreg	equ	0xFE8
  4103                           indf1	equ	0xFE7
  4104                           fsr1h	equ	0xFE2
  4105                           fsr1l	equ	0xFE1
  4106                           indf2	equ	0xFDF
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _DelayFor18TCY *****************
  4112 ;; Defined at:
  4113 ;;		line 229 in file "../PIC_MPU-6050.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_BusyXLCD
  4137 ;;		_SetDDRamAddr
  4138 ;;		_WriteCmdXLCD
  4139 ;;		_WriteDataXLCD
  4140 ;;		_ReadAddrXLCD
  4141 ;;		_ReadDataXLCD
  4142 ;;		_SetCGRamAddr
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text23
  4147  001B42                     __ptext23:
  4148                           	opt stack 0
  4149  001B42                     _DelayFor18TCY:
  4150                           	opt stack 28
  4151                           
  4152                           ;PIC_MPU-6050.c: 230: _delay((unsigned long)(((8 * 18.0 * 4000000.0) / 20000000)*(200000
      +                          00/4000000.0)));
  4153                           
  4154                           ;incstack = 0
  4155  001B42  0E30               	movlw	48
  4156  001B44                     u2597:
  4157  001B44  2EE8               	decfsz	wreg,f,c
  4158  001B46  D7FE               	bra	u2597
  4159  001B48  0012               	return		;funcret
  4160  001B4A                     __end_of_DelayFor18TCY:
  4161                           	opt stack 0
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           wreg	equ	0xFE8
  4167                           indf1	equ	0xFE7
  4168                           fsr1h	equ	0xFE2
  4169                           fsr1l	equ	0xFE1
  4170                           indf2	equ	0xFDF
  4171                           fsr2h	equ	0xFDA
  4172                           fsr2l	equ	0xFD9
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function ___ftdiv *****************
  4176 ;; Defined at:
  4177 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  f1              3   12[COMRAM] float 
  4180 ;;  f2              3   15[COMRAM] float 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  f3              3   22[COMRAM] float 
  4183 ;;  sign            1   26[COMRAM] unsigned char 
  4184 ;;  exp             1   25[COMRAM] unsigned char 
  4185 ;;  cntr            1   21[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  3   12[COMRAM] float 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         6       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4198 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:       15 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    1
  4202 ;; This function calls:
  4203 ;;		___ftpack
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text24
  4210  00137C                     __ptext24:
  4211                           	opt stack 0
  4212  00137C                     ___ftdiv:
  4213                           	opt stack 29
  4214                           
  4215                           ;incstack = 0
  4216  00137C  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  4217  001380  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4218  001382  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4219  001384  340E               	rlcf	___ftdiv@f1+1,w,c
  4220  001386  3613               	rlcf	??___ftdiv& (0+255),f,c
  4221  001388  E301               	bnc	u2391
  4222  00138A  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4223  00138C                     u2391:
  4224  00138C  5013               	movf	??___ftdiv,w,c
  4225  00138E  6E1A               	movwf	___ftdiv@exp,c
  4226  001390  501A               	movf	___ftdiv@exp,w,c
  4227  001392  A4D8               	btfss	status,2,c
  4228  001394  D007               	goto	l643
  4229  001396  0E00               	movlw	0
  4230  001398  6E0D               	movwf	?___ftdiv,c
  4231  00139A  0E00               	movlw	0
  4232  00139C  6E0E               	movwf	?___ftdiv+1,c
  4233  00139E  0E00               	movlw	0
  4234  0013A0  6E0F               	movwf	?___ftdiv+2,c
  4235  0013A2  0012               	return	
  4236  0013A4                     l643:
  4237  0013A4  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  4238  0013A8  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4239  0013AA  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4240  0013AC  3411               	rlcf	___ftdiv@f2+1,w,c
  4241  0013AE  3613               	rlcf	??___ftdiv& (0+255),f,c
  4242  0013B0  E301               	bnc	u2411
  4243  0013B2  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4244  0013B4                     u2411:
  4245  0013B4  5013               	movf	??___ftdiv,w,c
  4246  0013B6  6E1B               	movwf	___ftdiv@sign,c
  4247  0013B8  501B               	movf	___ftdiv@sign,w,c
  4248  0013BA  A4D8               	btfss	status,2,c
  4249  0013BC  D007               	goto	l645
  4250  0013BE  0E00               	movlw	0
  4251  0013C0  6E0D               	movwf	?___ftdiv,c
  4252  0013C2  0E00               	movlw	0
  4253  0013C4  6E0E               	movwf	?___ftdiv+1,c
  4254  0013C6  0E00               	movlw	0
  4255  0013C8  6E0F               	movwf	?___ftdiv+2,c
  4256  0013CA  0012               	return	
  4257  0013CC                     l645:
  4258  0013CC  0E00               	movlw	0
  4259  0013CE  6E17               	movwf	___ftdiv@f3,c
  4260  0013D0  0E00               	movlw	0
  4261  0013D2  6E18               	movwf	___ftdiv@f3+1,c
  4262  0013D4  0E00               	movlw	0
  4263  0013D6  6E19               	movwf	___ftdiv@f3+2,c
  4264  0013D8  501B               	movf	___ftdiv@sign,w,c
  4265  0013DA  0F89               	addlw	137
  4266  0013DC  5E1A               	subwf	___ftdiv@exp,f,c
  4267  0013DE  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  4268  0013E2  5012               	movf	___ftdiv@f2+2,w,c
  4269  0013E4  1A1B               	xorwf	___ftdiv@sign,f,c
  4270  0013E6  0E80               	movlw	128
  4271  0013E8  161B               	andwf	___ftdiv@sign,f,c
  4272  0013EA  8E0E               	bsf	___ftdiv@f1+1,7,c
  4273  0013EC  0EFF               	movlw	255
  4274  0013EE  160D               	andwf	___ftdiv@f1,f,c
  4275  0013F0  0EFF               	movlw	255
  4276  0013F2  160E               	andwf	___ftdiv@f1+1,f,c
  4277  0013F4  0E00               	movlw	0
  4278  0013F6  160F               	andwf	___ftdiv@f1+2,f,c
  4279  0013F8  8E11               	bsf	___ftdiv@f2+1,7,c
  4280  0013FA  0EFF               	movlw	255
  4281  0013FC  1610               	andwf	___ftdiv@f2,f,c
  4282  0013FE  0EFF               	movlw	255
  4283  001400  1611               	andwf	___ftdiv@f2+1,f,c
  4284  001402  0E00               	movlw	0
  4285  001404  1612               	andwf	___ftdiv@f2+2,f,c
  4286  001406  0E18               	movlw	24
  4287  001408  6E16               	movwf	___ftdiv@cntr,c
  4288  00140A  90D8               	bcf	status,0,c
  4289  00140C  3617               	rlcf	___ftdiv@f3,f,c
  4290  00140E  3618               	rlcf	___ftdiv@f3+1,f,c
  4291  001410  3619               	rlcf	___ftdiv@f3+2,f,c
  4292  001412  5010               	movf	___ftdiv@f2,w,c
  4293  001414  5C0D               	subwf	___ftdiv@f1,w,c
  4294  001416  5011               	movf	___ftdiv@f2+1,w,c
  4295  001418  580E               	subwfb	___ftdiv@f1+1,w,c
  4296  00141A  5012               	movf	___ftdiv@f2+2,w,c
  4297  00141C  580F               	subwfb	___ftdiv@f1+2,w,c
  4298  00141E  A0D8               	btfss	status,0,c
  4299  001420  D007               	goto	l647
  4300  001422  5010               	movf	___ftdiv@f2,w,c
  4301  001424  5E0D               	subwf	___ftdiv@f1,f,c
  4302  001426  5011               	movf	___ftdiv@f2+1,w,c
  4303  001428  5A0E               	subwfb	___ftdiv@f1+1,f,c
  4304  00142A  5012               	movf	___ftdiv@f2+2,w,c
  4305  00142C  5A0F               	subwfb	___ftdiv@f1+2,f,c
  4306  00142E  8017               	bsf	___ftdiv@f3,0,c
  4307  001430                     l647:
  4308  001430  90D8               	bcf	status,0,c
  4309  001432  360D               	rlcf	___ftdiv@f1,f,c
  4310  001434  360E               	rlcf	___ftdiv@f1+1,f,c
  4311  001436  360F               	rlcf	___ftdiv@f1+2,f,c
  4312  001438  2E16               	decfsz	___ftdiv@cntr,f,c
  4313  00143A  D7E7               	goto	l646
  4314  00143C  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  4315  001440  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4316  001444  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4317  001448  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  4318  00144C  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  4319  001450  EC31  F00A         	call	___ftpack	;wreg free
  4320  001454  C001  F00D         	movff	?___ftpack,?___ftdiv
  4321  001458  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  4322  00145C  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  4323  001460  0012               	return	
  4324  001462                     __end_of___ftdiv:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           wreg	equ	0xFE8
  4331                           indf1	equ	0xFE7
  4332                           fsr1h	equ	0xFE2
  4333                           fsr1l	equ	0xFE1
  4334                           indf2	equ	0xFDF
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function ___ftpack *****************
  4340 ;; Defined at:
  4341 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  arg             3    0[COMRAM] unsigned um
  4344 ;;  exp             1    3[COMRAM] unsigned char 
  4345 ;;  sign            1    4[COMRAM] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  3    0[COMRAM] float 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         5       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        8 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		___awtoft
  4367 ;;		___ftadd
  4368 ;;		___ftdiv
  4369 ;;		___ftmul
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text25
  4374  001462                     __ptext25:
  4375                           	opt stack 0
  4376  001462                     ___ftpack:
  4377                           	opt stack 28
  4378                           
  4379                           ;incstack = 0
  4380  001462  5004               	movf	___ftpack@exp,w,c
  4381  001464  B4D8               	btfsc	status,2,c
  4382  001466  D005               	goto	u1310
  4383  001468  5001               	movf	___ftpack@arg,w,c
  4384  00146A  1002               	iorwf	___ftpack@arg+1,w,c
  4385  00146C  1003               	iorwf	___ftpack@arg+2,w,c
  4386  00146E  A4D8               	btfss	status,2,c
  4387  001470  D00C               	goto	l579
  4388  001472                     u1310:
  4389  001472  0E00               	movlw	0
  4390  001474  6E01               	movwf	?___ftpack,c
  4391  001476  0E00               	movlw	0
  4392  001478  6E02               	movwf	?___ftpack+1,c
  4393  00147A  0E00               	movlw	0
  4394  00147C  6E03               	movwf	?___ftpack+2,c
  4395  00147E  0012               	return	
  4396  001480  2A04               	incf	___ftpack@exp,f,c
  4397  001482  90D8               	bcf	status,0,c
  4398  001484  3203               	rrcf	___ftpack@arg+2,f,c
  4399  001486  3202               	rrcf	___ftpack@arg+1,f,c
  4400  001488  3201               	rrcf	___ftpack@arg,f,c
  4401  00148A                     l579:
  4402  00148A  0E00               	movlw	0
  4403  00148C  1401               	andwf	___ftpack@arg,w,c
  4404  00148E  6E06               	movwf	??___ftpack& (0+255),c
  4405  001490  0E00               	movlw	0
  4406  001492  1402               	andwf	___ftpack@arg+1,w,c
  4407  001494  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4408  001496  0EFE               	movlw	254
  4409  001498  1403               	andwf	___ftpack@arg+2,w,c
  4410  00149A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4411  00149C  5006               	movf	??___ftpack,w,c
  4412  00149E  1007               	iorwf	??___ftpack+1,w,c
  4413  0014A0  1008               	iorwf	??___ftpack+2,w,c
  4414  0014A2  B4D8               	btfsc	status,2,c
  4415  0014A4  D00C               	goto	l582
  4416  0014A6  D7EC               	goto	l580
  4417  0014A8  2A04               	incf	___ftpack@exp,f,c
  4418  0014AA  0E01               	movlw	1
  4419  0014AC  2601               	addwf	___ftpack@arg,f,c
  4420  0014AE  0E00               	movlw	0
  4421  0014B0  2202               	addwfc	___ftpack@arg+1,f,c
  4422  0014B2  0E00               	movlw	0
  4423  0014B4  2203               	addwfc	___ftpack@arg+2,f,c
  4424  0014B6  90D8               	bcf	status,0,c
  4425  0014B8  3203               	rrcf	___ftpack@arg+2,f,c
  4426  0014BA  3202               	rrcf	___ftpack@arg+1,f,c
  4427  0014BC  3201               	rrcf	___ftpack@arg,f,c
  4428  0014BE                     l582:
  4429  0014BE  0E00               	movlw	0
  4430  0014C0  1401               	andwf	___ftpack@arg,w,c
  4431  0014C2  6E06               	movwf	??___ftpack& (0+255),c
  4432  0014C4  0E00               	movlw	0
  4433  0014C6  1402               	andwf	___ftpack@arg+1,w,c
  4434  0014C8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4435  0014CA  0EFF               	movlw	255
  4436  0014CC  1403               	andwf	___ftpack@arg+2,w,c
  4437  0014CE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4438  0014D0  5006               	movf	??___ftpack,w,c
  4439  0014D2  1007               	iorwf	??___ftpack+1,w,c
  4440  0014D4  1008               	iorwf	??___ftpack+2,w,c
  4441  0014D6  B4D8               	btfsc	status,2,c
  4442  0014D8  D006               	goto	l585
  4443  0014DA  D7E6               	goto	l583
  4444  0014DC  0604               	decf	___ftpack@exp,f,c
  4445  0014DE  90D8               	bcf	status,0,c
  4446  0014E0  3601               	rlcf	___ftpack@arg,f,c
  4447  0014E2  3602               	rlcf	___ftpack@arg+1,f,c
  4448  0014E4  3603               	rlcf	___ftpack@arg+2,f,c
  4449  0014E6                     l585:
  4450  0014E6  BE02               	btfsc	___ftpack@arg+1,7,c
  4451  0014E8  D003               	goto	u1350
  4452  0014EA  0E02               	movlw	2
  4453  0014EC  6004               	cpfslt	___ftpack@exp,c
  4454  0014EE  D7F6               	goto	l586
  4455  0014F0                     u1350:
  4456  0014F0  A004               	btfss	___ftpack@exp,0,c
  4457  0014F2  9E02               	bcf	___ftpack@arg+1,7,c
  4458  0014F4  90D8               	bcf	status,0,c
  4459  0014F6  3204               	rrcf	___ftpack@exp,f,c
  4460  0014F8  5004               	movf	___ftpack@exp,w,c
  4461  0014FA  1203               	iorwf	___ftpack@arg+2,f,c
  4462  0014FC  5005               	movf	___ftpack@sign,w,c
  4463  0014FE  A4D8               	btfss	status,2,c
  4464  001500  8E03               	bsf	___ftpack@arg+2,7,c
  4465  001502  C001  F001         	movff	___ftpack@arg,?___ftpack
  4466  001506  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4467  00150A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4468  00150E  0012               	return	
  4469  001510                     __end_of___ftpack:
  4470                           	opt stack 0
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           wreg	equ	0xFE8
  4476                           indf1	equ	0xFE7
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _MPU_Start_Loc *****************
  4485 ;; Defined at:
  4486 ;;		line 115 in file "../PIC_MPU-6050.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    3
  4507 ;; This function calls:
  4508 ;;		_I2C_Repeated_Start
  4509 ;;		_I2C_Start_Wait
  4510 ;;		_I2C_Write
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text26
  4517  001AF4                     __ptext26:
  4518                           	opt stack 0
  4519  001AF4                     _MPU_Start_Loc:
  4520                           	opt stack 27
  4521                           
  4522                           ;PIC_MPU-6050.c: 116: I2C_Start_Wait(0xD0);
  4523                           
  4524                           ;incstack = 0
  4525  001AF4  0ED0               	movlw	208
  4526  001AF6  EC3D  F00D         	call	_I2C_Start_Wait
  4527                           
  4528                           ;PIC_MPU-6050.c: 117: I2C_Write(0x3B);
  4529  001AFA  0E3B               	movlw	59
  4530  001AFC  EC6F  F00D         	call	_I2C_Write
  4531                           
  4532                           ;PIC_MPU-6050.c: 118: I2C_Repeated_Start(0xD1);
  4533  001B00  0ED1               	movlw	209
  4534  001B02  EC64  F00D         	call	_I2C_Repeated_Start
  4535  001B06  0012               	return		;funcret
  4536  001B08                     __end_of_MPU_Start_Loc:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           wreg	equ	0xFE8
  4543                           indf1	equ	0xFE7
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8
  4550                           
  4551 ;; *************** function _I2C_Repeated_Start *****************
  4552 ;; Defined at:
  4553 ;;		line 46 in file "../I2C_Source_File.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  slave_read_a    1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      unsigned char 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0
  4568 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4570 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4571 ;;Total ram usage:        1 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:    2
  4574 ;; This function calls:
  4575 ;;		_I2C_Write
  4576 ;; This function is called by:
  4577 ;;		_MPU_Start_Loc
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text27
  4582  001AC8                     __ptext27:
  4583                           	opt stack 0
  4584  001AC8                     _I2C_Repeated_Start:
  4585                           	opt stack 27
  4586                           
  4587                           ;incstack = 0
  4588                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  4589  001AC8  6E02               	movwf	I2C_Repeated_Start@slave_read_address,c
  4590                           
  4591                           ;I2C_Source_File.c: 48: RSEN = 1;
  4592  001ACA  82C5               	bsf	4037,1,c	;volatile
  4593  001ACC  B2C5               	btfsc	4037,1,c	;volatile
  4594  001ACE  D7FE               	goto	l65
  4595                           
  4596                           ;I2C_Source_File.c: 50: SSPIF = 0;
  4597  001AD0  969E               	bcf	3998,3,c	;volatile
  4598                           
  4599                           ;I2C_Source_File.c: 51: if(!SSPSTATbits.S)
  4600  001AD2  A6C7               	btfss	4039,3,c	;volatile
  4601  001AD4  0012               	return	
  4602                           
  4603                           ;I2C_Source_File.c: 53: I2C_Write(slave_read_address);
  4604                           
  4605                           ;I2C_Source_File.c: 52: return 0;
  4606                           ;	Return value of _I2C_Repeated_Start is never used
  4607  001AD6  5002               	movf	I2C_Repeated_Start@slave_read_address,w,c
  4608  001AD8  EC6F  F00D         	call	_I2C_Write
  4609                           
  4610                           ;I2C_Source_File.c: 56: else
  4611                           ;I2C_Source_File.c: 57: return 2;
  4612                           ;	Return value of _I2C_Repeated_Start is never used
  4613                           
  4614                           ;I2C_Source_File.c: 55: return 1;
  4615                           ;	Return value of _I2C_Repeated_Start is never used
  4616                           
  4617                           ;I2C_Source_File.c: 54: if (ACKSTAT)
  4618  001ADC  0012               	return	
  4619  001ADE                     __end_of_I2C_Repeated_Start:
  4620                           	opt stack 0
  4621                           tblptru	equ	0xFF8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           tablat	equ	0xFF5
  4625                           wreg	equ	0xFE8
  4626                           indf1	equ	0xFE7
  4627                           fsr1h	equ	0xFE2
  4628                           fsr1l	equ	0xFE1
  4629                           indf2	equ	0xFDF
  4630                           fsr2h	equ	0xFDA
  4631                           fsr2l	equ	0xFD9
  4632                           status	equ	0xFD8
  4633                           
  4634 ;; *************** function _MPU6050_Init *****************
  4635 ;; Defined at:
  4636 ;;		line 86 in file "../PIC_MPU-6050.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		_I2C_Start_Wait
  4659 ;;		_I2C_Stop
  4660 ;;		_I2C_Write
  4661 ;;		_Mydelay
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text28
  4668  0016C8                     __ptext28:
  4669                           	opt stack 0
  4670  0016C8                     _MPU6050_Init:
  4671                           	opt stack 27
  4672                           
  4673                           ;PIC_MPU-6050.c: 87: Mydelay(150);
  4674                           
  4675                           ;incstack = 0
  4676  0016C8  0E00               	movlw	0
  4677  0016CA  6E02               	movwf	Mydelay@tempo+1,c
  4678  0016CC  0E96               	movlw	150
  4679  0016CE  6E01               	movwf	Mydelay@tempo,c
  4680  0016D0  ECA8  F00C         	call	_Mydelay	;wreg free
  4681                           
  4682                           ;PIC_MPU-6050.c: 88: I2C_Start_Wait(0xD0);
  4683  0016D4  0ED0               	movlw	208
  4684  0016D6  EC3D  F00D         	call	_I2C_Start_Wait
  4685                           
  4686                           ;PIC_MPU-6050.c: 89: I2C_Write(0x19);
  4687  0016DA  0E19               	movlw	25
  4688  0016DC  EC6F  F00D         	call	_I2C_Write
  4689                           
  4690                           ;PIC_MPU-6050.c: 90: I2C_Write(0x07);
  4691  0016E0  0E07               	movlw	7
  4692  0016E2  EC6F  F00D         	call	_I2C_Write
  4693                           
  4694                           ;PIC_MPU-6050.c: 91: I2C_Stop();
  4695  0016E6  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4696                           
  4697                           ;PIC_MPU-6050.c: 93: I2C_Start_Wait(0xD0);
  4698  0016EA  0ED0               	movlw	208
  4699  0016EC  EC3D  F00D         	call	_I2C_Start_Wait
  4700                           
  4701                           ;PIC_MPU-6050.c: 94: I2C_Write(0x6B);
  4702  0016F0  0E6B               	movlw	107
  4703  0016F2  EC6F  F00D         	call	_I2C_Write
  4704                           
  4705                           ;PIC_MPU-6050.c: 95: I2C_Write(0x01);
  4706  0016F6  0E01               	movlw	1
  4707  0016F8  EC6F  F00D         	call	_I2C_Write
  4708                           
  4709                           ;PIC_MPU-6050.c: 96: I2C_Stop();
  4710  0016FC  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4711                           
  4712                           ;PIC_MPU-6050.c: 98: I2C_Start_Wait(0xD0);
  4713  001700  0ED0               	movlw	208
  4714  001702  EC3D  F00D         	call	_I2C_Start_Wait
  4715                           
  4716                           ;PIC_MPU-6050.c: 99: I2C_Write(0x1A);
  4717  001706  0E1A               	movlw	26
  4718  001708  EC6F  F00D         	call	_I2C_Write
  4719                           
  4720                           ;PIC_MPU-6050.c: 100: I2C_Write(0x00);
  4721  00170C  0E00               	movlw	0
  4722  00170E  EC6F  F00D         	call	_I2C_Write
  4723                           
  4724                           ;PIC_MPU-6050.c: 101: I2C_Stop();
  4725  001712  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4726                           
  4727                           ;PIC_MPU-6050.c: 103: I2C_Start_Wait(0xD0);
  4728  001716  0ED0               	movlw	208
  4729  001718  EC3D  F00D         	call	_I2C_Start_Wait
  4730                           
  4731                           ;PIC_MPU-6050.c: 104: I2C_Write(0x1B);
  4732  00171C  0E1B               	movlw	27
  4733  00171E  EC6F  F00D         	call	_I2C_Write
  4734                           
  4735                           ;PIC_MPU-6050.c: 105: I2C_Write(0x18);
  4736  001722  0E18               	movlw	24
  4737  001724  EC6F  F00D         	call	_I2C_Write
  4738                           
  4739                           ;PIC_MPU-6050.c: 106: I2C_Stop();
  4740  001728  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4741                           
  4742                           ;PIC_MPU-6050.c: 108: I2C_Start_Wait(0xD0);
  4743  00172C  0ED0               	movlw	208
  4744  00172E  EC3D  F00D         	call	_I2C_Start_Wait
  4745                           
  4746                           ;PIC_MPU-6050.c: 109: I2C_Write(0x38);
  4747  001732  0E38               	movlw	56
  4748  001734  EC6F  F00D         	call	_I2C_Write
  4749                           
  4750                           ;PIC_MPU-6050.c: 110: I2C_Write(0x01);
  4751  001738  0E01               	movlw	1
  4752  00173A  EC6F  F00D         	call	_I2C_Write
  4753                           
  4754                           ;PIC_MPU-6050.c: 111: I2C_Stop();
  4755  00173E  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4756  001742  0012               	return		;funcret
  4757  001744                     __end_of_MPU6050_Init:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           wreg	equ	0xFE8
  4764                           indf1	equ	0xFE7
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           indf2	equ	0xFDF
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _Mydelay *****************
  4773 ;; Defined at:
  4774 ;;		line 120 in file "../PIC_MPU-6050.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  tempo           2    0[COMRAM] int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  i               2    3[COMRAM] int 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4788 ;;      Params:         2       0       0       0       0       0       0       0       0
  4789 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4790 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4791 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:        5 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;;		_MPU6050_Init
  4799 ;;		_limpa
  4800 ;;		_escreve
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text29
  4805  001950                     __ptext29:
  4806                           	opt stack 0
  4807  001950                     _Mydelay:
  4808                           	opt stack 29
  4809                           
  4810                           ;PIC_MPU-6050.c: 121: int i;
  4811                           ;PIC_MPU-6050.c: 122: for (i=0;i<tempo;i++)
  4812                           
  4813                           ;incstack = 0
  4814  001950  0E00               	movlw	0
  4815  001952  6E05               	movwf	Mydelay@i+1,c
  4816  001954  0E00               	movlw	0
  4817  001956  6E04               	movwf	Mydelay@i,c
  4818  001958  D00A               	goto	l193
  4819  00195A                     
  4820                           ;PIC_MPU-6050.c: 123: {
  4821                           ;PIC_MPU-6050.c: 124: _delay((unsigned long)((1)*(20000000/4000.0)));
  4822  00195A  0E07               	movlw	7
  4823  00195C  6E03               	movwf	??_Mydelay& (0+255),c
  4824  00195E  0E7D               	movlw	125
  4825  001960                     u2607:
  4826  001960  2EE8               	decfsz	wreg,f,c
  4827  001962  D7FE               	bra	u2607
  4828  001964  2E03               	decfsz	??_Mydelay& (0+255),f,c
  4829  001966  D7FC               	bra	u2607
  4830  001968  F000               	nop	
  4831  00196A  4A04               	infsnz	Mydelay@i,f,c
  4832  00196C  2A05               	incf	Mydelay@i+1,f,c
  4833  00196E                     l193:
  4834  00196E  5001               	movf	Mydelay@tempo,w,c
  4835  001970  5C04               	subwf	Mydelay@i,w,c
  4836  001972  5005               	movf	Mydelay@i+1,w,c
  4837  001974  0A80               	xorlw	128
  4838  001976  6E03               	movwf	??_Mydelay& (0+255),c
  4839  001978  5002               	movf	Mydelay@tempo+1,w,c
  4840  00197A  0A80               	xorlw	128
  4841  00197C  5803               	subwfb	??_Mydelay& (0+255),w,c
  4842  00197E  B0D8               	btfsc	status,0,c
  4843  001980  0012               	return	
  4844  001982  D7EB               	goto	l194
  4845  001984                     __end_of_Mydelay:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           wreg	equ	0xFE8
  4852                           indf1	equ	0xFE7
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _I2C_Start_Wait *****************
  4861 ;; Defined at:
  4862 ;;		line 27 in file "../I2C_Source_File.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  slave_write_    1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  slave_write_    1    1[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0
  4877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4880 ;;Total ram usage:        1 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    2
  4883 ;; This function calls:
  4884 ;;		_I2C_Stop
  4885 ;;		_I2C_Write
  4886 ;; This function is called by:
  4887 ;;		_MPU6050_Init
  4888 ;;		_MPU_Start_Loc
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text30
  4893  001A7A                     __ptext30:
  4894                           	opt stack 0
  4895  001A7A                     _I2C_Start_Wait:
  4896                           	opt stack 27
  4897                           
  4898                           ;incstack = 0
  4899                           ;I2C_Start_Wait@slave_write_address stored from wreg
  4900  001A7A  6E02               	movwf	I2C_Start_Wait@slave_write_address,c
  4901  001A7C                     l53:
  4902                           
  4903                           ;I2C_Source_File.c: 30: {
  4904                           ;I2C_Source_File.c: 31: SSPCON2bits.SEN = 1;
  4905  001A7C  80C5               	bsf	4037,0,c	;volatile
  4906  001A7E  B0C5               	btfsc	4037,0,c	;volatile
  4907  001A80  D7FE               	goto	l55
  4908                           
  4909                           ;I2C_Source_File.c: 33: SSPIF = 0;
  4910  001A82  969E               	bcf	3998,3,c	;volatile
  4911                           
  4912                           ;I2C_Source_File.c: 34: if(!SSPSTATbits.S)
  4913  001A84  A6C7               	btfss	4039,3,c	;volatile
  4914  001A86  D7FA               	goto	l53
  4915                           
  4916                           ;I2C_Source_File.c: 36: I2C_Write(slave_write_address);
  4917                           
  4918                           ;I2C_Source_File.c: 35: continue;
  4919  001A88  5002               	movf	I2C_Start_Wait@slave_write_address,w,c
  4920  001A8A  EC6F  F00D         	call	_I2C_Write
  4921                           
  4922                           ;I2C_Source_File.c: 37: if(ACKSTAT)
  4923  001A8E  ACC5               	btfss	4037,6,c	;volatile
  4924  001A90  0012               	return	
  4925                           
  4926                           ;I2C_Source_File.c: 38: {
  4927                           ;I2C_Source_File.c: 39: I2C_Stop();
  4928  001A92  EC8C  F00D         	call	_I2C_Stop	;wreg free
  4929                           
  4930                           ;I2C_Source_File.c: 40: continue;
  4931  001A96  D7F2               	goto	l53
  4932  001A98                     __end_of_I2C_Start_Wait:
  4933                           	opt stack 0
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           wreg	equ	0xFE8
  4939                           indf1	equ	0xFE7
  4940                           fsr1h	equ	0xFE2
  4941                           fsr1l	equ	0xFE1
  4942                           indf2	equ	0xFDF
  4943                           fsr2h	equ	0xFDA
  4944                           fsr2l	equ	0xFD9
  4945                           status	equ	0xFD8
  4946                           
  4947 ;; *************** function _I2C_Write *****************
  4948 ;; Defined at:
  4949 ;;		line 60 in file "../I2C_Source_File.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  data            1    wreg     unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  data            1    0[COMRAM] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0
  4964 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4966 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4967 ;;Total ram usage:        1 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    1
  4970 ;; This function calls:
  4971 ;;		_I2C_Ready
  4972 ;; This function is called by:
  4973 ;;		_I2C_Start_Wait
  4974 ;;		_I2C_Repeated_Start
  4975 ;;		_MPU6050_Init
  4976 ;;		_MPU_Start_Loc
  4977 ;;		_I2C_Start
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text31
  4982  001ADE                     __ptext31:
  4983                           	opt stack 0
  4984  001ADE                     _I2C_Write:
  4985                           	opt stack 28
  4986                           
  4987                           ;incstack = 0
  4988                           ;I2C_Write@data stored from wreg
  4989  001ADE  6E01               	movwf	I2C_Write@data,c
  4990                           
  4991                           ;I2C_Source_File.c: 62: SSPBUF = data;
  4992  001AE0  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  4993                           
  4994                           ;I2C_Source_File.c: 63: I2C_Ready();
  4995  001AE4  ECA5  F00D         	call	_I2C_Ready	;wreg free
  4996                           
  4997                           ;I2C_Source_File.c: 64: if (ACKSTAT)
  4998  001AE8  ACC5               	btfss	4037,6,c	;volatile
  4999  001AEA  D002               	goto	l73
  5000                           
  5001                           ;I2C_Source_File.c: 65: return 1;
  5002  001AEC  0E01               	movlw	1
  5003  001AEE  0012               	return	
  5004  001AF0                     l73:
  5005                           
  5006                           ;I2C_Source_File.c: 66: else
  5007                           ;I2C_Source_File.c: 67: return 2;
  5008  001AF0  0E02               	movlw	2
  5009  001AF2  0012               	return	
  5010  001AF4                     __end_of_I2C_Write:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           wreg	equ	0xFE8
  5017                           indf1	equ	0xFE7
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _I2C_Stop *****************
  5026 ;; Defined at:
  5027 ;;		line 97 in file "../I2C_Source_File.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      unsigned char 
  5034 ;; Registers used:
  5035 ;;		wreg
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_I2C_Start_Wait
  5051 ;;		_main
  5052 ;;		_MPU6050_Init
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text32
  5057  001B18                     __ptext32:
  5058                           	opt stack 0
  5059  001B18                     _I2C_Stop:
  5060                           	opt stack 28
  5061                           
  5062                           ;I2C_Source_File.c: 99: PEN = 1;
  5063                           
  5064                           ;incstack = 0
  5065  001B18  84C5               	bsf	4037,2,c	;volatile
  5066  001B1A  B4C5               	btfsc	4037,2,c	;volatile
  5067  001B1C  D7FE               	goto	l99
  5068                           
  5069                           ;I2C_Source_File.c: 101: SSPIF = 0;
  5070  001B1E  969E               	bcf	3998,3,c	;volatile
  5071                           
  5072                           ;I2C_Source_File.c: 102: if(!SSPSTATbits.P);
  5073  001B20  50C7               	movf	4039,w,c	;volatile
  5074  001B22  0012               	return	
  5075  001B24                     __end_of_I2C_Stop:
  5076                           	opt stack 0
  5077                           tblptru	equ	0xFF8
  5078                           tblptrh	equ	0xFF7
  5079                           tblptrl	equ	0xFF6
  5080                           tablat	equ	0xFF5
  5081                           wreg	equ	0xFE8
  5082                           indf1	equ	0xFE7
  5083                           fsr1h	equ	0xFE2
  5084                           fsr1l	equ	0xFE1
  5085                           indf2	equ	0xFDF
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _I2C_Read *****************
  5091 ;; Defined at:
  5092 ;;		line 83 in file "../I2C_Source_File.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  flag            1    wreg     unsigned char 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  flag            1    0[COMRAM] unsigned char 
  5097 ;;  buffer          1    1[COMRAM] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      unsigned char 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0
  5108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        2 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    1
  5114 ;; This function calls:
  5115 ;;		_I2C_Ack
  5116 ;;		_I2C_Nack
  5117 ;;		_I2C_Ready
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text33
  5124  001A38                     __ptext33:
  5125                           	opt stack 0
  5126  001A38                     _I2C_Read:
  5127                           	opt stack 29
  5128                           
  5129                           ;incstack = 0
  5130                           ;I2C_Read@flag stored from wreg
  5131  001A38  6E01               	movwf	I2C_Read@flag,c
  5132                           
  5133                           ;I2C_Source_File.c: 85: char buffer;
  5134                           ;I2C_Source_File.c: 86: RCEN = 1;
  5135  001A3A  86C5               	bsf	4037,3,c	;volatile
  5136  001A3C  A0C7               	btfss	4039,0,c	;volatile
  5137  001A3E  D7FE               	goto	l91
  5138                           
  5139                           ;I2C_Source_File.c: 88: buffer = SSPBUF;
  5140  001A40  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  5141                           
  5142                           ;I2C_Source_File.c: 89: if(flag==0)
  5143  001A44  5001               	movf	I2C_Read@flag,w,c
  5144  001A46  A4D8               	btfss	status,2,c
  5145  001A48  D003               	goto	l93
  5146                           
  5147                           ;I2C_Source_File.c: 90: I2C_Ack();
  5148  001A4A  EC9C  F00D         	call	_I2C_Ack	;wreg free
  5149  001A4E  D002               	goto	l94
  5150  001A50                     l93:
  5151                           
  5152                           ;I2C_Source_File.c: 91: else
  5153                           ;I2C_Source_File.c: 92: I2C_Nack();
  5154  001A50  EC97  F00D         	call	_I2C_Nack	;wreg free
  5155  001A54                     l94:
  5156                           
  5157                           ;I2C_Source_File.c: 93: I2C_Ready();
  5158  001A54  ECA5  F00D         	call	_I2C_Ready	;wreg free
  5159                           
  5160                           ;I2C_Source_File.c: 94: return(buffer);
  5161  001A58  5002               	movf	I2C_Read@buffer,w,c
  5162  001A5A  0012               	return	
  5163  001A5C                     __end_of_I2C_Read:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           wreg	equ	0xFE8
  5170                           indf1	equ	0xFE7
  5171                           fsr1h	equ	0xFE2
  5172                           fsr1l	equ	0xFE1
  5173                           indf2	equ	0xFDF
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _I2C_Ready *****************
  5179 ;; Defined at:
  5180 ;;		line 106 in file "../I2C_Source_File.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		None
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_I2C_Write
  5204 ;;		_I2C_Read
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text34
  5209  001B4A                     __ptext34:
  5210                           	opt stack 0
  5211  001B4A                     _I2C_Ready:
  5212                           	opt stack 28
  5213                           
  5214                           ;I2C_Source_File.c: 108: while(!SSPIF);
  5215                           
  5216                           ;incstack = 0
  5217  001B4A  A69E               	btfss	3998,3,c	;volatile
  5218  001B4C  D7FE               	goto	_I2C_Ready
  5219                           
  5220                           ;I2C_Source_File.c: 109: SSPIF=0;
  5221  001B4E  969E               	bcf	3998,3,c	;volatile
  5222  001B50  0012               	return		;funcret
  5223  001B52                     __end_of_I2C_Ready:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           wreg	equ	0xFE8
  5230                           indf1	equ	0xFE7
  5231                           fsr1h	equ	0xFE2
  5232                           fsr1l	equ	0xFE1
  5233                           indf2	equ	0xFDF
  5234                           fsr2h	equ	0xFDA
  5235                           fsr2l	equ	0xFD9
  5236                           status	equ	0xFD8
  5237                           
  5238 ;; *************** function _I2C_Nack *****************
  5239 ;; Defined at:
  5240 ;;		line 77 in file "../I2C_Source_File.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		None
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5257 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5258 ;;Total ram usage:        0 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_I2C_Read
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text35
  5268  001B2E                     __ptext35:
  5269                           	opt stack 0
  5270  001B2E                     _I2C_Nack:
  5271                           	opt stack 29
  5272                           
  5273                           ;I2C_Source_File.c: 79: ACKDT = 1;
  5274                           
  5275                           ;incstack = 0
  5276  001B2E  8AC5               	bsf	4037,5,c	;volatile
  5277                           
  5278                           ;I2C_Source_File.c: 80: ACKEN = 1;
  5279  001B30  88C5               	bsf	4037,4,c	;volatile
  5280  001B32  A8C5               	btfss	4037,4,c	;volatile
  5281  001B34  0012               	return	
  5282  001B36  D7FD               	goto	l85
  5283  001B38                     __end_of_I2C_Nack:
  5284                           	opt stack 0
  5285                           tblptru	equ	0xFF8
  5286                           tblptrh	equ	0xFF7
  5287                           tblptrl	equ	0xFF6
  5288                           tablat	equ	0xFF5
  5289                           wreg	equ	0xFE8
  5290                           indf1	equ	0xFE7
  5291                           fsr1h	equ	0xFE2
  5292                           fsr1l	equ	0xFE1
  5293                           indf2	equ	0xFDF
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function _I2C_Ack *****************
  5299 ;; Defined at:
  5300 ;;		line 70 in file "../I2C_Source_File.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		None
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_I2C_Read
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text36
  5328  001B38                     __ptext36:
  5329                           	opt stack 0
  5330  001B38                     _I2C_Ack:
  5331                           	opt stack 29
  5332                           
  5333                           ;I2C_Source_File.c: 72: ACKDT = 0;
  5334                           
  5335                           ;incstack = 0
  5336  001B38  9AC5               	bcf	4037,5,c	;volatile
  5337                           
  5338                           ;I2C_Source_File.c: 73: ACKEN = 1;
  5339  001B3A  88C5               	bsf	4037,4,c	;volatile
  5340  001B3C  A8C5               	btfss	4037,4,c	;volatile
  5341  001B3E  0012               	return	
  5342  001B40  D7FD               	goto	l79
  5343  001B42                     __end_of_I2C_Ack:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _I2C_Init *****************
  5359 ;; Defined at:
  5360 ;;		line 5 in file "../I2C_Source_File.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text37
  5388  001A98                     __ptext37:
  5389                           	opt stack 0
  5390  001A98                     _I2C_Init:
  5391                           	opt stack 30
  5392                           
  5393                           ;I2C_Source_File.c: 7: TRISB0 = 1;
  5394                           
  5395                           ;incstack = 0
  5396  001A98  8093               	bsf	3987,0,c	;volatile
  5397                           
  5398                           ;I2C_Source_File.c: 8: TRISB1 = 1;
  5399  001A9A  8293               	bsf	3987,1,c	;volatile
  5400                           
  5401                           ;I2C_Source_File.c: 9: SSPSTAT = 80;
  5402  001A9C  0E50               	movlw	80
  5403  001A9E  6EC7               	movwf	4039,c	;volatile
  5404                           
  5405                           ;I2C_Source_File.c: 10: SSPCON1 = 0x28;
  5406  001AA0  0E28               	movlw	40
  5407  001AA2  6EC6               	movwf	4038,c	;volatile
  5408                           
  5409                           ;I2C_Source_File.c: 11: SSPCON2 = 0;
  5410  001AA4  0E00               	movlw	0
  5411  001AA6  6EC5               	movwf	4037,c	;volatile
  5412                           
  5413                           ;I2C_Source_File.c: 12: SSPADD = ((20000000/(4*100000))-1);
  5414  001AA8  0E31               	movlw	49
  5415  001AAA  6EC8               	movwf	4040,c	;volatile
  5416                           
  5417                           ;I2C_Source_File.c: 13: SSPIE = 1;
  5418  001AAC  869D               	bsf	3997,3,c	;volatile
  5419                           
  5420                           ;I2C_Source_File.c: 14: SSPIF = 0;
  5421  001AAE  969E               	bcf	3998,3,c	;volatile
  5422  001AB0  0012               	return		;funcret
  5423  001AB2                     __end_of_I2C_Init:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           wreg	equ	0xFE8
  5430                           indf1	equ	0xFE7
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           indf2	equ	0xFDF
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           tblptru	equ	0xFF8
  5438                           tblptrh	equ	0xFF7
  5439                           tblptrl	equ	0xFF6
  5440                           tablat	equ	0xFF5
  5441                           wreg	equ	0xFE8
  5442                           indf1	equ	0xFE7
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450                           	psect	rparam
  5451  0000                     tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           wreg	equ	0xFE8
  5456                           indf1	equ	0xFE7
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      93
    BANK0           160     56      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> main@str2(BANK0[5]), main@str1(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> main@str2(BANK0[5]), main@str1(BANK0[5]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 2047
		 -> escreve@txt(COMRAM[10]), RAM(DATA[2047]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 12
		 -> main@txt(BANK0[10]), STR_7(CODE[12]), 

    traduz@txt	PTR unsigned char  size(2) Largest target is 10
		 -> escreve@txt(COMRAM[10]), main@txt(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> main@str2(BANK0[5]), main@str1(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_escreve
    _putrsXLCD->_WriteDataXLCD
    _inic_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _escreve->_traduz
    _traduz->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftpack
    ___ftadd->___ftdiv
    ___awtoft->___ftpack
    ___awmod->___fttol
    _putsXLCD->_WriteDataXLCD
    _limpa->_Mydelay
    ___ftdiv->___awtoft
    _MPU_Start_Loc->_I2C_Repeated_Start
    _MPU_Start_Loc->_I2C_Start_Wait
    _I2C_Repeated_Start->_I2C_Write
    _MPU6050_Init->_Mydelay
    _I2C_Start_Wait->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0   43924
                                             89 COMRAM     4     4      0
                                              0 BANK0     56    56      0
                           _BusyXLCD
                           _I2C_Init
                           _I2C_Read
                           _I2C_Stop
                       _MPU6050_Init
                      _MPU_Start_Loc
                            _Mydelay
                       _SetDDRamAddr
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            _escreve
                          _inic_XLCD
                              _limpa
                          _putrsXLCD
                             _strcpy
                             _traduz
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     987
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     241
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _inic_XLCD                                            0     0      0     176
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     132
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _escreve                                             20    13      7   15735
                                             69 COMRAM    20    13      7
                           _BusyXLCD
                            _Mydelay
                       _SetDDRamAddr
                              _limpa
                           _putsXLCD
                             _traduz
 ---------------------------------------------------------------------------------
 (1) _traduz                                              30    25      5   13676
                                             39 COMRAM    30    25      5
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     121
                                             12 COMRAM     3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3222
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3862
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3165
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             15 COMRAM     6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     393
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _limpa                                                0     0      0     394
                           _BusyXLCD
                            _Mydelay
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3936
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MPU_Start_Loc                                        0     0      0     110
                 _I2C_Repeated_Start
                     _I2C_Start_Wait
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         0     0      0     416
                     _I2C_Start_Wait
                           _I2C_Stop
                          _I2C_Write
                            _Mydelay
 ---------------------------------------------------------------------------------
 (2) _Mydelay                                              5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Start_Wait                                       1     1      0      44
                                              1 COMRAM     1     1      0
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _I2C_Init
   _I2C_Read
     _I2C_Ack
     _I2C_Nack
     _I2C_Ready
   _I2C_Stop
   _MPU6050_Init
     _I2C_Start_Wait
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
       _I2C_Ready
     _Mydelay
   _MPU_Start_Loc
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start_Wait
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   _Mydelay
   _SetDDRamAddr
     _DelayFor18TCY
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   _escreve
     _BusyXLCD
       _DelayFor18TCY
     _Mydelay
     _SetDDRamAddr
       _DelayFor18TCY
     _limpa
       _BusyXLCD
         _DelayFor18TCY
       _Mydelay
       _WriteCmdXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _traduz
       ___awdiv
       ___awmod
         ___fttol (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___fttol
   _inic_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _limpa
     _BusyXLCD
       _DelayFor18TCY
     _Mydelay
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _strcpy
   _traduz
     ___awdiv
     ___awmod
       ___fttol (ARG)
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     5D      5D       1       97.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      38       5       35.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 08 09:19:32 2018

                  __size_of_I2C_Ready 0008                           _SSPSTATbits 000FC7  
                  __size_of_I2C_Write 0016                                    l53 1A7C  
                                  l55 1A7E                                    l73 1AF0  
                                  l65 1ACC                                    l91 1A3C  
                                  l85 1B32                                    l93 1A50  
                                  l94 1A54                                    l79 1B3C  
                                  l99 1B1A                          ___awdiv@sign 0006  
                         __CFG_BORV$3 000000                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                          __CFG_CP2$OFF 000000  
                        __CFG_CP3$OFF 000000                          ___ftadd@exp1 0027  
                        ___ftadd@exp2 0026                          ___ftadd@sign 0025  
                                 l200 198A                                   l203 199A  
                                 l300 17E8                                   l221 0D76  
                                 l301 17B6                                   l230 0E72  
                                 l222 0D30                                   l310 1548  
                                 l206 19AA                                   l231 0E86  
                                 l233 0EDA                                   l217 0C94  
                                 l161 0854                                   l234 0EB6  
                                 l226 0DEA                                   l322 1582  
                                 l162 0858                                   l219 0D26  
                                 l243 12A6                                   l163 0B2A  
                                 l252 1300                                   l316 1562  
                                 l180 0C2C                                   l333 1A04  
                                 l229 0DF4                                   l261 1354  
                                 l325 1592                                   l165 0B7E  
                                 l334 19E8                                   l246 12DA  
                                 l174 0BEE                                   l255 1310  
                                 l319 1572                                   l167 0BD4  
                                 l159 0842                                   l328 15A2  
                                 l193 196E                                   l249 12EA  
                                 l177 0C1C                                   l194 195A  
                                 l610 0F52                                   l258 1344  
                                 l532 16A6                                   l533 16B0  
                                 l525 1658                                   l541 177A  
                                 l534 16BE                                   l526 1668  
                                 l542 1772                                   l614 0F7C  
                                 l295 1904                                   l528 1686  
                                 l624 0FD8                                   l529 167E  
                                 l545 1792                                   l553 192C  
                                 l633 1016                                   l625 0FCE  
                                 l546 179C                                   l538 1758  
                                 l634 100C                                   l643 13A4  
                                 l547 17AA                                   l539 1764  
                                 l619 0FE2                                   l651 15E4  
                                 l580 1480                                   l636 103A  
                                 l652 1614                                   l660 11F0  
                                 l645 13CC                                   l637 1056  
                                 l661 1222                                   l582 14BE  
                                 l646 140A                                   l638 1086  
                                 l662 1232                                   l583 14A8  
                                 l647 1430                                   l559 1AB4  
                                 l664 124A                                   l912 19C8  
                                 l585 14E6                                   l665 125A  
                                 l681 114E                                   l913 19C0  
                                 l586 14DC                                   l658 11C8  
                                 l690 118E                                   l682 113E  
                                 l579 148A                                   l669 1A2A  
                                 l687 1172                                   l679 10D8  
                                 l688 1166                          __CFG_CPB$OFF 000000  
                                 _PEN 007E2A                          __CFG_CPD$OFF 000000  
                        __CFG_BOR$OFF 000000                       __end_of_I2C_Ack 1B42  
               __size_of_WriteCmdXLCD 003E                          ___awmod@sign 0015  
                                 wreg 000FE8                          __CFG_FOSC$HS 000000  
                     ??_MPU_Start_Loc 0003                          __CFG_LVP$OFF 000000  
                        ___ftdiv@cntr 0016                          ___ftdiv@sign 001B  
                        __CFG_WDT$OFF 000000                                  l2504 0D30  
                                l2514 0D8A                                  l2720 1296  
                                l1998 1640                                  STR_1 080D  
                                STR_2 0817                                  STR_3 0821  
                                STR_4 0812                                  STR_5 081C  
                                STR_6 0826                                  STR_7 0801  
                                u2100 0EEE                                  u1310 1472  
                                u2040 0D84                                  u2120 1552  
                                u1500 0F6E                                  u2060 0DB6  
                                u1350 14F0                                  u1415 1826  
                                u1431 0F10                                  u1600 101E  
                                u1441 0F24                                  u1530 0FAC  
                                u2411 13B4                                  u1470 0F44  
                                u2510 0BDE                                  u2360 17E0  
                                u1641 11B0                                  u1730 168A  
                                u1570 0FEA                                  u2370 1808  
                                u1661 11D8                                  u2607 1960  
                                u2391 138C                                  u2367 17D6  
                                u2377 17FE                                  u1930 1178  
                                u1790 177E                                  u1871 10BC  
                                u2577 1B0E                                  u1890 10F6  
                                u2587 1ABA                                  u2597 1B44  
                                u1895 10EE                                  _RCEN 007E2B  
                                _RSEN 007E29                                  _main 082C  
                        ___ftpack@arg 0001                      __end_of_I2C_Nack 1B38  
                        ___ftpack@exp 0004                      __end_of_I2C_Init 1AB2  
                    __end_of_I2C_Read 1A5C                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                fsr2l 000FD9                      __end_of_I2C_Stop 1B24  
              __size_of_WriteDataXLCD 003E                                  start 0000  
                       __CFG_IESO$OFF 000000                          ___ftmul@cntr 0016  
                        ___param_bank 000000                          ___ftmul@sign 0017  
                        ___fttol@exp1 000F                          ___fttol@lval 000B  
                        _WriteCmdXLCD 18A0                       __end_of_Mydelay 1984  
                       __CFG_PLLDIV$1 000000                        __CFG_CCP2MX$ON 000000  
                       ?_SetDDRamAddr 0001                                 ?_main 0001  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___awdiv 16C8                       __end_of___ftadd 10AC  
                     __end_of___awmod 17B4                       __end_of___ftdiv 1462  
                     __end_of___ftneg 1A38                       __end_of___ftmul 1294  
                     ___awdiv@divisor 0003                       __end_of___fttol 11A0  
                     ___awdiv@counter 0005                                 _PORTD 000F83  
                       __CFG_USBDIV$1 000000                                 _TRISC 000F94  
                               _TRISD 000F95                                 _SSPIE 007CEB  
                               _SSPIF 007CF3                 __size_of_Delay10KTCYx 0016  
                       __CFG_PWRT$OFF 000000                         __CFG_WRT0$OFF 000000  
                       __CFG_WRT1$OFF 000000                         __CFG_WRT2$OFF 000000  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                       __CFG_WRTB$OFF 000000                         __CFG_WRTC$OFF 000000  
                       __CFG_WRTD$OFF 000000                        __CFG_EBTRB$OFF 000000  
                       ___awtoft@sign 000C                       __end_of_escreve 137C  
                       ?_MPU6050_Init 0001                                 _limpa 1A5C  
                       ___ftpack@sign 0005                     __end_of_I2C_Ready 1B52  
                               main@T 008F                                 main@t 007D  
                   __end_of_I2C_Write 1AF4                                 tablat 000FF5  
                               status 000FD8                        __CFG_ICPRT$OFF 000000  
                         escreve@str1 0059                           escreve@str2 0046  
                      __CFG_MCLRE$OFF 000000                       __initialization 1B24  
                        traduz@pfloat 003D                          __end_of_main 0C54  
                    __end_of_BusyXLCD 1918                          _Delay10KTCYx 1AB2  
               __size_of_DelayPORXLCD 0010                             ??_I2C_Ack 0001  
                      ??_SetDDRamAddr 0001                      __end_of_OpenXLCD 15B4  
                              ??_main 005A                         ___fttol@sign1 000A  
                       __activetblptr 000002                         _WriteDataXLCD 1862  
                      ??_MPU6050_Init 0006                                ?_limpa 0001  
                    ___awdiv@dividend 0001                      __end_of___awtoft 1950  
                    __end_of___ftpack 1510                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                          _DelayPORXLCD 1B08  
                      __CFG_XINST$OFF 000000                             ??_Mydelay 0003  
                              ___ftge 15B4                             ??___awdiv 0005  
                           ??___ftadd 0022                        __CFG_STVREN$ON 000000  
                           ??___awmod 0014                             ??___ftdiv 0013  
                           ??___ftneg 0010                             ??___ftmul 000F  
                           ??___fttol 0005                      ___awdiv@quotient 0007  
                     ___awmod@divisor 0012                       ___awmod@counter 0014  
                  _I2C_Repeated_Start 1AC8                                main@Ax 0089  
                              main@Ay 008B                                main@Az 008D  
                              _traduz 0C54                                main@Gx 0091  
                              main@Gy 0093                                main@Gz 0095  
                              main@Xa 0074                                main@Ya 0077  
                              main@Za 007A                                main@Xg 0080  
                              main@Yg 0083                                main@Zg 0086  
                      ?_WriteDataXLCD 0001                                _strcpy 19B6  
               ___ftmul@f3_as_product 0013                             ??_escreve 004D  
                           ?_I2C_Nack 0001                             ?_I2C_Init 0001  
                           ?_I2C_Read 0001                             ?_I2C_Stop 0001  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                 ?_I2C_Repeated_Start 0001                      __end_of_putsXLCD 1A14  
                          __accesstop 0060               __end_of__initialization 1B24  
                     __CFG_PBADEN$OFF 000000                            ___ftadd@f1 001C  
                          ___ftadd@f2 001F                            ___ftge@ff1 0001  
                          ___ftge@ff2 0004                         ___rparam_used 000001  
                          ___ftdiv@f1 000D                            ___ftdiv@f2 0010  
                          ___ftdiv@f3 0017                            ___ftneg@f1 000D  
                          ___awtoft@c 0009                         traduz@aux_453 003B  
                          ___ftmul@f1 0009                            ___ftmul@f2 000C  
                ??_I2C_Repeated_Start 0002                            ___fttol@f1 0001  
                      __pcstackCOMRAM 0001                         __end_of_limpa 1A7A  
                       traduz@stringh 002E                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                          ??_I2C_Stop 0001                               ??_limpa 0006  
              __size_of_DelayFor18TCY 0008                    __size_of_inic_XLCD 0032  
             __size_of_I2C_Start_Wait 001E                             ?_BusyXLCD 0001  
                     WriteCmdXLCD@cmd 0001                  __end_of_SetDDRamAddr 1862  
                           ?_OpenXLCD 0001                          I2C_Read@flag 0001  
                             ?___ftge 0001                     WriteDataXLCD@data 0001  
                      I2C_Read@buffer 0002                  __end_of_MPU6050_Init 1744  
                             _I2C_Ack 1B38                       ??_WriteDataXLCD 0001  
                             _ACKSTAT 007E2E                             ?___awtoft 0009  
                           ?___ftpack 0001                               ?_traduz 0028  
                             ?_strcpy 0001                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                 __end_of_MPU_Start_Loc 1B08  
                             _SSPSTAT 000FC7                    __size_of_putrsXLCD 005C  
                          ??_BusyXLCD 0001                       __CFG_VREGEN$OFF 000000  
                           _I2C_Ready 1B4A                            ??_OpenXLCD 0005  
                           _I2C_Write 1ADE                               __Hparam 0000  
                             __Lparam 0000                               _Mydelay 1950  
                     __size_of___ftge 0090                               ___awdiv 1644  
                       _DelayFor18TCY 1B42                               ___ftadd 0F00  
                             ___awmod 1744                               ___ftdiv 137C  
                             ___ftneg 1A14                               ___ftmul 11A0  
                             ___fttol 10AC                             ?_putsXLCD 0002  
                        __psmallconst 0800                     __end_of_inic_XLCD 19B6  
                             __pcinit 1B24                            ??___awtoft 000C  
                          ??___ftpack 0006                       putrsXLCD@buffer 0002  
                             __ramtop 0800                               __ptext0 082C  
                             __ptext1 19B6                               __ptext2 17B4  
                             __ptext3 1984                               __ptext4 1510  
                             __ptext5 1B08                               __ptext6 1AB2  
                             __ptext7 1294                               __ptext8 0C54  
                             __ptext9 10AC     I2C_Start_Wait@slave_write_address 0002  
                     __size_of_traduz 02AC                       __size_of_strcpy 0030  
                             _escreve 1294                      ___awmod@dividend 0010  
                             main@txt 0060                  end_of_initialization 1B24  
                       __Lmediumconst 0000                            ?_I2C_Ready 0001  
                          ?_I2C_Write 0001                        ?_DelayFor18TCY 0001  
                             traduz@i 0044                               traduz@j 0042  
                          ??_putsXLCD 0004                     __end_of_putrsXLCD 1810  
                           _PORTCbits 000F82                             _TRISDbits 000F95  
                   __size_of_I2C_Nack 000A                     __size_of_I2C_Init 001A  
                   __size_of_I2C_Read 0024                     __size_of_I2C_Stop 000C  
               __size_of_SetDDRamAddr 0052                        _I2C_Start_Wait 1A7A  
                         ___ftdiv@exp 001A                 __size_of_MPU6050_Init 007C  
                          main@select 0097                           ___ftmul@exp 0012  
                      __end_of___ftge 1644                          _SetDDRamAddr 1810  
                      __end_of_traduz 0F00                    SetDDRamAddr@DDaddr 0004  
                      __end_of_strcpy 19E6                   start_initialization 1B24  
                          escreve@txt 004F                __end_of_I2C_Start_Wait 1A98  
                        _MPU6050_Init 16C8  I2C_Repeated_Start@slave_read_address 0002  
                         ??_I2C_Ready 0001                     __size_of_BusyXLCD 003A  
                         ??_I2C_Write 0001                       ??_DelayFor18TCY 0001  
                   __size_of_OpenXLCD 00A4           __size_of_I2C_Repeated_Start 0016  
                            ??___ftge 0007                         ?_WriteCmdXLCD 0001  
                    __CFG_LPT1OSC$OFF 000000                              ?_I2C_Ack 0001  
                            ??_traduz 002D                              ??_strcpy 0005  
                   __size_of___awtoft 0038                     __size_of___ftpack 00AE  
                       __pcstackBANK0 0060                       ?_I2C_Start_Wait 0001  
                      putsXLCD@buffer 0002                              ?_Mydelay 0001  
                      ??_WriteCmdXLCD 0001                              ?___awdiv 0001  
                            ?___ftadd 001C                              ?___awmod 0010  
                            ?___ftdiv 000D                              ?___ftneg 000D  
                            ?___ftmul 0009                              ?___fttol 0001  
                       ?_Delay10KTCYx 0001                     __size_of_putsXLCD 002E  
               __end_of_WriteDataXLCD 18A0                              ?_escreve 0046  
                         __smallconst 0800                             _inic_XLCD 1984  
                            _I2C_Nack 1B2E                              _I2C_Init 1A98  
                            _I2C_Read 1A38                              _I2C_Stop 1B18  
                      __size_of_limpa 001E                              _LATDbits 000F8C  
                       ?_DelayPORXLCD 0001                       OpenXLCD@lcdtype 0005  
                    __CFG_WDTPS$32768 000000                        ??_Delay10KTCYx 0001  
                        Mydelay@tempo 0001                __size_of_MPU_Start_Loc 0014  
                    __size_of_I2C_Ack 000A                            ?_inic_XLCD 0001  
                           _putrsXLCD 17B4                      Delay10KTCYx@unit 0002  
                           escreve@N1 0047                             escreve@N2 004A  
                            _BusyXLCD 18DE                            traduz@pint 0040  
                      ??_DelayPORXLCD 0001                              _OpenXLCD 1510  
                            Mydelay@i 0004                              __Hrparam 0000  
                            __Lrparam 0000                      __size_of_Mydelay 0034  
                       I2C_Write@data 0001                      __size_of___awdiv 0084  
                    __size_of___ftadd 01AC                      __size_of___awmod 0070  
                    __size_of___ftdiv 00E6                      __size_of___ftneg 0024  
                    __size_of___ftmul 00F4                      __size_of___fttol 00F4  
                            ___awtoft 1918                              ___ftpack 1462  
                          ?_putrsXLCD 0002                      __size_of_escreve 00E8  
                            __ptext10 1A14                              __ptext11 11A0  
                            __ptext20 18A0                              __ptext12 15B4  
                            __ptext21 18DE                              __ptext13 0F00  
                            __ptext30 1A7A                              __ptext22 1810  
                            __ptext14 1918                              __ptext31 1ADE  
                            __ptext23 1B42                              __ptext15 1744  
                            __ptext32 1B18                              __ptext24 137C  
                            __ptext16 1644                              __ptext33 1A38  
                            __ptext25 1462                              __ptext17 19E6  
                            __ptext34 1B4A                              __ptext26 1AF4  
                            __ptext18 1862                              __ptext35 1B2E  
                            __ptext27 1AC8                              __ptext19 1A5C  
                            __ptext36 1B38                              __ptext28 16C8  
                            __ptext37 1A98                              __ptext29 1950  
                __end_of_WriteCmdXLCD 18DE                         _MPU_Start_Loc 1AF4  
                          strcpy@from 0003                         __size_of_main 0428  
                            _putsXLCD 19E6                              main@str1 006A  
                            main@str2 006F                      ??_I2C_Start_Wait 0002  
               __CFG_CPUDIV$OSC1_PLL2 000000                           ??_inic_XLCD 0006  
                           traduz@aux 0038                             traduz@num 0028  
                           traduz@txt 002B                        ?_MPU_Start_Loc 0001  
                __end_of_Delay10KTCYx 1AC8            __end_of_I2C_Repeated_Start 1ADE  
               __end_of_DelayFor18TCY 1B4A                  __end_of_DelayPORXLCD 1B18  
                         ??_putrsXLCD 0004                              strcpy@cp 0005  
                            strcpy@to 0001                           _SSPCON2bits 000FC5  
