

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 22:17:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _TRISDbits	set	3989
    71  0000                     _PORTD	set	3971
    72  0000                     _LATDbits	set	3980
    73  0000                     _TRISB	set	3987
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISA	set	3986
    77  0000                     _OSCCON	set	4051
    78  0000                     _ADCON1	set	4033
    79  0000                     _PORTCbits	set	3970
    80  0000                     _PORTBbits	set	3969
    81  0000                     _RA0	set	31744
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	opt stack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  49                 	db	73	;'I'
    89  000802  44                 	db	68	;'D'
    90  000803  20                 	db	32
    91  000804  44                 	db	68	;'D'
    92  000805  41                 	db	65	;'A'
    93  000806  20                 	db	32
    94  000807  54                 	db	84	;'T'
    95  000808  41                 	db	65	;'A'
    96  000809  47                 	db	71	;'G'
    97  00080A  00                 	db	0
    98                           
    99                           ; #config settings
   100  00080B  00                 	db	0	; dummy byte at the end
   101  0000                     
   102                           	psect	cinit
   103  0011EE                     __pcinit:
   104                           	opt stack 0
   105  0011EE                     start_initialization:
   106                           	opt stack 0
   107  0011EE                     __initialization:
   108                           	opt stack 0
   109  0011EE                     end_of_initialization:
   110                           	opt stack 0
   111  0011EE                     __end_of__initialization:
   112                           	opt stack 0
   113  0011EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   114  0011F0  6EF8               	movwf	tblptru,c
   115  0011F2  0100               	movlb	0
   116  0011F4  EF22  F005         	goto	_main	;jump to C main() function
   117                           tblptru	equ	0xFF8
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	opt stack 0
   122  000001                     ??_SetDDRamAddr:
   123  000001                     ??_Delay10KTCYx:
   124  000001                     ??_DelayPORXLCD:
   125  000001                     ?_MFRC522_Rd:
   126                           	opt stack 0
   127  000001                     WriteCmdXLCD@cmd:
   128                           	opt stack 0
   129  000001                     WriteDataXLCD@data:
   130                           	opt stack 0
   131  000001                     MFRC522_Rd@Address:
   132                           	opt stack 0
   133  000001                     MFRC522_Wr@Address:
   134                           	opt stack 0
   135  000001                     traduz@numero:
   136                           	opt stack 0
   137  000001                     Mydelay@tempo:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x0
   141  000001                     	ds	1
   142  000002                     Delay10KTCYx@unit:
   143                           	opt stack 0
   144  000002                     putsXLCD@buffer:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x1
   148  000002                     	ds	1
   149  000003                     ??_MFRC522_Rd:
   150  000003                     ??_Mydelay:
   151  000003                     MFRC522_Wr@value:
   152                           	opt stack 0
   153  000003                     traduz@txt:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x2
   157  000003                     	ds	1
   158  000004                     SetDDRamAddr@DDaddr:
   159                           	opt stack 0
   160  000004                     Mydelay@i:
   161                           	opt stack 0
   162                           
   163                           ; 2 bytes @ 0x3
   164  000004                     	ds	1
   165  000005                     ??_MFRC522_Wr:
   166  000005                     ??_traduz:
   167  000005                     OpenXLCD@lcdtype:
   168                           	opt stack 0
   169  000005                     MFRC522_Rd@ucAddr:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x4
   173  000005                     	ds	1
   174  000006                     
   175                           ; 1 bytes @ 0x5
   176  000006                     	ds	1
   177  000007                     MFRC522_Rd@ucResult:
   178                           	opt stack 0
   179  000007                     MFRC522_Wr@ucAddr:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x6
   183  000007                     	ds	1
   184  000008                     traduz@a:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x7
   188  000008                     	ds	1
   189  000009                     traduz@b:
   190                           	opt stack 0
   191  000009                     MFRC522_Rd@i:
   192                           	opt stack 0
   193  000009                     MFRC522_Wr@i:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x8
   197  000009                     	ds	2
   198  00000B                     MFRC522_Clear_Bit@mask:
   199                           	opt stack 0
   200  00000B                     MFRC522_Set_Bit@mask:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0xA
   204  00000B                     	ds	1
   205  00000C                     ??_MFRC522_Clear_Bit:
   206  00000C                     MFRC522_Set_Bit@tmp:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0xB
   210  00000C                     	ds	2
   211  00000E                     MFRC522_Set_Bit@addr:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0xD
   215  00000E                     	ds	1
   216  00000F                     MFRC522_AntennaOn@stt:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0xE
   220  00000F                     	ds	1
   221  000010                     MFRC522_Clear_Bit@tmp:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0xF
   225  000010                     	ds	1
   226  000011                     
   227                           ; 1 bytes @ 0x10
   228  000011                     	ds	1
   229  000012                     MFRC522_Clear_Bit@addr:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x11
   233  000012                     	ds	1
   234  000013                     MFRC522_ToCard@sendData:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x12
   238  000013                     	ds	2
   239  000015                     MFRC522_ToCard@sendLen:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x14
   243  000015                     	ds	1
   244  000016                     MFRC522_ToCard@backData:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x15
   248  000016                     	ds	2
   249  000018                     MFRC522_ToCard@backLen:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x17
   253  000018                     	ds	2
   254  00001A                     ??_MFRC522_ToCard:
   255                           
   256                           ; 1 bytes @ 0x19
   257  00001A                     	ds	4
   258  00001E                     MFRC522_ToCard@waitIRq:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x1D
   262  00001E                     	ds	1
   263  00001F                     MFRC522_ToCard@_status:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x1E
   267  00001F                     	ds	1
   268  000020                     MFRC522_ToCard@lastBits:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x1F
   272  000020                     	ds	1
   273  000021                     MFRC522_ToCard@irqEn:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x20
   277  000021                     	ds	1
   278  000022                     MFRC522_ToCard@command:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x21
   282  000022                     	ds	1
   283  000023                     MFRC522_ToCard@i:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x22
   287  000023                     	ds	2
   288  000025                     MFRC522_ToCard@n:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x24
   292  000025                     	ds	1
   293  000026                     MFRC522_Request@TagType:
   294                           	opt stack 0
   295  000026                     MFRC522_AntiColl@serNum:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x25
   299  000026                     	ds	2
   300  000028                     MFRC522_Request@reqMode:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x27
   304  000028                     	ds	1
   305  000029                     MFRC522_Request@_status:
   306                           	opt stack 0
   307  000029                     MFRC522_AntiColl@serNumCheck:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x28
   311  000029                     	ds	1
   312  00002A                     MFRC522_Request@backBits:
   313                           	opt stack 0
   314  00002A                     MFRC522_AntiColl@unLen:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x29
   318  00002A                     	ds	2
   319  00002C                     MFRC522_AntiColl@_status:
   320                           	opt stack 0
   321  00002C                     MFRC522_isCard@TagType:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x2B
   325  00002C                     	ds	1
   326  00002D                     MFRC522_AntiColl@i:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x2C
   330  00002D                     	ds	1
   331  00002E                     MFRC522_ReadCardSerial@str:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2D
   335  00002E                     	ds	2
   336  000030                     MFRC522_ReadCardSerial@_status:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x2F
   340  000030                     	ds	1
   341  000031                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x30
   344  000031                     	ds	1
   345  000032                     main@UID:
   346                           	opt stack 0
   347                           
   348                           ; 10 bytes @ 0x31
   349  000032                     	ds	10
   350  00003C                     main@buffer:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x3B
   354  00003C                     	ds	3
   355  00003F                     main@var:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x3E
   359  00003F                     	ds	2
   360  000041                     main@TagType:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x40
   364  000041                     	ds	2
   365  000043                     main@i:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x42
   369  000043                     	ds	2
   370                           tblptru	equ	0xFF8
   371                           
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 69 in file "../main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  i               2   66[COMRAM] int 
   382 ;;  var             2   62[COMRAM] int 
   383 ;;  UID            10   49[COMRAM] unsigned char [10]
   384 ;;  buffer          3   59[COMRAM] unsigned char [3]
   385 ;;  TagType         2   64[COMRAM] unsigned int 
   386 ;;  size            1    0        unsigned char 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  2  215[None  ] int 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   396 ;;      Params:         0       0       0       0       0       0       0       0       0
   397 ;;      Locals:        19       0       0       0       0       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0       0       0       0       0
   399 ;;      Totals:        20       0       0       0       0       0       0       0       0
   400 ;;Total ram usage:       20 bytes
   401 ;; Hardware stack levels required when called:    5
   402 ;; This function calls:
   403 ;;		_BusyXLCD
   404 ;;		_MFRC522_Init
   405 ;;		_MFRC522_ReadCardSerial
   406 ;;		_MFRC522_isCard
   407 ;;		_Mydelay
   408 ;;		_SetDDRamAddr
   409 ;;		_inic_XLCD
   410 ;;		_putsXLCD
   411 ;;		_traduz
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text0
   418  000A44                     __ptext0:
   419                           	opt stack 0
   420  000A44                     _main:
   421                           	opt stack 26
   422                           
   423                           ;main.c: 70: ADCON1 = 0x0F;
   424                           
   425                           ;incstack = 0
   426  000A44  0E0F               	movlw	15
   427  000A46  6EC1               	movwf	4033,c	;volatile
   428                           
   429                           ;main.c: 71: OSCCON = 0b01110111;
   430  000A48  0E77               	movlw	119
   431  000A4A  6ED3               	movwf	4051,c	;volatile
   432                           
   433                           ;main.c: 72: TRISA = 0x00;
   434  000A4C  0E00               	movlw	0
   435  000A4E  6E92               	movwf	3986,c	;volatile
   436                           
   437                           ;main.c: 73: TRISD = 0b00000010;
   438  000A50  0E02               	movlw	2
   439  000A52  6E95               	movwf	3989,c	;volatile
   440                           
   441                           ;main.c: 74: TRISC = 0b11111111;
   442  000A54  6894               	setf	3988,c	;volatile
   443                           
   444                           ;main.c: 75: TRISB = 0b00000000;
   445  000A56  0E00               	movlw	0
   446  000A58  6E93               	movwf	3987,c	;volatile
   447                           
   448                           ;main.c: 76: MFRC522_Init();
   449  000A5A  ECD4  F006         	call	_MFRC522_Init	;wreg free
   450                           
   451                           ;main.c: 77: inic_XLCD();
   452  000A5E  EC52  F008         	call	_inic_XLCD	;wreg free
   453                           
   454                           ;main.c: 78: char UID[10];
   455                           ;main.c: 79: char buffer[3];
   456                           ;main.c: 81: unsigned TagType;
   457                           ;main.c: 82: char size;
   458                           ;main.c: 83: SetDDRamAddr(0x03);
   459  000A62  0E03               	movlw	3
   460  000A64  ECAD  F007         	call	_SetDDRamAddr
   461  000A68  EC35  F008         	call	_BusyXLCD	;wreg free
   462  000A6C  0900               	iorlw	0
   463  000A6E  A4D8               	btfss	status,2,c
   464  000A70  D7FB               	goto	l217
   465                           
   466                           ;main.c: 85: putsXLCD("ID DA TAG");
   467  000A72  0E01               	movlw	low STR_1
   468  000A74  6E02               	movwf	putsXLCD@buffer,c
   469  000A76  0E08               	movlw	high STR_1
   470  000A78  6E03               	movwf	putsXLCD@buffer+1,c
   471  000A7A  EC7F  F007         	call	_putsXLCD	;wreg free
   472  000A7E                     l2185:
   473                           
   474                           ;main.c: 87: if (MFRC522_isCard(&TagType)) {
   475  000A7E  0E41               	movlw	low main@TagType
   476  000A80  6E2C               	movwf	MFRC522_isCard@TagType,c
   477  000A82  0E00               	movlw	high main@TagType
   478  000A84  6E2D               	movwf	MFRC522_isCard@TagType+1,c
   479  000A86  ECD5  F008         	call	_MFRC522_isCard	;wreg free
   480  000A8A  0900               	iorlw	0
   481  000A8C  B4D8               	btfsc	status,2,c
   482  000A8E  D7F7               	goto	l219
   483                           
   484                           ;main.c: 89: if (MFRC522_ReadCardSerial(&UID)) {
   485  000A90  0E32               	movlw	low main@UID
   486  000A92  6E2E               	movwf	MFRC522_ReadCardSerial@str,c
   487  000A94  0E00               	movlw	high main@UID
   488  000A96  6E2F               	movwf	MFRC522_ReadCardSerial@str+1,c
   489  000A98  EC9D  F008         	call	_MFRC522_ReadCardSerial	;wreg free
   490  000A9C  0900               	iorlw	0
   491  000A9E  B4D8               	btfsc	status,2,c
   492  000AA0  D7EE               	goto	l219
   493                           
   494                           ;main.c: 90: RA0 = ! RA0;
   495  000AA2  B080               	btfsc	3968,0,c	;volatile
   496  000AA4  D002               	goto	u1650
   497  000AA6  8080               	bsf	3968,0,c	;volatile
   498  000AA8  D001               	goto	u1665
   499  000AAA                     u1650:
   500  000AAA  9080               	bcf	3968,0,c	;volatile
   501  000AAC                     u1665:
   502                           
   503                           ;main.c: 91: Mydelay(500);
   504  000AAC  0E01               	movlw	1
   505  000AAE  6E02               	movwf	Mydelay@tempo+1,c
   506  000AB0  0EF4               	movlw	244
   507  000AB2  6E01               	movwf	Mydelay@tempo,c
   508  000AB4  EC6B  F008         	call	_Mydelay	;wreg free
   509                           
   510                           ;main.c: 92: int var= 0x40;
   511  000AB8  0E00               	movlw	0
   512  000ABA  6E40               	movwf	main@var+1,c
   513  000ABC  0E40               	movlw	64
   514  000ABE  6E3F               	movwf	main@var,c
   515                           
   516                           ;main.c: 93: SetDDRamAddr(var);
   517  000AC0  503F               	movf	main@var,w,c
   518  000AC2  ECAD  F007         	call	_SetDDRamAddr
   519  000AC6  EC35  F008         	call	_BusyXLCD	;wreg free
   520  000ACA  0900               	iorlw	0
   521  000ACC  A4D8               	btfss	status,2,c
   522  000ACE  D7FB               	goto	l223
   523                           
   524                           ;main.c: 95: for(int i = 0; i < 5; i++){
   525  000AD0  0E00               	movlw	0
   526  000AD2  6E44               	movwf	main@i+1,c
   527  000AD4  0E00               	movlw	0
   528  000AD6  6E43               	movwf	main@i,c
   529  000AD8                     l2201:
   530  000AD8  BE44               	btfsc	main@i+1,7,c
   531  000ADA  D006               	goto	l225
   532  000ADC  5044               	movf	main@i+1,w,c
   533  000ADE  E1CF               	bnz	l2185
   534  000AE0  0E05               	movlw	5
   535  000AE2  5C43               	subwf	main@i,w,c
   536  000AE4  B0D8               	btfsc	status,0,c
   537  000AE6  D7CB               	goto	l219
   538  000AE8                     l225:
   539                           
   540                           ;main.c: 96: traduz(UID[i],buffer);
   541  000AE8  0E32               	movlw	low main@UID
   542  000AEA  2443               	addwf	main@i,w,c
   543  000AEC  6ED9               	movwf	fsr2l,c
   544  000AEE  0E00               	movlw	high main@UID
   545  000AF0  2044               	addwfc	main@i+1,w,c
   546  000AF2  6EDA               	movwf	fsr2h,c
   547  000AF4  50DF               	movf	indf2,w,c
   548  000AF6  6E31               	movwf	??_main& (0+255),c
   549  000AF8  5031               	movf	??_main,w,c
   550  000AFA  6E01               	movwf	traduz@numero,c
   551  000AFC  6A02               	clrf	traduz@numero+1,c
   552  000AFE  0E3C               	movlw	low main@buffer
   553  000B00  6E03               	movwf	traduz@txt,c
   554  000B02  0E00               	movlw	high main@buffer
   555  000B04  6E04               	movwf	traduz@txt+1,c
   556  000B06  EC17  F007         	call	_traduz	;wreg free
   557                           
   558                           ;main.c: 97: putsXLCD(buffer);
   559  000B0A  0E3C               	movlw	low main@buffer
   560  000B0C  6E02               	movwf	putsXLCD@buffer,c
   561  000B0E  0E00               	movlw	high main@buffer
   562  000B10  6E03               	movwf	putsXLCD@buffer+1,c
   563  000B12  EC7F  F007         	call	_putsXLCD	;wreg free
   564                           
   565                           ;main.c: 98: var = var +4;
   566  000B16  0E04               	movlw	4
   567  000B18  243F               	addwf	main@var,w,c
   568  000B1A  6E3F               	movwf	main@var,c
   569  000B1C  0E00               	movlw	0
   570  000B1E  2040               	addwfc	main@var+1,w,c
   571  000B20  6E40               	movwf	main@var+1,c
   572  000B22  4A43               	infsnz	main@i,f,c
   573  000B24  2A44               	incf	main@i+1,f,c
   574  000B26  D7D8               	goto	l2201
   575  000B28                     __end_of_main:
   576                           	opt stack 0
   577                           tblptru	equ	0xFF8
   578                           indf2	equ	0xFDF
   579                           fsr2h	equ	0xFDA
   580                           fsr2l	equ	0xFD9
   581                           status	equ	0xFD8
   582                           
   583 ;; *************** function _traduz *****************
   584 ;; Defined at:
   585 ;;		line 9 in file "../main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  numero          2    0[COMRAM] int 
   588 ;;  txt             2    2[COMRAM] PTR unsigned char 
   589 ;;		 -> main@buffer(3), 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  b               1    8[COMRAM] unsigned char 
   592 ;;  a               1    7[COMRAM] unsigned char 
   593 ;;  e               1    0        unsigned char 
   594 ;;  d               1    0        unsigned char 
   595 ;;  c               1    0        unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   605 ;;      Params:         4       0       0       0       0       0       0       0       0
   606 ;;      Locals:         2       0       0       0       0       0       0       0       0
   607 ;;      Temps:          3       0       0       0       0       0       0       0       0
   608 ;;      Totals:         9       0       0       0       0       0       0       0       0
   609 ;;Total ram usage:        9 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text1
   619  000E2E                     __ptext1:
   620                           	opt stack 0
   621  000E2E                     _traduz:
   622                           	opt stack 30
   623                           
   624                           ;main.c: 10: char a,b,c,d,e;
   625                           ;main.c: 11: a = numero & 0b00001111;
   626                           
   627                           ;incstack = 0
   628  000E2E  5001               	movf	traduz@numero,w,c
   629  000E30  0B0F               	andlw	15
   630  000E32  6E08               	movwf	traduz@a,c
   631                           
   632                           ;main.c: 12: if (a > 9){
   633  000E34  0E09               	movlw	9
   634  000E36  6408               	cpfsgt	traduz@a,c
   635  000E38  D003               	goto	l174
   636                           
   637                           ;main.c: 13: a = a + 55;
   638  000E3A  5008               	movf	traduz@a,w,c
   639  000E3C  0F37               	addlw	55
   640  000E3E  D002               	goto	L1
   641  000E40                     l174:
   642                           
   643                           ;main.c: 15: else{
   644                           ;main.c: 16: a = a + 48;
   645  000E40  5008               	movf	traduz@a,w,c
   646  000E42  0F30               	addlw	48
   647  000E44                     L1:
   648  000E44  6E08               	movwf	traduz@a,c
   649                           
   650                           ;main.c: 17: }
   651                           ;main.c: 18: b = numero >> 4;
   652  000E46  C001  F005         	movff	traduz@numero,??_traduz
   653  000E4A  C002  F006         	movff	traduz@numero+1,??_traduz+1
   654  000E4E  0E04               	movlw	4
   655  000E50  6E07               	movwf	(??_traduz+2)& (0+255),c
   656  000E52                     u1335:
   657  000E52  3406               	rlcf	??_traduz+1,w,c
   658  000E54  3206               	rrcf	??_traduz+1,f,c
   659  000E56  3205               	rrcf	??_traduz,f,c
   660  000E58  2E07               	decfsz	(??_traduz+2)& (0+255),f,c
   661  000E5A  D7FB               	goto	u1335
   662  000E5C  5005               	movf	??_traduz,w,c
   663  000E5E  6E09               	movwf	traduz@b,c
   664                           
   665                           ;main.c: 19: if (b > 9){
   666  000E60  0E09               	movlw	9
   667  000E62  6409               	cpfsgt	traduz@b,c
   668  000E64  D003               	goto	l176
   669                           
   670                           ;main.c: 20: b = b + 55;
   671  000E66  5009               	movf	traduz@b,w,c
   672  000E68  0F37               	addlw	55
   673  000E6A  D002               	goto	L2
   674  000E6C                     l176:
   675                           
   676                           ;main.c: 22: else{
   677                           ;main.c: 23: b = b + 48;
   678  000E6C  5009               	movf	traduz@b,w,c
   679  000E6E  0F30               	addlw	48
   680  000E70                     L2:
   681  000E70  6E09               	movwf	traduz@b,c
   682                           
   683                           ;main.c: 24: }
   684                           ;main.c: 25: (txt)[0]=b;
   685  000E72  C003  FFD9         	movff	traduz@txt,fsr2l
   686  000E76  C004  FFDA         	movff	traduz@txt+1,fsr2h
   687  000E7A  C009  FFDF         	movff	traduz@b,indf2
   688                           
   689                           ;main.c: 26: (txt)[1]=a;
   690  000E7E  EE20 F001          	lfsr	2,1
   691  000E82  5003               	movf	traduz@txt,w,c
   692  000E84  26D9               	addwf	fsr2l,f,c
   693  000E86  5004               	movf	traduz@txt+1,w,c
   694  000E88  22DA               	addwfc	fsr2h,f,c
   695  000E8A  C008  FFDF         	movff	traduz@a,indf2
   696                           
   697                           ;main.c: 27: (txt)[2]='\0';
   698  000E8E  EE20 F002          	lfsr	2,2
   699  000E92  5003               	movf	traduz@txt,w,c
   700  000E94  26D9               	addwf	fsr2l,f,c
   701  000E96  5004               	movf	traduz@txt+1,w,c
   702  000E98  22DA               	addwfc	fsr2h,f,c
   703  000E9A  0E00               	movlw	0
   704  000E9C  6EDF               	movwf	indf2,c
   705  000E9E  0012               	return		;funcret
   706  000EA0                     __end_of_traduz:
   707                           	opt stack 0
   708                           tblptru	equ	0xFF8
   709                           indf2	equ	0xFDF
   710                           fsr2h	equ	0xFDA
   711                           fsr2l	equ	0xFD9
   712                           status	equ	0xFD8
   713                           
   714 ;; *************** function _putsXLCD *****************
   715 ;; Defined at:
   716 ;;		line 125 in file "../mylcd.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  buffer          2    1[COMRAM] PTR unsigned char 
   719 ;;		 -> main@buffer(3), STR_1(10), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         2       0       0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		_BusyXLCD
   740 ;;		_WriteDataXLCD
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text2
   747  000EFE                     __ptext2:
   748                           	opt stack 0
   749  000EFE                     _putsXLCD:
   750                           	opt stack 28
   751                           
   752                           ;mylcd.c: 127: while(*buffer)
   753                           
   754                           ;incstack = 0
   755  000EFE  D019               	goto	l290
   756  000F00                     
   757                           ;mylcd.c: 128: {
   758                           ;mylcd.c: 129: while(BusyXLCD());
   759  000F00  EC35  F008         	call	_BusyXLCD	;wreg free
   760  000F04  0900               	iorlw	0
   761  000F06  A4D8               	btfss	status,2,c
   762  000F08  D7FB               	goto	l291
   763                           
   764                           ;mylcd.c: 130: WriteDataXLCD(*buffer);
   765  000F0A  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   766  000F0E  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   767  000F12  6AF8               	clrf	tblptru,c
   768  000F14  0E07               	movlw	(high __ramtop+-1)
   769  000F16  64F7               	cpfsgt	tblptrh,c
   770  000F18  D003               	bra	u1377
   771  000F1A  0008               	tblrd		*
   772  000F1C  50F5               	movf	tablat,w,c
   773  000F1E  D005               	bra	u1370
   774  000F20                     u1377:
   775  000F20  CFF6 FFE9          	movff	tblptrl,fsr0l
   776  000F24  CFF7 FFEA          	movff	tblptrh,fsr0h
   777  000F28  50EF               	movf	indf0,w,c
   778  000F2A                     u1370:
   779  000F2A  ECF7  F007         	call	_WriteDataXLCD
   780                           
   781                           ;mylcd.c: 131: buffer++;
   782  000F2E  4A02               	infsnz	putsXLCD@buffer,f,c
   783  000F30  2A03               	incf	putsXLCD@buffer+1,f,c
   784  000F32                     l290:
   785  000F32  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   786  000F36  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   787  000F3A  6AF8               	clrf	tblptru,c
   788  000F3C  0E07               	movlw	(high __ramtop+-1)
   789  000F3E  64F7               	cpfsgt	tblptrh,c
   790  000F40  D003               	bra	u1387
   791  000F42  0008               	tblrd		*
   792  000F44  50F5               	movf	tablat,w,c
   793  000F46  D005               	bra	u1380
   794  000F48                     u1387:
   795  000F48  CFF6 FFE9          	movff	tblptrl,fsr0l
   796  000F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
   797  000F50  50EF               	movf	indf0,w,c
   798  000F52                     u1380:
   799  000F52  0900               	iorlw	0
   800  000F54  B4D8               	btfsc	status,2,c
   801  000F56  0012               	return	
   802  000F58  D7D3               	goto	l291
   803  000F5A                     __end_of_putsXLCD:
   804                           	opt stack 0
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           indf0	equ	0xFEF
   810                           fsr0h	equ	0xFEA
   811                           fsr0l	equ	0xFE9
   812                           indf2	equ	0xFDF
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function _WriteDataXLCD *****************
   818 ;; Defined at:
   819 ;;		line 357 in file "../mylcd.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  data            1    wreg     unsigned char 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  data            1    0[COMRAM] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   833 ;;      Params:         0       0       0       0       0       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0
   836 ;;      Totals:         1       0       0       0       0       0       0       0       0
   837 ;;Total ram usage:        1 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    1
   840 ;; This function calls:
   841 ;;		_DelayFor18TCY
   842 ;; This function is called by:
   843 ;;		_putsXLCD
   844 ;;		_putrsXLCD
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text3
   849  000FEE                     __ptext3:
   850                           	opt stack 0
   851  000FEE                     _WriteDataXLCD:
   852                           	opt stack 28
   853                           
   854                           ;incstack = 0
   855                           ;WriteDataXLCD@data stored from wreg
   856  000FEE  6E01               	movwf	WriteDataXLCD@data,c
   857                           
   858                           ;mylcd.c: 376: TRISD &= 0xf0;
   859  000FF0  0EF0               	movlw	240
   860  000FF2  1695               	andwf	3989,f,c	;volatile
   861                           
   862                           ;mylcd.c: 377: PORTD &= 0xf0;
   863  000FF4  0EF0               	movlw	240
   864  000FF6  1683               	andwf	3971,f,c	;volatile
   865                           
   866                           ;mylcd.c: 378: PORTD |= ((data>>4)&0x0f);
   867  000FF8  3801               	swapf	WriteDataXLCD@data,w,c
   868  000FFA  0B0F               	andlw	15
   869  000FFC  0B0F               	andlw	15
   870  000FFE  1283               	iorwf	3971,f,c	;volatile
   871                           
   872                           ;mylcd.c: 380: LATDbits.LATD6 = 1;
   873  001000  8C8C               	bsf	3980,6,c	;volatile
   874                           
   875                           ;mylcd.c: 381: LATDbits.LATD5 = 0;
   876  001002  9A8C               	bcf	3980,5,c	;volatile
   877                           
   878                           ;mylcd.c: 382: DelayFor18TCY();
   879  001004  ECFC  F008         	call	_DelayFor18TCY	;wreg free
   880                           
   881                           ;mylcd.c: 383: LATDbits.LATD4 = 1;
   882  001008  888C               	bsf	3980,4,c	;volatile
   883                           
   884                           ;mylcd.c: 384: DelayFor18TCY();
   885  00100A  ECFC  F008         	call	_DelayFor18TCY	;wreg free
   886                           
   887                           ;mylcd.c: 385: LATDbits.LATD4 = 0;
   888  00100E  988C               	bcf	3980,4,c	;volatile
   889                           
   890                           ;mylcd.c: 390: PORTD &= 0xf0;
   891  001010  0EF0               	movlw	240
   892  001012  1683               	andwf	3971,f,c	;volatile
   893                           
   894                           ;mylcd.c: 391: PORTD |= (data&0x0f);
   895  001014  5001               	movf	WriteDataXLCD@data,w,c
   896  001016  0B0F               	andlw	15
   897  001018  1283               	iorwf	3971,f,c	;volatile
   898                           
   899                           ;mylcd.c: 393: DelayFor18TCY();
   900  00101A  ECFC  F008         	call	_DelayFor18TCY	;wreg free
   901                           
   902                           ;mylcd.c: 394: LATDbits.LATD4 = 1;
   903  00101E  888C               	bsf	3980,4,c	;volatile
   904                           
   905                           ;mylcd.c: 395: DelayFor18TCY();
   906  001020  ECFC  F008         	call	_DelayFor18TCY	;wreg free
   907                           
   908                           ;mylcd.c: 396: LATDbits.LATD4 = 0;
   909  001024  988C               	bcf	3980,4,c	;volatile
   910                           
   911                           ;mylcd.c: 400: TRISD |= 0x0f;
   912  001026  0E0F               	movlw	15
   913  001028  1295               	iorwf	3989,f,c	;volatile
   914  00102A  0012               	return	
   915  00102C                     __end_of_WriteDataXLCD:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           indf0	equ	0xFEF
   922                           fsr0h	equ	0xFEA
   923                           fsr0l	equ	0xFE9
   924                           indf2	equ	0xFDF
   925                           fsr2h	equ	0xFDA
   926                           fsr2l	equ	0xFD9
   927                           status	equ	0xFD8
   928                           
   929 ;; *************** function _inic_XLCD *****************
   930 ;; Defined at:
   931 ;;		line 40 in file "../main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   945 ;;      Params:         0       0       0       0       0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    3
   952 ;; This function calls:
   953 ;;		_BusyXLCD
   954 ;;		_OpenXLCD
   955 ;;		_WriteCmdXLCD
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text4
   962  0010A4                     __ptext4:
   963                           	opt stack 0
   964  0010A4                     _inic_XLCD:
   965                           	opt stack 27
   966                           
   967                           ;main.c: 42: OpenXLCD(0b00101100&0b00111000);
   968                           
   969                           ;incstack = 0
   970  0010A4  0E28               	movlw	40
   971  0010A6  ECE8  F005         	call	_OpenXLCD
   972  0010AA  EC35  F008         	call	_BusyXLCD	;wreg free
   973  0010AE  0900               	iorlw	0
   974  0010B0  A4D8               	btfss	status,2,c
   975  0010B2  D7FB               	goto	l188
   976                           
   977                           ;main.c: 44: WriteCmdXLCD(0x06);
   978  0010B4  0E06               	movlw	6
   979  0010B6  EC16  F008         	call	_WriteCmdXLCD
   980  0010BA  EC35  F008         	call	_BusyXLCD	;wreg free
   981  0010BE  0900               	iorlw	0
   982  0010C0  A4D8               	btfss	status,2,c
   983  0010C2  D7FB               	goto	l191
   984                           
   985                           ;main.c: 46: WriteCmdXLCD(0x0C);
   986  0010C4  0E0C               	movlw	12
   987  0010C6  EC16  F008         	call	_WriteCmdXLCD
   988  0010CA  EC35  F008         	call	_BusyXLCD	;wreg free
   989  0010CE  0900               	iorlw	0
   990  0010D0  B4D8               	btfsc	status,2,c
   991  0010D2  0012               	return	
   992  0010D4  D7FA               	goto	l194
   993  0010D6                     __end_of_inic_XLCD:
   994                           	opt stack 0
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           indf0	equ	0xFEF
  1000                           fsr0h	equ	0xFEA
  1001                           fsr0l	equ	0xFE9
  1002                           indf2	equ	0xFDF
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _OpenXLCD *****************
  1008 ;; Defined at:
  1009 ;;		line 63 in file "../mylcd.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  lcdtype         1    wreg     unsigned char 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1023 ;;      Params:         0       0       0       0       0       0       0       0       0
  1024 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1026 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1027 ;;Total ram usage:        1 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    2
  1030 ;; This function calls:
  1031 ;;		_BusyXLCD
  1032 ;;		_Delay10KTCYx
  1033 ;;		_DelayPORXLCD
  1034 ;;		_SetDDRamAddr
  1035 ;;		_WriteCmdXLCD
  1036 ;; This function is called by:
  1037 ;;		_inic_XLCD
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text5
  1042  000BD0                     __ptext5:
  1043                           	opt stack 0
  1044  000BD0                     _OpenXLCD:
  1045                           	opt stack 27
  1046                           
  1047                           ;incstack = 0
  1048                           ;OpenXLCD@lcdtype stored from wreg
  1049  000BD0  6E05               	movwf	OpenXLCD@lcdtype,c
  1050                           
  1051                           ;mylcd.c: 75: PORTD &= 0xf0;
  1052  000BD2  0EF0               	movlw	240
  1053  000BD4  1683               	andwf	3971,f,c	;volatile
  1054                           
  1055                           ;mylcd.c: 76: TRISD &= 0xF0;
  1056  000BD6  0EF0               	movlw	240
  1057  000BD8  1695               	andwf	3989,f,c	;volatile
  1058                           
  1059                           ;mylcd.c: 79: TRISDbits.TRISD5 = 0;
  1060  000BDA  9A95               	bcf	3989,5,c	;volatile
  1061                           
  1062                           ;mylcd.c: 80: TRISDbits.TRISD6 = 0;
  1063  000BDC  9C95               	bcf	3989,6,c	;volatile
  1064                           
  1065                           ;mylcd.c: 81: TRISDbits.TRISD4 = 0;
  1066  000BDE  9895               	bcf	3989,4,c	;volatile
  1067                           
  1068                           ;mylcd.c: 82: LATDbits.LATD5 = 0;
  1069  000BE0  9A8C               	bcf	3980,5,c	;volatile
  1070                           
  1071                           ;mylcd.c: 83: LATDbits.LATD6 = 0;
  1072  000BE2  9C8C               	bcf	3980,6,c	;volatile
  1073                           
  1074                           ;mylcd.c: 84: LATDbits.LATD4 = 0;
  1075  000BE4  988C               	bcf	3980,4,c	;volatile
  1076                           
  1077                           ;mylcd.c: 87: DelayPORXLCD();
  1078  000BE6  ECEE  F008         	call	_DelayPORXLCD	;wreg free
  1079                           
  1080                           ;mylcd.c: 89: WriteCmdXLCD(0x30);
  1081  000BEA  0E30               	movlw	48
  1082  000BEC  EC16  F008         	call	_WriteCmdXLCD
  1083                           
  1084                           ;mylcd.c: 90: Delay10KTCYx(0x05);
  1085  000BF0  0E05               	movlw	5
  1086  000BF2  ECE3  F008         	call	_Delay10KTCYx
  1087                           
  1088                           ;mylcd.c: 92: WriteCmdXLCD(0x30);
  1089  000BF6  0E30               	movlw	48
  1090  000BF8  EC16  F008         	call	_WriteCmdXLCD
  1091                           
  1092                           ;mylcd.c: 93: Delay10KTCYx(0x01);
  1093  000BFC  0E01               	movlw	1
  1094  000BFE  ECE3  F008         	call	_Delay10KTCYx
  1095                           
  1096                           ;mylcd.c: 96: WriteCmdXLCD(0x32);
  1097  000C02  0E32               	movlw	50
  1098  000C04  EC16  F008         	call	_WriteCmdXLCD
  1099  000C08  EC35  F008         	call	_BusyXLCD	;wreg free
  1100  000C0C  0900               	iorlw	0
  1101  000C0E  A4D8               	btfss	status,2,c
  1102  000C10  D7FB               	goto	l267
  1103  000C12                     u370:
  1104                           
  1105                           ;mylcd.c: 102: while(BusyXLCD());
  1106  000C12  EC35  F008         	call	_BusyXLCD	;wreg free
  1107  000C16  0900               	iorlw	0
  1108  000C18  A4D8               	btfss	status,2,c
  1109  000C1A  D7FB               	goto	u370
  1110                           
  1111                           ;mylcd.c: 103: WriteCmdXLCD(lcdtype);
  1112  000C1C  5005               	movf	OpenXLCD@lcdtype,w,c
  1113  000C1E  EC16  F008         	call	_WriteCmdXLCD
  1114  000C22  EC35  F008         	call	_BusyXLCD	;wreg free
  1115  000C26  0900               	iorlw	0
  1116  000C28  A4D8               	btfss	status,2,c
  1117  000C2A  D7FB               	goto	l273
  1118                           
  1119                           ;mylcd.c: 107: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1120  000C2C  0E08               	movlw	8
  1121  000C2E  EC16  F008         	call	_WriteCmdXLCD
  1122  000C32  EC35  F008         	call	_BusyXLCD	;wreg free
  1123  000C36  0900               	iorlw	0
  1124  000C38  A4D8               	btfss	status,2,c
  1125  000C3A  D7FB               	goto	l276
  1126                           
  1127                           ;mylcd.c: 109: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1128  000C3C  0E0F               	movlw	15
  1129  000C3E  EC16  F008         	call	_WriteCmdXLCD
  1130  000C42  EC35  F008         	call	_BusyXLCD	;wreg free
  1131  000C46  0900               	iorlw	0
  1132  000C48  A4D8               	btfss	status,2,c
  1133  000C4A  D7FB               	goto	l279
  1134                           
  1135                           ;mylcd.c: 113: WriteCmdXLCD(0x01);
  1136  000C4C  0E01               	movlw	1
  1137  000C4E  EC16  F008         	call	_WriteCmdXLCD
  1138  000C52  EC35  F008         	call	_BusyXLCD	;wreg free
  1139  000C56  0900               	iorlw	0
  1140  000C58  A4D8               	btfss	status,2,c
  1141  000C5A  D7FB               	goto	l282
  1142                           
  1143                           ;mylcd.c: 117: WriteCmdXLCD(0b00000100);
  1144  000C5C  0E04               	movlw	4
  1145  000C5E  EC16  F008         	call	_WriteCmdXLCD
  1146  000C62  EC35  F008         	call	_BusyXLCD	;wreg free
  1147  000C66  0900               	iorlw	0
  1148  000C68  A4D8               	btfss	status,2,c
  1149  000C6A  D7FB               	goto	l285
  1150                           
  1151                           ;mylcd.c: 121: SetDDRamAddr(0x80);
  1152  000C6C  0E80               	movlw	128
  1153  000C6E  ECAD  F007         	call	_SetDDRamAddr
  1154  000C72  0012               	return	
  1155  000C74                     __end_of_OpenXLCD:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           indf0	equ	0xFEF
  1162                           fsr0h	equ	0xFEA
  1163                           fsr0l	equ	0xFE9
  1164                           indf2	equ	0xFDF
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function _WriteCmdXLCD *****************
  1170 ;; Defined at:
  1171 ;;		line 309 in file "../mylcd.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  cmd             1    wreg     unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  cmd             1    0[COMRAM] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        1 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    1
  1192 ;; This function calls:
  1193 ;;		_DelayFor18TCY
  1194 ;; This function is called by:
  1195 ;;		_inic_XLCD
  1196 ;;		_OpenXLCD
  1197 ;;		_limpa
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text6
  1202  00102C                     __ptext6:
  1203                           	opt stack 0
  1204  00102C                     _WriteCmdXLCD:
  1205                           	opt stack 28
  1206                           
  1207                           ;incstack = 0
  1208                           ;WriteCmdXLCD@cmd stored from wreg
  1209  00102C  6E01               	movwf	WriteCmdXLCD@cmd,c
  1210                           
  1211                           ;mylcd.c: 328: TRISD &= 0xf0;
  1212  00102E  0EF0               	movlw	240
  1213  001030  1695               	andwf	3989,f,c	;volatile
  1214                           
  1215                           ;mylcd.c: 329: PORTD &= 0xf0;
  1216  001032  0EF0               	movlw	240
  1217  001034  1683               	andwf	3971,f,c	;volatile
  1218                           
  1219                           ;mylcd.c: 330: PORTD |= (cmd>>4)&0x0f;
  1220  001036  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1221  001038  0B0F               	andlw	15
  1222  00103A  0B0F               	andlw	15
  1223  00103C  1283               	iorwf	3971,f,c	;volatile
  1224                           
  1225                           ;mylcd.c: 332: LATDbits.LATD5 = 0;
  1226  00103E  9A8C               	bcf	3980,5,c	;volatile
  1227                           
  1228                           ;mylcd.c: 333: LATDbits.LATD6 = 0;
  1229  001040  9C8C               	bcf	3980,6,c	;volatile
  1230                           
  1231                           ;mylcd.c: 334: DelayFor18TCY();
  1232  001042  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1233                           
  1234                           ;mylcd.c: 335: LATDbits.LATD4 = 1;
  1235  001046  888C               	bsf	3980,4,c	;volatile
  1236                           
  1237                           ;mylcd.c: 336: DelayFor18TCY();
  1238  001048  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1239                           
  1240                           ;mylcd.c: 337: LATDbits.LATD4 = 0;
  1241  00104C  988C               	bcf	3980,4,c	;volatile
  1242                           
  1243                           ;mylcd.c: 342: PORTD &= 0xf0;
  1244  00104E  0EF0               	movlw	240
  1245  001050  1683               	andwf	3971,f,c	;volatile
  1246                           
  1247                           ;mylcd.c: 343: PORTD |= cmd&0x0f;
  1248  001052  5001               	movf	WriteCmdXLCD@cmd,w,c
  1249  001054  0B0F               	andlw	15
  1250  001056  1283               	iorwf	3971,f,c	;volatile
  1251                           
  1252                           ;mylcd.c: 345: DelayFor18TCY();
  1253  001058  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1254                           
  1255                           ;mylcd.c: 346: LATDbits.LATD4 = 1;
  1256  00105C  888C               	bsf	3980,4,c	;volatile
  1257                           
  1258                           ;mylcd.c: 347: DelayFor18TCY();
  1259  00105E  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1260                           
  1261                           ;mylcd.c: 348: LATDbits.LATD4 = 0;
  1262  001062  988C               	bcf	3980,4,c	;volatile
  1263                           
  1264                           ;mylcd.c: 352: TRISD |= 0x0f;
  1265  001064  0E0F               	movlw	15
  1266  001066  1295               	iorwf	3989,f,c	;volatile
  1267  001068  0012               	return	
  1268  00106A                     __end_of_WriteCmdXLCD:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           indf0	equ	0xFEF
  1275                           fsr0h	equ	0xFEA
  1276                           fsr0l	equ	0xFE9
  1277                           indf2	equ	0xFDF
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _SetDDRamAddr *****************
  1283 ;; Defined at:
  1284 ;;		line 261 in file "../mylcd.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  DDaddr          1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1300 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1301 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		_DelayFor18TCY
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;;		_OpenXLCD
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text7
  1314  000F5A                     __ptext7:
  1315                           	opt stack 0
  1316  000F5A                     _SetDDRamAddr:
  1317                           	opt stack 27
  1318                           
  1319                           ;incstack = 0
  1320                           ;SetDDRamAddr@DDaddr stored from wreg
  1321  000F5A  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1322                           
  1323                           ;mylcd.c: 280: TRISD &= 0xf0;
  1324  000F5C  0EF0               	movlw	240
  1325  000F5E  1695               	andwf	3989,f,c	;volatile
  1326                           
  1327                           ;mylcd.c: 281: PORTD &= 0xf0;
  1328  000F60  0EF0               	movlw	240
  1329  000F62  1683               	andwf	3971,f,c	;volatile
  1330                           
  1331                           ;mylcd.c: 282: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1332  000F64  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1333  000F66  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1334  000F68  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1335  000F6A  8E01               	bsf	??_SetDDRamAddr,7,c
  1336  000F6C  0E04               	movlw	4
  1337  000F6E  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1338  000F70                     u305:
  1339  000F70  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1340  000F72  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1341  000F74  3201               	rrcf	??_SetDDRamAddr,f,c
  1342  000F76  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1343  000F78  D7FB               	goto	u305
  1344  000F7A  5001               	movf	??_SetDDRamAddr,w,c
  1345  000F7C  0B0F               	andlw	15
  1346  000F7E  1283               	iorwf	3971,f,c	;volatile
  1347                           
  1348                           ;mylcd.c: 284: LATDbits.LATD5 = 0;
  1349  000F80  9A8C               	bcf	3980,5,c	;volatile
  1350                           
  1351                           ;mylcd.c: 285: LATDbits.LATD6 = 0;
  1352  000F82  9C8C               	bcf	3980,6,c	;volatile
  1353                           
  1354                           ;mylcd.c: 286: DelayFor18TCY();
  1355  000F84  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1356                           
  1357                           ;mylcd.c: 287: LATDbits.LATD4 = 1;
  1358  000F88  888C               	bsf	3980,4,c	;volatile
  1359                           
  1360                           ;mylcd.c: 288: DelayFor18TCY();
  1361  000F8A  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1362                           
  1363                           ;mylcd.c: 289: LATDbits.LATD4 = 0;
  1364  000F8E  988C               	bcf	3980,4,c	;volatile
  1365                           
  1366                           ;mylcd.c: 294: PORTD &= 0xf0;
  1367  000F90  0EF0               	movlw	240
  1368  000F92  1683               	andwf	3971,f,c	;volatile
  1369                           
  1370                           ;mylcd.c: 295: PORTD |= (DDaddr&0x0f);
  1371  000F94  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1372  000F96  0B0F               	andlw	15
  1373  000F98  1283               	iorwf	3971,f,c	;volatile
  1374                           
  1375                           ;mylcd.c: 297: DelayFor18TCY();
  1376  000F9A  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1377                           
  1378                           ;mylcd.c: 298: LATDbits.LATD4 = 1;
  1379  000F9E  888C               	bsf	3980,4,c	;volatile
  1380                           
  1381                           ;mylcd.c: 299: DelayFor18TCY();
  1382  000FA0  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1383                           
  1384                           ;mylcd.c: 300: LATDbits.LATD4 = 0;
  1385  000FA4  988C               	bcf	3980,4,c	;volatile
  1386                           
  1387                           ;mylcd.c: 304: TRISD |= 0x0f;
  1388  000FA6  0E0F               	movlw	15
  1389  000FA8  1295               	iorwf	3989,f,c	;volatile
  1390  000FAA  0012               	return	
  1391  000FAC                     __end_of_SetDDRamAddr:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           indf0	equ	0xFEF
  1398                           fsr0h	equ	0xFEA
  1399                           fsr0l	equ	0xFE9
  1400                           indf2	equ	0xFDF
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _DelayPORXLCD *****************
  1406 ;; Defined at:
  1407 ;;		line 62 in file "../main.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1424 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1425 ;;Total ram usage:        1 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_OpenXLCD
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text8
  1435  0011DC                     __ptext8:
  1436                           	opt stack 0
  1437  0011DC                     _DelayPORXLCD:
  1438                           	opt stack 28
  1439                           
  1440                           ;incstack = 0
  1441  0011DC  0E9C               	movlw	156
  1442  0011DE  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1443  0011E0  0ED7               	movlw	215
  1444  0011E2                     u1707:
  1445  0011E2  2EE8               	decfsz	wreg,f,c
  1446  0011E4  D7FE               	bra	u1707
  1447  0011E6  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1448  0011E8  D7FC               	bra	u1707
  1449  0011EA  F000               	nop	
  1450  0011EC  0012               	return		;funcret
  1451  0011EE                     __end_of_DelayPORXLCD:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           indf0	equ	0xFEF
  1458                           fsr0h	equ	0xFEA
  1459                           fsr0l	equ	0xFE9
  1460                           wreg	equ	0xFE8
  1461                           indf2	equ	0xFDF
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466 ;; *************** function _Delay10KTCYx *****************
  1467 ;; Defined at:
  1468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10ktcyx.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  unit            1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  unit            1    1[COMRAM] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0
  1483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1484 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1485 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1486 ;;Total ram usage:        2 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_OpenXLCD
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text9
  1496  0011C6                     __ptext9:
  1497                           	opt stack 0
  1498  0011C6                     _Delay10KTCYx:
  1499                           	opt stack 28
  1500                           
  1501                           ;incstack = 0
  1502                           ;Delay10KTCYx@unit stored from wreg
  1503  0011C6  6E02               	movwf	Delay10KTCYx@unit,c
  1504  0011C8                     l542:
  1505  0011C8  0E0D               	movlw	13
  1506  0011CA  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1507  0011CC  0EFC               	movlw	252
  1508  0011CE                     u1717:
  1509  0011CE  2EE8               	decfsz	wreg,f,c
  1510  0011D0  D7FE               	bra	u1717
  1511  0011D2  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1512  0011D4  D7FC               	bra	u1717
  1513  0011D6  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1514  0011D8  D7F7               	goto	l542
  1515  0011DA  0012               	return	
  1516  0011DC                     __end_of_Delay10KTCYx:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           indf0	equ	0xFEF
  1523                           fsr0h	equ	0xFEA
  1524                           fsr0l	equ	0xFE9
  1525                           wreg	equ	0xFE8
  1526                           indf2	equ	0xFDF
  1527                           fsr2h	equ	0xFDA
  1528                           fsr2l	equ	0xFD9
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _BusyXLCD *****************
  1532 ;; Defined at:
  1533 ;;		line 4 in file "../mylcd.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		_DelayFor18TCY
  1556 ;; This function is called by:
  1557 ;;		_inic_XLCD
  1558 ;;		_main
  1559 ;;		_OpenXLCD
  1560 ;;		_putsXLCD
  1561 ;;		_limpa
  1562 ;;		_putrsXLCD
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text10
  1567  00106A                     __ptext10:
  1568                           	opt stack 0
  1569  00106A                     _BusyXLCD:
  1570                           	opt stack 28
  1571                           
  1572                           ;mylcd.c: 6: LATDbits.LATD5 = 1;
  1573                           
  1574                           ;incstack = 0
  1575  00106A  8A8C               	bsf	3980,5,c	;volatile
  1576                           
  1577                           ;mylcd.c: 7: LATDbits.LATD6 = 0;
  1578  00106C  9C8C               	bcf	3980,6,c	;volatile
  1579                           
  1580                           ;mylcd.c: 8: DelayFor18TCY();
  1581  00106E  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1582                           
  1583                           ;mylcd.c: 9: LATDbits.LATD4 = 1;
  1584  001072  888C               	bsf	3980,4,c	;volatile
  1585                           
  1586                           ;mylcd.c: 10: DelayFor18TCY();
  1587  001074  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1588                           
  1589                           ;mylcd.c: 28: if(PORTD&0x08)
  1590  001078  A683               	btfss	3971,3,c	;volatile
  1591  00107A  D00A               	goto	l252
  1592                           
  1593                           ;mylcd.c: 30: {
  1594                           ;mylcd.c: 31: LATDbits.LATD4 = 0;
  1595  00107C  988C               	bcf	3980,4,c	;volatile
  1596                           
  1597                           ;mylcd.c: 32: DelayFor18TCY();
  1598  00107E  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1599                           
  1600                           ;mylcd.c: 33: LATDbits.LATD4 = 1;
  1601  001082  888C               	bsf	3980,4,c	;volatile
  1602                           
  1603                           ;mylcd.c: 34: DelayFor18TCY();
  1604  001084  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1605                           
  1606                           ;mylcd.c: 35: LATDbits.LATD4 = 0;
  1607  001088  988C               	bcf	3980,4,c	;volatile
  1608                           
  1609                           ;mylcd.c: 36: LATDbits.LATD5 = 0;
  1610  00108A  9A8C               	bcf	3980,5,c	;volatile
  1611                           
  1612                           ;mylcd.c: 37: return 1;
  1613  00108C  0E01               	movlw	1
  1614                           
  1615                           ;mylcd.c: 38: }
  1616  00108E  0012               	return	
  1617  001090                     l252:
  1618                           
  1619                           ;mylcd.c: 39: else
  1620                           ;mylcd.c: 40: {
  1621                           ;mylcd.c: 41: LATDbits.LATD4 = 0;
  1622  001090  988C               	bcf	3980,4,c	;volatile
  1623                           
  1624                           ;mylcd.c: 42: DelayFor18TCY();
  1625  001092  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1626                           
  1627                           ;mylcd.c: 43: LATDbits.LATD4 = 1;
  1628  001096  888C               	bsf	3980,4,c	;volatile
  1629                           
  1630                           ;mylcd.c: 44: DelayFor18TCY();
  1631  001098  ECFC  F008         	call	_DelayFor18TCY	;wreg free
  1632                           
  1633                           ;mylcd.c: 45: LATDbits.LATD4 = 0;
  1634  00109C  988C               	bcf	3980,4,c	;volatile
  1635                           
  1636                           ;mylcd.c: 46: LATDbits.LATD5 = 0;
  1637  00109E  9A8C               	bcf	3980,5,c	;volatile
  1638                           
  1639                           ;mylcd.c: 47: return 0;
  1640  0010A0  0E00               	movlw	0
  1641  0010A2  0012               	return	
  1642  0010A4                     __end_of_BusyXLCD:
  1643                           	opt stack 0
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           indf0	equ	0xFEF
  1649                           fsr0h	equ	0xFEA
  1650                           fsr0l	equ	0xFE9
  1651                           wreg	equ	0xFE8
  1652                           indf2	equ	0xFDF
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _DelayFor18TCY *****************
  1658 ;; Defined at:
  1659 ;;		line 57 in file "../main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_BusyXLCD
  1683 ;;		_SetDDRamAddr
  1684 ;;		_WriteCmdXLCD
  1685 ;;		_WriteDataXLCD
  1686 ;;		_ReadAddrXLCD
  1687 ;;		_ReadDataXLCD
  1688 ;;		_SetCGRamAddr
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text11
  1693  0011F8                     __ptext11:
  1694                           	opt stack 0
  1695  0011F8                     _DelayFor18TCY:
  1696                           	opt stack 28
  1697                           
  1698                           ;incstack = 0
  1699  0011F8  0E30               	movlw	48
  1700  0011FA                     u1727:
  1701  0011FA  2EE8               	decfsz	wreg,f,c
  1702  0011FC  D7FE               	bra	u1727
  1703  0011FE  0012               	return		;funcret
  1704  001200                     __end_of_DelayFor18TCY:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           indf0	equ	0xFEF
  1711                           fsr0h	equ	0xFEA
  1712                           fsr0l	equ	0xFE9
  1713                           wreg	equ	0xFE8
  1714                           indf2	equ	0xFDF
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function _Mydelay *****************
  1720 ;; Defined at:
  1721 ;;		line 30 in file "../main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  tempo           2    0[COMRAM] int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  i               2    3[COMRAM] int 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         2       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        5 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;;		_limpa
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text12
  1750  0010D6                     __ptext12:
  1751                           	opt stack 0
  1752  0010D6                     _Mydelay:
  1753                           	opt stack 30
  1754                           
  1755                           ;main.c: 32: int i;
  1756                           ;main.c: 33: for (i=0;i<tempo;i++)
  1757                           
  1758                           ;incstack = 0
  1759  0010D6  0E00               	movlw	0
  1760  0010D8  6E05               	movwf	Mydelay@i+1,c
  1761  0010DA  0E00               	movlw	0
  1762  0010DC  6E04               	movwf	Mydelay@i,c
  1763  0010DE  D009               	goto	l181
  1764  0010E0                     
  1765                           ;main.c: 34: {
  1766                           ;main.c: 35: _delay((unsigned long)((1)*(8000000/4000.0)));
  1767  0010E0  0E03               	movlw	3
  1768  0010E2  6E03               	movwf	??_Mydelay& (0+255),c
  1769  0010E4  0E98               	movlw	152
  1770  0010E6                     u1737:
  1771  0010E6  2EE8               	decfsz	wreg,f,c
  1772  0010E8  D7FE               	bra	u1737
  1773  0010EA  2E03               	decfsz	??_Mydelay& (0+255),f,c
  1774  0010EC  D7FC               	bra	u1737
  1775  0010EE  4A04               	infsnz	Mydelay@i,f,c
  1776  0010F0  2A05               	incf	Mydelay@i+1,f,c
  1777  0010F2                     l181:
  1778  0010F2  5001               	movf	Mydelay@tempo,w,c
  1779  0010F4  5C04               	subwf	Mydelay@i,w,c
  1780  0010F6  5005               	movf	Mydelay@i+1,w,c
  1781  0010F8  0A80               	xorlw	128
  1782  0010FA  6E03               	movwf	??_Mydelay& (0+255),c
  1783  0010FC  5002               	movf	Mydelay@tempo+1,w,c
  1784  0010FE  0A80               	xorlw	128
  1785  001100  5803               	subwfb	??_Mydelay& (0+255),w,c
  1786  001102  B0D8               	btfsc	status,0,c
  1787  001104  0012               	return	
  1788  001106  D7EC               	goto	l182
  1789  001108                     __end_of_Mydelay:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           tblptrh	equ	0xFF7
  1793                           tblptrl	equ	0xFF6
  1794                           tablat	equ	0xFF5
  1795                           indf0	equ	0xFEF
  1796                           fsr0h	equ	0xFEA
  1797                           fsr0l	equ	0xFE9
  1798                           wreg	equ	0xFE8
  1799                           indf2	equ	0xFDF
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _MFRC522_isCard *****************
  1805 ;; Defined at:
  1806 ;;		line 971 in file "../RFIDlib.h"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  TagType         2   43[COMRAM] PTR unsigned char 
  1809 ;;		 -> main@TagType(2), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      unsigned char 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         2       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    4
  1828 ;; This function calls:
  1829 ;;		_MFRC522_Request
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text13
  1836  0011AA                     __ptext13:
  1837                           	opt stack 0
  1838  0011AA                     _MFRC522_isCard:
  1839                           	opt stack 26
  1840                           
  1841                           ;RFIDlib.h: 974: if (MFRC522_Request(0x26, TagType) == 0)
  1842                           
  1843                           ;incstack = 0
  1844  0011AA  C02C  F026         	movff	MFRC522_isCard@TagType,MFRC522_Request@TagType
  1845  0011AE  C02D  F027         	movff	MFRC522_isCard@TagType+1,MFRC522_Request@TagType+1
  1846  0011B2  0E26               	movlw	38
  1847  0011B4  EC50  F007         	call	_MFRC522_Request
  1848  0011B8  0900               	iorlw	0
  1849  0011BA  A4D8               	btfss	status,2,c
  1850  0011BC  D002               	goto	l164
  1851                           
  1852                           ;RFIDlib.h: 976: return 1;
  1853  0011BE  0E01               	movlw	1
  1854  0011C0  0012               	return	
  1855  0011C2                     l164:
  1856                           
  1857                           ;RFIDlib.h: 978: else
  1858                           ;RFIDlib.h: 980: return 0;
  1859  0011C2  0E00               	movlw	0
  1860  0011C4  0012               	return	
  1861  0011C6                     __end_of_MFRC522_isCard:
  1862                           	opt stack 0
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           indf0	equ	0xFEF
  1868                           fsr0h	equ	0xFEA
  1869                           fsr0l	equ	0xFE9
  1870                           wreg	equ	0xFE8
  1871                           indf2	equ	0xFDF
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _MFRC522_Request *****************
  1877 ;; Defined at:
  1878 ;;		line 635 in file "../RFIDlib.h"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  reqMode         1    wreg     unsigned char 
  1881 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  1882 ;;		 -> main@TagType(2), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  reqMode         1   39[COMRAM] unsigned char 
  1885 ;;  backBits        2   41[COMRAM] unsigned int 
  1886 ;;  _status         1   40[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1896 ;;      Params:         2       0       0       0       0       0       0       0       0
  1897 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1899 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1900 ;;Total ram usage:        6 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    3
  1903 ;; This function calls:
  1904 ;;		_MFRC522_ToCard
  1905 ;;		_MFRC522_Wr
  1906 ;; This function is called by:
  1907 ;;		_MFRC522_isCard
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text14
  1912  000EA0                     __ptext14:
  1913                           	opt stack 0
  1914  000EA0                     _MFRC522_Request:
  1915                           	opt stack 26
  1916                           
  1917                           ;incstack = 0
  1918                           ;MFRC522_Request@reqMode stored from wreg
  1919  000EA0  6E28               	movwf	MFRC522_Request@reqMode,c
  1920                           
  1921                           ;RFIDlib.h: 638: char _status;
  1922                           ;RFIDlib.h: 640: unsigned backBits;
  1923                           ;RFIDlib.h: 642: MFRC522_Wr(0x0D, 0x07);
  1924  000EA2  0E00               	movlw	0
  1925  000EA4  6E02               	movwf	MFRC522_Wr@Address+1,c
  1926  000EA6  0E0D               	movlw	13
  1927  000EA8  6E01               	movwf	MFRC522_Wr@Address,c
  1928  000EAA  0E00               	movlw	0
  1929  000EAC  6E04               	movwf	MFRC522_Wr@value+1,c
  1930  000EAE  0E07               	movlw	7
  1931  000EB0  6E03               	movwf	MFRC522_Wr@value,c
  1932  000EB2  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  1933                           
  1934                           ;RFIDlib.h: 644: TagType[0] = reqMode;
  1935  000EB6  C026  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  1936  000EBA  C027  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  1937  000EBE  C028  FFDF         	movff	MFRC522_Request@reqMode,indf2
  1938                           
  1939                           ;RFIDlib.h: 646: _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  1940  000EC2  C026  F013         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  1941  000EC6  C027  F014         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  1942  000ECA  0E01               	movlw	1
  1943  000ECC  6E15               	movwf	MFRC522_ToCard@sendLen,c
  1944  000ECE  C026  F016         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  1945  000ED2  C027  F017         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  1946  000ED6  0E2A               	movlw	low MFRC522_Request@backBits
  1947  000ED8  6E18               	movwf	MFRC522_ToCard@backLen,c
  1948  000EDA  0E00               	movlw	high MFRC522_Request@backBits
  1949  000EDC  6E19               	movwf	MFRC522_ToCard@backLen+1,c
  1950  000EDE  0E0C               	movlw	12
  1951  000EE0  EC06  F004         	call	_MFRC522_ToCard
  1952  000EE4  6E29               	movwf	MFRC522_Request@_status,c
  1953                           
  1954                           ;RFIDlib.h: 648: if ((_status != 0) || (backBits != 0x10))
  1955  000EE6  5029               	movf	MFRC522_Request@_status,w,c
  1956  000EE8  A4D8               	btfss	status,2,c
  1957  000EEA  D005               	goto	u1220
  1958  000EEC  0E10               	movlw	16
  1959  000EEE  182A               	xorwf	MFRC522_Request@backBits,w,c
  1960  000EF0  102B               	iorwf	MFRC522_Request@backBits+1,w,c
  1961  000EF2  B4D8               	btfsc	status,2,c
  1962  000EF4  D002               	goto	l103
  1963  000EF6                     u1220:
  1964                           
  1965                           ;RFIDlib.h: 649: {
  1966                           ;RFIDlib.h: 651: _status = 2;
  1967  000EF6  0E02               	movlw	2
  1968  000EF8  6E29               	movwf	MFRC522_Request@_status,c
  1969  000EFA                     l103:
  1970                           
  1971                           ;RFIDlib.h: 653: }
  1972                           ;RFIDlib.h: 655: return _status;
  1973  000EFA  5029               	movf	MFRC522_Request@_status,w,c
  1974  000EFC  0012               	return	
  1975  000EFE                     __end_of_MFRC522_Request:
  1976                           	opt stack 0
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           indf0	equ	0xFEF
  1982                           fsr0h	equ	0xFEA
  1983                           fsr0l	equ	0xFE9
  1984                           wreg	equ	0xFE8
  1985                           indf2	equ	0xFDF
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _MFRC522_ReadCardSerial *****************
  1991 ;; Defined at:
  1992 ;;		line 984 in file "../RFIDlib.h"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  str             2   45[COMRAM] PTR unsigned char 
  1995 ;;		 -> main@UID(10), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  _status         1   47[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         2       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        3 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    4
  2014 ;; This function calls:
  2015 ;;		_MFRC522_AntiColl
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text15
  2022  00113A                     __ptext15:
  2023                           	opt stack 0
  2024  00113A                     _MFRC522_ReadCardSerial:
  2025                           	opt stack 26
  2026                           
  2027                           ;RFIDlib.h: 987: char _status;
  2028                           ;RFIDlib.h: 989: _status = MFRC522_AntiColl(str);
  2029                           
  2030                           ;incstack = 0
  2031  00113A  C02E  F026         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  2032  00113E  C02F  F027         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  2033  001142  EC94  F005         	call	_MFRC522_AntiColl	;wreg free
  2034  001146  6E30               	movwf	MFRC522_ReadCardSerial@_status,c
  2035                           
  2036                           ;RFIDlib.h: 991: str[5] = 0;
  2037  001148  EE20 F005          	lfsr	2,5
  2038  00114C  502E               	movf	MFRC522_ReadCardSerial@str,w,c
  2039  00114E  26D9               	addwf	fsr2l,f,c
  2040  001150  502F               	movf	MFRC522_ReadCardSerial@str+1,w,c
  2041  001152  22DA               	addwfc	fsr2h,f,c
  2042  001154  0E00               	movlw	0
  2043  001156  6EDF               	movwf	indf2,c
  2044                           
  2045                           ;RFIDlib.h: 993: if (_status == 0)
  2046  001158  5030               	movf	MFRC522_ReadCardSerial@_status,w,c
  2047  00115A  A4D8               	btfss	status,2,c
  2048  00115C  D002               	goto	l169
  2049                           
  2050                           ;RFIDlib.h: 995: return 1;
  2051  00115E  0E01               	movlw	1
  2052  001160  0012               	return	
  2053  001162                     l169:
  2054                           
  2055                           ;RFIDlib.h: 997: else
  2056                           ;RFIDlib.h: 999: return 0;
  2057  001162  0E00               	movlw	0
  2058  001164  0012               	return	
  2059  001166                     __end_of_MFRC522_ReadCardSerial:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           indf0	equ	0xFEF
  2066                           fsr0h	equ	0xFEA
  2067                           fsr0l	equ	0xFE9
  2068                           wreg	equ	0xFE8
  2069                           indf2	equ	0xFDF
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _MFRC522_AntiColl *****************
  2075 ;; Defined at:
  2076 ;;		line 925 in file "../RFIDlib.h"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  serNum          2   37[COMRAM] PTR unsigned char 
  2079 ;;		 -> main@UID(10), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  unLen           2   41[COMRAM] unsigned int 
  2082 ;;  i               1   44[COMRAM] unsigned char 
  2083 ;;  _status         1   43[COMRAM] unsigned char 
  2084 ;;  serNumCheck     1   40[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      unsigned char 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         2       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:        8 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    3
  2101 ;; This function calls:
  2102 ;;		_MFRC522_Clear_Bit
  2103 ;;		_MFRC522_ToCard
  2104 ;;		_MFRC522_Wr
  2105 ;; This function is called by:
  2106 ;;		_MFRC522_ReadCardSerial
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text16
  2111  000B28                     __ptext16:
  2112                           	opt stack 0
  2113  000B28                     _MFRC522_AntiColl:
  2114                           	opt stack 26
  2115                           
  2116                           ;RFIDlib.h: 928: char _status;
  2117                           ;RFIDlib.h: 930: char i;
  2118                           ;RFIDlib.h: 932: char serNumCheck = 0;
  2119                           
  2120                           ;incstack = 0
  2121  000B28  0E00               	movlw	0
  2122  000B2A  6E29               	movwf	MFRC522_AntiColl@serNumCheck,c
  2123                           
  2124                           ;RFIDlib.h: 934: unsigned unLen;
  2125                           ;RFIDlib.h: 936: MFRC522_Wr(0x0D, 0x00);
  2126  000B2C  0E00               	movlw	0
  2127  000B2E  6E02               	movwf	MFRC522_Wr@Address+1,c
  2128  000B30  0E0D               	movlw	13
  2129  000B32  6E01               	movwf	MFRC522_Wr@Address,c
  2130  000B34  0E00               	movlw	0
  2131  000B36  6E04               	movwf	MFRC522_Wr@value+1,c
  2132  000B38  0E00               	movlw	0
  2133  000B3A  6E03               	movwf	MFRC522_Wr@value,c
  2134  000B3C  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2135                           
  2136                           ;RFIDlib.h: 938: serNum[0] = 0x93;
  2137  000B40  C026  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  2138  000B44  C027  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  2139  000B48  0E93               	movlw	147
  2140  000B4A  6EDF               	movwf	indf2,c
  2141                           
  2142                           ;RFIDlib.h: 940: serNum[1] = 0x20;
  2143  000B4C  EE20 F001          	lfsr	2,1
  2144  000B50  5026               	movf	MFRC522_AntiColl@serNum,w,c
  2145  000B52  26D9               	addwf	fsr2l,f,c
  2146  000B54  5027               	movf	MFRC522_AntiColl@serNum+1,w,c
  2147  000B56  22DA               	addwfc	fsr2h,f,c
  2148  000B58  0E20               	movlw	32
  2149  000B5A  6EDF               	movwf	indf2,c
  2150                           
  2151                           ;RFIDlib.h: 942: MFRC522_Clear_Bit(0x08, 0x08);
  2152  000B5C  0E08               	movlw	8
  2153  000B5E  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  2154  000B60  0E08               	movlw	8
  2155  000B62  ECD6  F007         	call	_MFRC522_Clear_Bit
  2156                           
  2157                           ;RFIDlib.h: 944: _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  2158  000B66  C026  F013         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  2159  000B6A  C027  F014         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  2160  000B6E  0E02               	movlw	2
  2161  000B70  6E15               	movwf	MFRC522_ToCard@sendLen,c
  2162  000B72  C026  F016         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  2163  000B76  C027  F017         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  2164  000B7A  0E2A               	movlw	low MFRC522_AntiColl@unLen
  2165  000B7C  6E18               	movwf	MFRC522_ToCard@backLen,c
  2166  000B7E  0E00               	movlw	high MFRC522_AntiColl@unLen
  2167  000B80  6E19               	movwf	MFRC522_ToCard@backLen+1,c
  2168  000B82  0E0C               	movlw	12
  2169  000B84  EC06  F004         	call	_MFRC522_ToCard
  2170  000B88  6E2C               	movwf	MFRC522_AntiColl@_status,c
  2171                           
  2172                           ;RFIDlib.h: 946: if (_status == 0)
  2173  000B8A  502C               	movf	MFRC522_AntiColl@_status,w,c
  2174  000B8C  A4D8               	btfss	status,2,c
  2175  000B8E  D01E               	goto	l160
  2176                           
  2177                           ;RFIDlib.h: 947: {
  2178                           ;RFIDlib.h: 949: for (i = 0; i < 4; i++)
  2179  000B90  0E00               	movlw	0
  2180  000B92  6E2D               	movwf	MFRC522_AntiColl@i,c
  2181  000B94                     l1933:
  2182  000B94  0E03               	movlw	3
  2183  000B96  642D               	cpfsgt	MFRC522_AntiColl@i,c
  2184  000B98  D001               	goto	l158
  2185  000B9A  D00C               	goto	u1250
  2186  000B9C                     l158:
  2187                           
  2188                           ;RFIDlib.h: 950: {
  2189                           ;RFIDlib.h: 952: serNumCheck ^= serNum[i];
  2190  000B9C  502D               	movf	MFRC522_AntiColl@i,w,c
  2191  000B9E  0D01               	mullw	1
  2192  000BA0  50F3               	movf	prodl,w,c
  2193  000BA2  2426               	addwf	MFRC522_AntiColl@serNum,w,c
  2194  000BA4  6ED9               	movwf	fsr2l,c
  2195  000BA6  50F4               	movf	prodh,w,c
  2196  000BA8  2027               	addwfc	MFRC522_AntiColl@serNum+1,w,c
  2197  000BAA  6EDA               	movwf	fsr2h,c
  2198  000BAC  50DF               	movf	indf2,w,c
  2199  000BAE  1A29               	xorwf	MFRC522_AntiColl@serNumCheck,f,c
  2200  000BB0  2A2D               	incf	MFRC522_AntiColl@i,f,c
  2201  000BB2  D7F0               	goto	l1933
  2202  000BB4                     u1250:
  2203                           
  2204                           ;RFIDlib.h: 954: }
  2205                           ;RFIDlib.h: 958: if (serNumCheck != serNum[4])
  2206  000BB4  EE20 F004          	lfsr	2,4
  2207  000BB8  5026               	movf	MFRC522_AntiColl@serNum,w,c
  2208  000BBA  26D9               	addwf	fsr2l,f,c
  2209  000BBC  5027               	movf	MFRC522_AntiColl@serNum+1,w,c
  2210  000BBE  22DA               	addwfc	fsr2h,f,c
  2211  000BC0  5029               	movf	MFRC522_AntiColl@serNumCheck,w,c
  2212  000BC2  18DE               	xorwf	postinc2,w,c
  2213  000BC4  B4D8               	btfsc	status,2,c
  2214  000BC6  D002               	goto	l160
  2215                           
  2216                           ;RFIDlib.h: 959: {
  2217                           ;RFIDlib.h: 961: _status = 2;
  2218  000BC8  0E02               	movlw	2
  2219  000BCA  6E2C               	movwf	MFRC522_AntiColl@_status,c
  2220  000BCC                     l160:
  2221                           
  2222                           ;RFIDlib.h: 963: }
  2223                           ;RFIDlib.h: 965: }
  2224                           ;RFIDlib.h: 967: return _status;
  2225  000BCC  502C               	movf	MFRC522_AntiColl@_status,w,c
  2226  000BCE  0012               	return	
  2227  000BD0                     __end_of_MFRC522_AntiColl:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           indf0	equ	0xFEF
  2236                           fsr0h	equ	0xFEA
  2237                           fsr0l	equ	0xFE9
  2238                           wreg	equ	0xFE8
  2239                           indf2	equ	0xFDF
  2240                           postinc2	equ	0xFDE
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function _MFRC522_ToCard *****************
  2246 ;; Defined at:
  2247 ;;		line 454 in file "../RFIDlib.h"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  command         1    wreg     unsigned char 
  2250 ;;  sendData        2   18[COMRAM] PTR unsigned char 
  2251 ;;		 -> main@UID(10), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  2252 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  2253 ;;  sendLen         1   20[COMRAM] unsigned char 
  2254 ;;  backData        2   21[COMRAM] PTR unsigned char 
  2255 ;;		 -> main@UID(10), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  2256 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  2257 ;;  backLen         2   23[COMRAM] PTR unsigned int 
  2258 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Read@unLen(2), MFRC522_Write@recvBits(2), MFRC522_Auth@recvBits(2), 
  2259 ;;		 -> MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  command         1   33[COMRAM] unsigned char 
  2262 ;;  i               2   34[COMRAM] unsigned int 
  2263 ;;  n               1   36[COMRAM] unsigned char 
  2264 ;;  irqEn           1   32[COMRAM] unsigned char 
  2265 ;;  lastBits        1   31[COMRAM] unsigned char 
  2266 ;;  _status         1   30[COMRAM] unsigned char 
  2267 ;;  waitIRq         1   29[COMRAM] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      unsigned char 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2277 ;;      Params:         7       0       0       0       0       0       0       0       0
  2278 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2279 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2280 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2281 ;;Total ram usage:       19 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    2
  2284 ;; This function calls:
  2285 ;;		_MFRC522_Clear_Bit
  2286 ;;		_MFRC522_Rd
  2287 ;;		_MFRC522_Set_Bit
  2288 ;;		_MFRC522_Wr
  2289 ;; This function is called by:
  2290 ;;		_MFRC522_Request
  2291 ;;		_MFRC522_AntiColl
  2292 ;;		_MFRC522_SelectTag
  2293 ;;		_MFRC522_Halt
  2294 ;;		_MFRC522_Auth
  2295 ;;		_MFRC522_Write
  2296 ;;		_MFRC522_Read
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text17
  2301  00080C                     __ptext17:
  2302                           	opt stack 0
  2303  00080C                     _MFRC522_ToCard:
  2304                           	opt stack 26
  2305                           
  2306                           ;incstack = 0
  2307                           ;MFRC522_ToCard@command stored from wreg
  2308  00080C  6E22               	movwf	MFRC522_ToCard@command,c
  2309                           
  2310                           ;RFIDlib.h: 457: char _status = 2;
  2311  00080E  0E02               	movlw	2
  2312  000810  6E1F               	movwf	MFRC522_ToCard@_status,c
  2313                           
  2314                           ;RFIDlib.h: 459: char irqEn = 0x00;
  2315  000812  0E00               	movlw	0
  2316  000814  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2317                           
  2318                           ;RFIDlib.h: 461: char waitIRq = 0x00;
  2319  000816  0E00               	movlw	0
  2320  000818  6E1E               	movwf	MFRC522_ToCard@waitIRq,c
  2321                           
  2322                           ;RFIDlib.h: 463: char lastBits;
  2323                           ;RFIDlib.h: 465: char n;
  2324                           ;RFIDlib.h: 467: unsigned i;
  2325                           ;RFIDlib.h: 471: switch (command)
  2326  00081A  D009               	goto	l75
  2327  00081C                     
  2328                           ;RFIDlib.h: 476: {
  2329                           ;RFIDlib.h: 478: irqEn = 0x12;
  2330  00081C  0E12               	movlw	18
  2331  00081E  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2332                           
  2333                           ;RFIDlib.h: 480: waitIRq = 0x10;
  2334  000820  0E10               	movlw	16
  2335  000822  D003               	goto	L3
  2336  000824                     
  2337                           ;RFIDlib.h: 488: {
  2338                           ;RFIDlib.h: 490: irqEn = 0x77;
  2339  000824  0E77               	movlw	119
  2340  000826  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2341                           
  2342                           ;RFIDlib.h: 492: waitIRq = 0x30;
  2343  000828  0E30               	movlw	48
  2344  00082A                     L3:
  2345  00082A  6E1E               	movwf	MFRC522_ToCard@waitIRq,c
  2346                           
  2347                           ;RFIDlib.h: 502: }
  2348                           
  2349                           ;RFIDlib.h: 500: break;
  2350                           
  2351                           ;RFIDlib.h: 496: }
  2352                           ;RFIDlib.h: 498: default:
  2353                           
  2354                           ;RFIDlib.h: 494: break;
  2355  00082C  D007               	goto	l77
  2356  00082E                     l75:
  2357  00082E  5022               	movf	MFRC522_ToCard@command,w,c
  2358                           
  2359                           ; Switch size 1, requested type "space"
  2360                           ; Number of cases is 2, Range of values is 12 to 14
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte            7     4 (average)
  2364                           ;	Chosen strategy is simple_byte
  2365  000830  0A0C               	xorlw	12	; case 12
  2366  000832  B4D8               	btfsc	status,2,c
  2367  000834  D7F7               	goto	l78
  2368  000836  0A02               	xorlw	2	; case 14
  2369  000838  B4D8               	btfsc	status,2,c
  2370  00083A  D7F0               	goto	l76
  2371  00083C                     l77:
  2372                           
  2373                           ;RFIDlib.h: 504: MFRC522_Wr(0x02, irqEn | 0x80);
  2374  00083C  0E00               	movlw	0
  2375  00083E  6E02               	movwf	MFRC522_Wr@Address+1,c
  2376  000840  0E02               	movlw	2
  2377  000842  6E01               	movwf	MFRC522_Wr@Address,c
  2378  000844  0E80               	movlw	128
  2379  000846  C021  F01A         	movff	MFRC522_ToCard@irqEn,??_MFRC522_ToCard
  2380  00084A  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  2381  00084C  101A               	iorwf	??_MFRC522_ToCard,w,c
  2382  00084E  6E03               	movwf	MFRC522_Wr@value,c
  2383  000850  501B               	movf	??_MFRC522_ToCard+1,w,c
  2384  000852  6E04               	movwf	MFRC522_Wr@value+1,c
  2385  000854  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2386                           
  2387                           ;RFIDlib.h: 506: MFRC522_Clear_Bit(0x04, 0x80);
  2388  000858  0E80               	movlw	128
  2389  00085A  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  2390  00085C  0E04               	movlw	4
  2391  00085E  ECD6  F007         	call	_MFRC522_Clear_Bit
  2392                           
  2393                           ;RFIDlib.h: 508: MFRC522_Set_Bit(0x0A, 0x80);
  2394  000862  0E80               	movlw	128
  2395  000864  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  2396  000866  0E0A               	movlw	10
  2397  000868  EC84  F008         	call	_MFRC522_Set_Bit
  2398                           
  2399                           ;RFIDlib.h: 510: MFRC522_Wr(0x01, 0x00);
  2400  00086C  0E00               	movlw	0
  2401  00086E  6E02               	movwf	MFRC522_Wr@Address+1,c
  2402  000870  0E01               	movlw	1
  2403  000872  6E01               	movwf	MFRC522_Wr@Address,c
  2404  000874  0E00               	movlw	0
  2405  000876  6E04               	movwf	MFRC522_Wr@value+1,c
  2406  000878  0E00               	movlw	0
  2407  00087A  6E03               	movwf	MFRC522_Wr@value,c
  2408  00087C  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2409                           
  2410                           ;RFIDlib.h: 514: for (i = 0; i < sendLen; i++)
  2411  000880  0E00               	movlw	0
  2412  000882  6E24               	movwf	MFRC522_ToCard@i+1,c
  2413  000884  0E00               	movlw	0
  2414  000886  6E23               	movwf	MFRC522_ToCard@i,c
  2415  000888  D013               	goto	l80
  2416  00088A                     
  2417                           ;RFIDlib.h: 515: {
  2418                           ;RFIDlib.h: 517: MFRC522_Wr(0x09, sendData[i]);
  2419  00088A  0E00               	movlw	0
  2420  00088C  6E02               	movwf	MFRC522_Wr@Address+1,c
  2421  00088E  0E09               	movlw	9
  2422  000890  6E01               	movwf	MFRC522_Wr@Address,c
  2423  000892  5023               	movf	MFRC522_ToCard@i,w,c
  2424  000894  2413               	addwf	MFRC522_ToCard@sendData,w,c
  2425  000896  6ED9               	movwf	fsr2l,c
  2426  000898  5024               	movf	MFRC522_ToCard@i+1,w,c
  2427  00089A  2014               	addwfc	MFRC522_ToCard@sendData+1,w,c
  2428  00089C  6EDA               	movwf	fsr2h,c
  2429  00089E  50DF               	movf	indf2,w,c
  2430  0008A0  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2431  0008A2  501A               	movf	??_MFRC522_ToCard,w,c
  2432  0008A4  6E03               	movwf	MFRC522_Wr@value,c
  2433  0008A6  6A04               	clrf	MFRC522_Wr@value+1,c
  2434  0008A8  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2435  0008AC  4A23               	infsnz	MFRC522_ToCard@i,f,c
  2436  0008AE  2A24               	incf	MFRC522_ToCard@i+1,f,c
  2437  0008B0                     l80:
  2438  0008B0  5015               	movf	MFRC522_ToCard@sendLen,w,c
  2439  0008B2  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2440  0008B4  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  2441  0008B6  501A               	movf	??_MFRC522_ToCard,w,c
  2442  0008B8  5C23               	subwf	MFRC522_ToCard@i,w,c
  2443  0008BA  501B               	movf	??_MFRC522_ToCard+1,w,c
  2444  0008BC  5824               	subwfb	MFRC522_ToCard@i+1,w,c
  2445  0008BE  A0D8               	btfss	status,0,c
  2446  0008C0  D7E4               	goto	l81
  2447                           
  2448                           ;RFIDlib.h: 519: }
  2449                           ;RFIDlib.h: 523: MFRC522_Wr(0x01, command);
  2450  0008C2  0E00               	movlw	0
  2451  0008C4  6E02               	movwf	MFRC522_Wr@Address+1,c
  2452  0008C6  0E01               	movlw	1
  2453  0008C8  6E01               	movwf	MFRC522_Wr@Address,c
  2454  0008CA  C022  F003         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  2455  0008CE  6A04               	clrf	MFRC522_Wr@value+1,c
  2456  0008D0  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2457                           
  2458                           ;RFIDlib.h: 525: if (command == 0x0C)
  2459  0008D4  0E0C               	movlw	12
  2460  0008D6  1822               	xorwf	MFRC522_ToCard@command,w,c
  2461  0008D8  A4D8               	btfss	status,2,c
  2462  0008DA  D005               	goto	l83
  2463                           
  2464                           ;RFIDlib.h: 526: {
  2465                           ;RFIDlib.h: 528: MFRC522_Set_Bit(0x0D, 0x80);
  2466  0008DC  0E80               	movlw	128
  2467  0008DE  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  2468  0008E0  0E0D               	movlw	13
  2469  0008E2  EC84  F008         	call	_MFRC522_Set_Bit
  2470  0008E6                     l83:
  2471                           
  2472                           ;RFIDlib.h: 530: }
  2473                           ;RFIDlib.h: 536: i = 0xFFFF;
  2474  0008E6  6823               	setf	MFRC522_ToCard@i,c
  2475  0008E8  6824               	setf	MFRC522_ToCard@i+1,c
  2476  0008EA                     l84:
  2477                           
  2478                           ;RFIDlib.h: 539: {
  2479                           ;RFIDlib.h: 545: n = MFRC522_Rd(0x04);
  2480  0008EA  0E00               	movlw	0
  2481  0008EC  6E02               	movwf	MFRC522_Rd@Address+1,c
  2482  0008EE  0E04               	movlw	4
  2483  0008F0  6E01               	movwf	MFRC522_Rd@Address,c
  2484  0008F2  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2485  0008F6  5001               	movf	?_MFRC522_Rd,w,c
  2486  0008F8  6E25               	movwf	MFRC522_ToCard@n,c
  2487                           
  2488                           ;RFIDlib.h: 547: i--;
  2489  0008FA  0623               	decf	MFRC522_ToCard@i,f,c
  2490  0008FC  A0D8               	btfss	status,0,c
  2491  0008FE  0624               	decf	MFRC522_ToCard@i+1,f,c
  2492                           
  2493                           ;RFIDlib.h: 549: } while (i && !(n & 0x01) && !(n & waitIRq));
  2494  000900  5023               	movf	MFRC522_ToCard@i,w,c
  2495  000902  1024               	iorwf	MFRC522_ToCard@i+1,w,c
  2496  000904  A4D8               	btfss	status,2,c
  2497  000906  B025               	btfsc	MFRC522_ToCard@n,0,c
  2498  000908  D005               	goto	u1120
  2499  00090A  5025               	movf	MFRC522_ToCard@n,w,c
  2500  00090C  141E               	andwf	MFRC522_ToCard@waitIRq,w,c
  2501  00090E  0900               	iorlw	0
  2502  000910  B4D8               	btfsc	status,2,c
  2503  000912  D7EB               	goto	l84
  2504  000914                     u1120:
  2505                           
  2506                           ;RFIDlib.h: 551: MFRC522_Clear_Bit(0x0D, 0x80);
  2507  000914  0E80               	movlw	128
  2508  000916  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  2509  000918  0E0D               	movlw	13
  2510  00091A  ECD6  F007         	call	_MFRC522_Clear_Bit
  2511                           
  2512                           ;RFIDlib.h: 553: if (i != 0)
  2513  00091E  5023               	movf	MFRC522_ToCard@i,w,c
  2514  000920  1024               	iorwf	MFRC522_ToCard@i+1,w,c
  2515  000922  B4D8               	btfsc	status,2,c
  2516  000924  D08D               	goto	l99
  2517                           
  2518                           ;RFIDlib.h: 554: {
  2519                           ;RFIDlib.h: 556: if (!(MFRC522_Rd(0x06) & 0x1B))
  2520  000926  0E00               	movlw	0
  2521  000928  6E02               	movwf	MFRC522_Rd@Address+1,c
  2522  00092A  0E06               	movlw	6
  2523  00092C  6E01               	movwf	MFRC522_Rd@Address,c
  2524  00092E  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2525  000932  0E1B               	movlw	27
  2526  000934  1601               	andwf	?_MFRC522_Rd,f,c
  2527  000936  0E00               	movlw	0
  2528  000938  1602               	andwf	?_MFRC522_Rd+1,f,c
  2529  00093A  5001               	movf	?_MFRC522_Rd,w,c
  2530  00093C  1002               	iorwf	?_MFRC522_Rd+1,w,c
  2531  00093E  A4D8               	btfss	status,2,c
  2532  000940  D07D               	goto	l89
  2533                           
  2534                           ;RFIDlib.h: 557: {
  2535                           ;RFIDlib.h: 559: _status = 0;
  2536  000942  0E00               	movlw	0
  2537  000944  6E1F               	movwf	MFRC522_ToCard@_status,c
  2538                           
  2539                           ;RFIDlib.h: 561: if (n & irqEn & 0x01)
  2540  000946  5025               	movf	MFRC522_ToCard@n,w,c
  2541  000948  1421               	andwf	MFRC522_ToCard@irqEn,w,c
  2542  00094A  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2543  00094C  A01A               	btfss	??_MFRC522_ToCard,0,c
  2544  00094E  D002               	goto	l90
  2545                           
  2546                           ;RFIDlib.h: 562: {
  2547                           ;RFIDlib.h: 564: _status = 1;
  2548  000950  0E01               	movlw	1
  2549  000952  6E1F               	movwf	MFRC522_ToCard@_status,c
  2550  000954                     l90:
  2551                           
  2552                           ;RFIDlib.h: 566: }
  2553                           ;RFIDlib.h: 568: if (command == 0x0C)
  2554  000954  0E0C               	movlw	12
  2555  000956  1822               	xorwf	MFRC522_ToCard@command,w,c
  2556  000958  A4D8               	btfss	status,2,c
  2557  00095A  D072               	goto	l99
  2558                           
  2559                           ;RFIDlib.h: 569: {
  2560                           ;RFIDlib.h: 571: n = MFRC522_Rd(0x0A);
  2561  00095C  0E00               	movlw	0
  2562  00095E  6E02               	movwf	MFRC522_Rd@Address+1,c
  2563  000960  0E0A               	movlw	10
  2564  000962  6E01               	movwf	MFRC522_Rd@Address,c
  2565  000964  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2566  000968  5001               	movf	?_MFRC522_Rd,w,c
  2567  00096A  6E25               	movwf	MFRC522_ToCard@n,c
  2568                           
  2569                           ;RFIDlib.h: 573: lastBits = MFRC522_Rd(0x0C) & 0x07;
  2570  00096C  0E00               	movlw	0
  2571  00096E  6E02               	movwf	MFRC522_Rd@Address+1,c
  2572  000970  0E0C               	movlw	12
  2573  000972  6E01               	movwf	MFRC522_Rd@Address,c
  2574  000974  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2575  000978  5001               	movf	?_MFRC522_Rd,w,c
  2576  00097A  0B07               	andlw	7
  2577  00097C  6E20               	movwf	MFRC522_ToCard@lastBits,c
  2578                           
  2579                           ;RFIDlib.h: 575: if (lastBits)
  2580  00097E  5020               	movf	MFRC522_ToCard@lastBits,w,c
  2581  000980  B4D8               	btfsc	status,2,c
  2582  000982  D021               	goto	l92
  2583                           
  2584                           ;RFIDlib.h: 576: {
  2585                           ;RFIDlib.h: 578: *backLen = (n - 1) * 8 + lastBits;
  2586  000984  0EF8               	movlw	248
  2587  000986  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2588  000988  0EFF               	movlw	255
  2589  00098A  6E1B               	movwf	(??_MFRC522_ToCard+1)& (0+255),c
  2590  00098C  5020               	movf	MFRC522_ToCard@lastBits,w,c
  2591  00098E  C025  F01C         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  2592  000992  6A1D               	clrf	(??_MFRC522_ToCard+3)& (0+255),c
  2593  000994  90D8               	bcf	status,0,c
  2594  000996  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  2595  000998  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  2596  00099A  90D8               	bcf	status,0,c
  2597  00099C  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  2598  00099E  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  2599  0009A0  90D8               	bcf	status,0,c
  2600  0009A2  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  2601  0009A4  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  2602  0009A6  261C               	addwf	??_MFRC522_ToCard+2,f,c
  2603  0009A8  0E00               	movlw	0
  2604  0009AA  221D               	addwfc	??_MFRC522_ToCard+3,f,c
  2605  0009AC  501A               	movf	??_MFRC522_ToCard,w,c
  2606  0009AE  261C               	addwf	??_MFRC522_ToCard+2,f,c
  2607  0009B0  501B               	movf	??_MFRC522_ToCard+1,w,c
  2608  0009B2  221D               	addwfc	??_MFRC522_ToCard+3,f,c
  2609  0009B4  C018  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  2610  0009B8  C019  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  2611  0009BC  C01C  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  2612  0009C0  C01D  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  2613                           
  2614                           ;RFIDlib.h: 580: }
  2615  0009C4  D00A               	goto	l93
  2616  0009C6                     l92:
  2617                           
  2618                           ;RFIDlib.h: 581: else
  2619                           ;RFIDlib.h: 582: {
  2620                           ;RFIDlib.h: 584: *backLen = n * 8;
  2621  0009C6  5025               	movf	MFRC522_ToCard@n,w,c
  2622  0009C8  0D08               	mullw	8
  2623  0009CA  C018  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  2624  0009CE  C019  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  2625  0009D2  CFF3 FFDE          	movff	prodl,postinc2
  2626  0009D6  CFF4 FFDD          	movff	prodh,postdec2
  2627  0009DA                     l93:
  2628                           
  2629                           ;RFIDlib.h: 586: }
  2630                           ;RFIDlib.h: 588: if (n == 0)
  2631  0009DA  5025               	movf	MFRC522_ToCard@n,w,c
  2632  0009DC  A4D8               	btfss	status,2,c
  2633  0009DE  D002               	goto	l94
  2634                           
  2635                           ;RFIDlib.h: 589: {
  2636                           ;RFIDlib.h: 591: n = 1;
  2637  0009E0  0E01               	movlw	1
  2638  0009E2  6E25               	movwf	MFRC522_ToCard@n,c
  2639  0009E4                     l94:
  2640                           
  2641                           ;RFIDlib.h: 593: }
  2642                           ;RFIDlib.h: 595: if (n > 16)
  2643  0009E4  0E10               	movlw	16
  2644  0009E6  6425               	cpfsgt	MFRC522_ToCard@n,c
  2645  0009E8  D002               	goto	l95
  2646                           
  2647                           ;RFIDlib.h: 596: {
  2648                           ;RFIDlib.h: 598: n = 16;
  2649  0009EA  0E10               	movlw	16
  2650  0009EC  6E25               	movwf	MFRC522_ToCard@n,c
  2651  0009EE                     l95:
  2652                           
  2653                           ;RFIDlib.h: 600: }
  2654                           ;RFIDlib.h: 604: for (i = 0; i < n; i++)
  2655  0009EE  0E00               	movlw	0
  2656  0009F0  6E24               	movwf	MFRC522_ToCard@i+1,c
  2657  0009F2  0E00               	movlw	0
  2658  0009F4  6E23               	movwf	MFRC522_ToCard@i,c
  2659  0009F6  D010               	goto	l96
  2660  0009F8                     
  2661                           ;RFIDlib.h: 605: {
  2662                           ;RFIDlib.h: 607: backData[i] = MFRC522_Rd(0x09);
  2663  0009F8  5023               	movf	MFRC522_ToCard@i,w,c
  2664  0009FA  2416               	addwf	MFRC522_ToCard@backData,w,c
  2665  0009FC  6ED9               	movwf	fsr2l,c
  2666  0009FE  5024               	movf	MFRC522_ToCard@i+1,w,c
  2667  000A00  2017               	addwfc	MFRC522_ToCard@backData+1,w,c
  2668  000A02  6EDA               	movwf	fsr2h,c
  2669  000A04  0E00               	movlw	0
  2670  000A06  6E02               	movwf	MFRC522_Rd@Address+1,c
  2671  000A08  0E09               	movlw	9
  2672  000A0A  6E01               	movwf	MFRC522_Rd@Address,c
  2673  000A0C  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2674  000A10  5001               	movf	?_MFRC522_Rd,w,c
  2675  000A12  6EDF               	movwf	indf2,c
  2676  000A14  4A23               	infsnz	MFRC522_ToCard@i,f,c
  2677  000A16  2A24               	incf	MFRC522_ToCard@i+1,f,c
  2678  000A18                     l96:
  2679  000A18  5025               	movf	MFRC522_ToCard@n,w,c
  2680  000A1A  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2681  000A1C  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  2682  000A1E  501A               	movf	??_MFRC522_ToCard,w,c
  2683  000A20  5C23               	subwf	MFRC522_ToCard@i,w,c
  2684  000A22  501B               	movf	??_MFRC522_ToCard+1,w,c
  2685  000A24  5824               	subwfb	MFRC522_ToCard@i+1,w,c
  2686  000A26  A0D8               	btfss	status,0,c
  2687  000A28  D7E7               	goto	l97
  2688                           
  2689                           ;RFIDlib.h: 609: }
  2690                           ;RFIDlib.h: 613: backData[i] = 0;
  2691  000A2A  5023               	movf	MFRC522_ToCard@i,w,c
  2692  000A2C  2416               	addwf	MFRC522_ToCard@backData,w,c
  2693  000A2E  6ED9               	movwf	fsr2l,c
  2694  000A30  5024               	movf	MFRC522_ToCard@i+1,w,c
  2695  000A32  2017               	addwfc	MFRC522_ToCard@backData+1,w,c
  2696  000A34  6EDA               	movwf	fsr2h,c
  2697  000A36  0E00               	movlw	0
  2698  000A38  6EDF               	movwf	indf2,c
  2699                           
  2700                           ;RFIDlib.h: 615: }
  2701                           ;RFIDlib.h: 617: }
  2702  000A3A  D002               	goto	l99
  2703  000A3C                     l89:
  2704                           
  2705                           ;RFIDlib.h: 618: else
  2706                           ;RFIDlib.h: 619: {
  2707                           ;RFIDlib.h: 621: _status = 2;
  2708  000A3C  0E02               	movlw	2
  2709  000A3E  6E1F               	movwf	MFRC522_ToCard@_status,c
  2710  000A40                     l99:
  2711                           
  2712                           ;RFIDlib.h: 623: }
  2713                           ;RFIDlib.h: 625: }
  2714                           ;RFIDlib.h: 631: return _status;
  2715  000A40  501F               	movf	MFRC522_ToCard@_status,w,c
  2716  000A42  0012               	return	
  2717  000A44                     __end_of_MFRC522_ToCard:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           indf0	equ	0xFEF
  2726                           fsr0h	equ	0xFEA
  2727                           fsr0l	equ	0xFE9
  2728                           wreg	equ	0xFE8
  2729                           indf2	equ	0xFDF
  2730                           postinc2	equ	0xFDE
  2731                           postdec2	equ	0xFDD
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _MFRC522_Clear_Bit *****************
  2737 ;; Defined at:
  2738 ;;		line 346 in file "../RFIDlib.h"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  addr            1    wreg     unsigned char 
  2741 ;;  mask            1   10[COMRAM] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  addr            1   17[COMRAM] unsigned char 
  2744 ;;  tmp             2   15[COMRAM] unsigned int 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2754 ;;      Params:         1       0       0       0       0       0       0       0       0
  2755 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2756 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2757 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        8 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		_MFRC522_Rd
  2763 ;;		_MFRC522_Wr
  2764 ;; This function is called by:
  2765 ;;		_MFRC522_ToCard
  2766 ;;		_MFRC522_AntiColl
  2767 ;;		_MFRC522_AntennaOff
  2768 ;;		_MFRC522_CRC
  2769 ;;		_MFRC522_Halt
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text18
  2774  000FAC                     __ptext18:
  2775                           	opt stack 0
  2776  000FAC                     _MFRC522_Clear_Bit:
  2777                           	opt stack 26
  2778                           
  2779                           ;incstack = 0
  2780                           ;MFRC522_Clear_Bit@addr stored from wreg
  2781  000FAC  6E12               	movwf	MFRC522_Clear_Bit@addr,c
  2782                           
  2783                           ;RFIDlib.h: 348: unsigned int tmp = 0x0;
  2784  000FAE  0E00               	movlw	0
  2785  000FB0  6E11               	movwf	MFRC522_Clear_Bit@tmp+1,c
  2786  000FB2  0E00               	movlw	0
  2787  000FB4  6E10               	movwf	MFRC522_Clear_Bit@tmp,c
  2788                           
  2789                           ;RFIDlib.h: 350: tmp = MFRC522_Rd(addr);
  2790  000FB6  C012  F001         	movff	MFRC522_Clear_Bit@addr,MFRC522_Rd@Address
  2791  000FBA  6A02               	clrf	MFRC522_Rd@Address+1,c
  2792  000FBC  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  2793  000FC0  C001  F010         	movff	?_MFRC522_Rd,MFRC522_Clear_Bit@tmp
  2794  000FC4  C002  F011         	movff	?_MFRC522_Rd+1,MFRC522_Clear_Bit@tmp+1
  2795                           
  2796                           ;RFIDlib.h: 352: MFRC522_Wr(addr, tmp&~mask);
  2797  000FC8  C012  F001         	movff	MFRC522_Clear_Bit@addr,MFRC522_Wr@Address
  2798  000FCC  6A02               	clrf	MFRC522_Wr@Address+1,c
  2799  000FCE  500B               	movf	MFRC522_Clear_Bit@mask,w,c
  2800  000FD0  6E0C               	movwf	??_MFRC522_Clear_Bit& (0+255),c
  2801  000FD2  6A0D               	clrf	(??_MFRC522_Clear_Bit+1)& (0+255),c
  2802  000FD4  1C0C               	comf	??_MFRC522_Clear_Bit,w,c
  2803  000FD6  6E0E               	movwf	(??_MFRC522_Clear_Bit+2)& (0+255),c
  2804  000FD8  1C0D               	comf	??_MFRC522_Clear_Bit+1,w,c
  2805  000FDA  6E0F               	movwf	(??_MFRC522_Clear_Bit+3)& (0+255),c
  2806  000FDC  5010               	movf	MFRC522_Clear_Bit@tmp,w,c
  2807  000FDE  140E               	andwf	??_MFRC522_Clear_Bit+2,w,c
  2808  000FE0  6E03               	movwf	MFRC522_Wr@value,c
  2809  000FE2  5011               	movf	MFRC522_Clear_Bit@tmp+1,w,c
  2810  000FE4  140F               	andwf	??_MFRC522_Clear_Bit+3,w,c
  2811  000FE6  6E04               	movwf	MFRC522_Wr@value+1,c
  2812  000FE8  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2813  000FEC  0012               	return		;funcret
  2814  000FEE                     __end_of_MFRC522_Clear_Bit:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           indf0	equ	0xFEF
  2823                           fsr0h	equ	0xFEA
  2824                           fsr0l	equ	0xFE9
  2825                           wreg	equ	0xFE8
  2826                           indf2	equ	0xFDF
  2827                           postinc2	equ	0xFDE
  2828                           postdec2	equ	0xFDD
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _MFRC522_Init *****************
  2834 ;; Defined at:
  2835 ;;		line 411 in file "../RFIDlib.h"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    3
  2856 ;; This function calls:
  2857 ;;		_MFRC522_AntennaOn
  2858 ;;		_MFRC522_Reset
  2859 ;;		_MFRC522_Wr
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text19
  2866  000DA8                     __ptext19:
  2867                           	opt stack 0
  2868  000DA8                     _MFRC522_Init:
  2869                           	opt stack 27
  2870                           
  2871                           ;RFIDlib.h: 435: PORTBbits.RB1 = 1;
  2872                           
  2873                           ;incstack = 0
  2874  000DA8  8281               	bsf	3969,1,c	;volatile
  2875                           
  2876                           ;RFIDlib.h: 436: PORTBbits.RB3 = 1;
  2877  000DAA  8681               	bsf	3969,3,c	;volatile
  2878                           
  2879                           ;RFIDlib.h: 438: MFRC522_Reset();
  2880  000DAC  ECB3  F008         	call	_MFRC522_Reset	;wreg free
  2881                           
  2882                           ;RFIDlib.h: 440: MFRC522_Wr( 0x2A, 0x8D );
  2883  000DB0  0E00               	movlw	0
  2884  000DB2  6E02               	movwf	MFRC522_Wr@Address+1,c
  2885  000DB4  0E2A               	movlw	42
  2886  000DB6  6E01               	movwf	MFRC522_Wr@Address,c
  2887  000DB8  0E00               	movlw	0
  2888  000DBA  6E04               	movwf	MFRC522_Wr@value+1,c
  2889  000DBC  0E8D               	movlw	141
  2890  000DBE  6E03               	movwf	MFRC522_Wr@value,c
  2891  000DC0  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2892                           
  2893                           ;RFIDlib.h: 441: MFRC522_Wr( 0x2B, 0x3E );
  2894  000DC4  0E00               	movlw	0
  2895  000DC6  6E02               	movwf	MFRC522_Wr@Address+1,c
  2896  000DC8  0E2B               	movlw	43
  2897  000DCA  6E01               	movwf	MFRC522_Wr@Address,c
  2898  000DCC  0E00               	movlw	0
  2899  000DCE  6E04               	movwf	MFRC522_Wr@value+1,c
  2900  000DD0  0E3E               	movlw	62
  2901  000DD2  6E03               	movwf	MFRC522_Wr@value,c
  2902  000DD4  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2903                           
  2904                           ;RFIDlib.h: 442: MFRC522_Wr( 0x2D, 30 );
  2905  000DD8  0E00               	movlw	0
  2906  000DDA  6E02               	movwf	MFRC522_Wr@Address+1,c
  2907  000DDC  0E2D               	movlw	45
  2908  000DDE  6E01               	movwf	MFRC522_Wr@Address,c
  2909  000DE0  0E00               	movlw	0
  2910  000DE2  6E04               	movwf	MFRC522_Wr@value+1,c
  2911  000DE4  0E1E               	movlw	30
  2912  000DE6  6E03               	movwf	MFRC522_Wr@value,c
  2913  000DE8  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2914                           
  2915                           ;RFIDlib.h: 443: MFRC522_Wr( 0x2C, 0 );
  2916  000DEC  0E00               	movlw	0
  2917  000DEE  6E02               	movwf	MFRC522_Wr@Address+1,c
  2918  000DF0  0E2C               	movlw	44
  2919  000DF2  6E01               	movwf	MFRC522_Wr@Address,c
  2920  000DF4  0E00               	movlw	0
  2921  000DF6  6E04               	movwf	MFRC522_Wr@value+1,c
  2922  000DF8  0E00               	movlw	0
  2923  000DFA  6E03               	movwf	MFRC522_Wr@value,c
  2924  000DFC  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2925                           
  2926                           ;RFIDlib.h: 445: MFRC522_Wr( 0x15, 0x40 );
  2927  000E00  0E00               	movlw	0
  2928  000E02  6E02               	movwf	MFRC522_Wr@Address+1,c
  2929  000E04  0E15               	movlw	21
  2930  000E06  6E01               	movwf	MFRC522_Wr@Address,c
  2931  000E08  0E00               	movlw	0
  2932  000E0A  6E04               	movwf	MFRC522_Wr@value+1,c
  2933  000E0C  0E40               	movlw	64
  2934  000E0E  6E03               	movwf	MFRC522_Wr@value,c
  2935  000E10  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2936                           
  2937                           ;RFIDlib.h: 446: MFRC522_Wr( 0x11, 0x3D );
  2938  000E14  0E00               	movlw	0
  2939  000E16  6E02               	movwf	MFRC522_Wr@Address+1,c
  2940  000E18  0E11               	movlw	17
  2941  000E1A  6E01               	movwf	MFRC522_Wr@Address,c
  2942  000E1C  0E00               	movlw	0
  2943  000E1E  6E04               	movwf	MFRC522_Wr@value+1,c
  2944  000E20  0E3D               	movlw	61
  2945  000E22  6E03               	movwf	MFRC522_Wr@value,c
  2946  000E24  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  2947                           
  2948                           ;RFIDlib.h: 451: MFRC522_AntennaOn();
  2949  000E28  ECC5  F008         	call	_MFRC522_AntennaOn	;wreg free
  2950  000E2C  0012               	return		;funcret
  2951  000E2E                     __end_of_MFRC522_Init:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           indf0	equ	0xFEF
  2960                           fsr0h	equ	0xFEA
  2961                           fsr0l	equ	0xFE9
  2962                           wreg	equ	0xFE8
  2963                           indf2	equ	0xFDF
  2964                           postinc2	equ	0xFDE
  2965                           postdec2	equ	0xFDD
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _MFRC522_Reset *****************
  2971 ;; Defined at:
  2972 ;;		line 366 in file "../RFIDlib.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2990 ;;Total ram usage:        0 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    1
  2993 ;; This function calls:
  2994 ;;		_MFRC522_Wr
  2995 ;; This function is called by:
  2996 ;;		_MFRC522_Init
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text20
  3001  001166                     __ptext20:
  3002                           	opt stack 0
  3003  001166                     _MFRC522_Reset:
  3004                           	opt stack 28
  3005                           
  3006                           ;RFIDlib.h: 369: PORTBbits.RB3 = 1;
  3007                           
  3008                           ;incstack = 0
  3009  001166  8681               	bsf	3969,3,c	;volatile
  3010                           
  3011                           ;RFIDlib.h: 371: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3012  001168  D000               	nop2		;2 cycle nop
  3013                           
  3014                           ;RFIDlib.h: 373: PORTBbits.RB3 = 0;
  3015  00116A  9681               	bcf	3969,3,c	;volatile
  3016                           
  3017                           ;RFIDlib.h: 375: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3018  00116C  D000               	nop2		;2 cycle nop
  3019                           
  3020                           ;RFIDlib.h: 377: PORTBbits.RB3 = 1;
  3021  00116E  8681               	bsf	3969,3,c	;volatile
  3022                           
  3023                           ;RFIDlib.h: 379: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3024  001170  D000               	nop2		;2 cycle nop
  3025                           
  3026                           ;RFIDlib.h: 381: MFRC522_Wr(0x01, 0x0F);
  3027  001172  0E00               	movlw	0
  3028  001174  6E02               	movwf	MFRC522_Wr@Address+1,c
  3029  001176  0E01               	movlw	1
  3030  001178  6E01               	movwf	MFRC522_Wr@Address,c
  3031  00117A  0E00               	movlw	0
  3032  00117C  6E04               	movwf	MFRC522_Wr@value+1,c
  3033  00117E  0E0F               	movlw	15
  3034  001180  6E03               	movwf	MFRC522_Wr@value,c
  3035  001182  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  3036                           
  3037                           ;RFIDlib.h: 383: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3038  001186  D000               	nop2		;2 cycle nop
  3039  001188  0012               	return		;funcret
  3040  00118A                     __end_of_MFRC522_Reset:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           indf0	equ	0xFEF
  3049                           fsr0h	equ	0xFEA
  3050                           fsr0l	equ	0xFE9
  3051                           wreg	equ	0xFE8
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _MFRC522_AntennaOn *****************
  3060 ;; Defined at:
  3061 ;;		line 387 in file "../RFIDlib.h"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  stt             2   14[COMRAM] unsigned int 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0
  3076 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3078 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    2
  3082 ;; This function calls:
  3083 ;;		_MFRC522_Rd
  3084 ;;		_MFRC522_Set_Bit
  3085 ;; This function is called by:
  3086 ;;		_MFRC522_Init
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text21
  3091  00118A                     __ptext21:
  3092                           	opt stack 0
  3093  00118A                     _MFRC522_AntennaOn:
  3094                           	opt stack 27
  3095                           
  3096                           ;RFIDlib.h: 390: unsigned int stt;
  3097                           ;RFIDlib.h: 392: stt = MFRC522_Rd(0x14);
  3098                           
  3099                           ;incstack = 0
  3100  00118A  0E00               	movlw	0
  3101  00118C  6E02               	movwf	MFRC522_Rd@Address+1,c
  3102  00118E  0E14               	movlw	20
  3103  001190  6E01               	movwf	MFRC522_Rd@Address,c
  3104  001192  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  3105  001196  C001  F00F         	movff	?_MFRC522_Rd,MFRC522_AntennaOn@stt
  3106  00119A  C002  F010         	movff	?_MFRC522_Rd+1,MFRC522_AntennaOn@stt+1
  3107                           
  3108                           ;RFIDlib.h: 394: MFRC522_Set_Bit(0x14, 0x03);
  3109  00119E  0E03               	movlw	3
  3110  0011A0  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  3111  0011A2  0E14               	movlw	20
  3112  0011A4  EC84  F008         	call	_MFRC522_Set_Bit
  3113  0011A8  0012               	return		;funcret
  3114  0011AA                     __end_of_MFRC522_AntennaOn:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           indf0	equ	0xFEF
  3123                           fsr0h	equ	0xFEA
  3124                           fsr0l	equ	0xFE9
  3125                           wreg	equ	0xFE8
  3126                           indf2	equ	0xFDF
  3127                           postinc2	equ	0xFDE
  3128                           postdec2	equ	0xFDD
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           status	equ	0xFD8
  3132                           
  3133 ;; *************** function _MFRC522_Set_Bit *****************
  3134 ;; Defined at:
  3135 ;;		line 356 in file "../RFIDlib.h"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  addr            1    wreg     unsigned char 
  3138 ;;  mask            1   10[COMRAM] unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  addr            1   13[COMRAM] unsigned char 
  3141 ;;  tmp             2   11[COMRAM] unsigned int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3154 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        4 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    1
  3158 ;; This function calls:
  3159 ;;		_MFRC522_Rd
  3160 ;;		_MFRC522_Wr
  3161 ;; This function is called by:
  3162 ;;		_MFRC522_AntennaOn
  3163 ;;		_MFRC522_ToCard
  3164 ;;		_MFRC522_CRC
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text22
  3169  001108                     __ptext22:
  3170                           	opt stack 0
  3171  001108                     _MFRC522_Set_Bit:
  3172                           	opt stack 26
  3173                           
  3174                           ;incstack = 0
  3175                           ;MFRC522_Set_Bit@addr stored from wreg
  3176  001108  6E0E               	movwf	MFRC522_Set_Bit@addr,c
  3177                           
  3178                           ;RFIDlib.h: 358: unsigned int tmp = 0x0;
  3179  00110A  0E00               	movlw	0
  3180  00110C  6E0D               	movwf	MFRC522_Set_Bit@tmp+1,c
  3181  00110E  0E00               	movlw	0
  3182  001110  6E0C               	movwf	MFRC522_Set_Bit@tmp,c
  3183                           
  3184                           ;RFIDlib.h: 360: tmp = MFRC522_Rd(addr);
  3185  001112  C00E  F001         	movff	MFRC522_Set_Bit@addr,MFRC522_Rd@Address
  3186  001116  6A02               	clrf	MFRC522_Rd@Address+1,c
  3187  001118  EC3A  F006         	call	_MFRC522_Rd	;wreg free
  3188  00111C  C001  F00C         	movff	?_MFRC522_Rd,MFRC522_Set_Bit@tmp
  3189  001120  C002  F00D         	movff	?_MFRC522_Rd+1,MFRC522_Set_Bit@tmp+1
  3190                           
  3191                           ;RFIDlib.h: 362: MFRC522_Wr(addr, tmp | mask);
  3192  001124  C00E  F001         	movff	MFRC522_Set_Bit@addr,MFRC522_Wr@Address
  3193  001128  6A02               	clrf	MFRC522_Wr@Address+1,c
  3194  00112A  500C               	movf	MFRC522_Set_Bit@tmp,w,c
  3195  00112C  100B               	iorwf	MFRC522_Set_Bit@mask,w,c
  3196  00112E  6E03               	movwf	MFRC522_Wr@value,c
  3197  001130  500D               	movf	MFRC522_Set_Bit@tmp+1,w,c
  3198  001132  6E04               	movwf	MFRC522_Wr@value+1,c
  3199  001134  EC8C  F006         	call	_MFRC522_Wr	;wreg free
  3200  001138  0012               	return		;funcret
  3201  00113A                     __end_of_MFRC522_Set_Bit:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           indf0	equ	0xFEF
  3210                           fsr0h	equ	0xFEA
  3211                           fsr0l	equ	0xFE9
  3212                           wreg	equ	0xFE8
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _MFRC522_Wr *****************
  3221 ;; Defined at:
  3222 ;;		line 295 in file "../RFIDlib.h"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  Address         2    0[COMRAM] unsigned int 
  3225 ;;  value           2    2[COMRAM] unsigned int 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  i               2    8[COMRAM] unsigned int 
  3228 ;;  ucAddr          2    6[COMRAM] unsigned int 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3238 ;;      Params:         4       0       0       0       0       0       0       0       0
  3239 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3240 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3241 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3242 ;;Total ram usage:       10 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_MFRC522_Clear_Bit
  3248 ;;		_MFRC522_Set_Bit
  3249 ;;		_MFRC522_Reset
  3250 ;;		_MFRC522_Init
  3251 ;;		_MFRC522_ToCard
  3252 ;;		_MFRC522_Request
  3253 ;;		_MFRC522_AntiColl
  3254 ;;		_MFRC522_CRC
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text23
  3259  000D18                     __ptext23:
  3260                           	opt stack 0
  3261  000D18                     _MFRC522_Wr:
  3262                           	opt stack 28
  3263                           
  3264                           ;RFIDlib.h: 300: unsigned int i, ucAddr;
  3265                           ;RFIDlib.h: 302: PORTBbits.RB1 = 0;
  3266                           
  3267                           ;incstack = 0
  3268  000D18  9281               	bcf	3969,1,c	;volatile
  3269                           
  3270                           ;RFIDlib.h: 304: PORTBbits.RB2 = 0;
  3271  000D1A  9481               	bcf	3969,2,c	;volatile
  3272                           
  3273                           ;RFIDlib.h: 306: ucAddr = ((Address << 1)&0x7E);
  3274  000D1C  C001  F005         	movff	MFRC522_Wr@Address,??_MFRC522_Wr
  3275  000D20  C002  F006         	movff	MFRC522_Wr@Address+1,??_MFRC522_Wr+1
  3276  000D24  90D8               	bcf	status,0,c
  3277  000D26  3605               	rlcf	??_MFRC522_Wr,f,c
  3278  000D28  3606               	rlcf	??_MFRC522_Wr+1,f,c
  3279  000D2A  0E7E               	movlw	126
  3280  000D2C  1405               	andwf	??_MFRC522_Wr,w,c
  3281  000D2E  6E07               	movwf	MFRC522_Wr@ucAddr,c
  3282  000D30  6A08               	clrf	MFRC522_Wr@ucAddr+1,c
  3283                           
  3284                           ;RFIDlib.h: 308: for (i = 8; i > 0; i--)
  3285  000D32  0E00               	movlw	0
  3286  000D34  6E0A               	movwf	MFRC522_Wr@i+1,c
  3287  000D36  0E08               	movlw	8
  3288  000D38  6E09               	movwf	MFRC522_Wr@i,c
  3289  000D3A                     l1775:
  3290  000D3A  5009               	movf	MFRC522_Wr@i,w,c
  3291  000D3C  100A               	iorwf	MFRC522_Wr@i+1,w,c
  3292  000D3E  B4D8               	btfsc	status,2,c
  3293  000D40  D014               	goto	u1030
  3294                           
  3295                           ;RFIDlib.h: 309: {
  3296                           ;RFIDlib.h: 311: PORTBbits.RB0 = ((ucAddr & 0x80) == 0x80);
  3297  000D42  AE07               	btfss	MFRC522_Wr@ucAddr,7,c
  3298  000D44  D003               	goto	u1010
  3299  000D46  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3300  000D48  2A05               	incf	??_MFRC522_Wr& (0+255),f,c
  3301  000D4A  D001               	goto	u1028
  3302  000D4C                     u1010:
  3303  000D4C  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3304  000D4E                     u1028:
  3305  000D4E  5081               	movf	3969,w,c	;volatile
  3306  000D50  1805               	xorwf	??_MFRC522_Wr,w,c
  3307  000D52  0BFE               	andlw	-2
  3308  000D54  1805               	xorwf	??_MFRC522_Wr,w,c
  3309  000D56  6E81               	movwf	3969,c	;volatile
  3310                           
  3311                           ;RFIDlib.h: 313: PORTBbits.RB1 = 1;
  3312  000D58  8281               	bsf	3969,1,c	;volatile
  3313                           
  3314                           ;RFIDlib.h: 315: ucAddr <<= 1;
  3315  000D5A  90D8               	bcf	status,0,c
  3316  000D5C  3607               	rlcf	MFRC522_Wr@ucAddr,f,c
  3317  000D5E  3608               	rlcf	MFRC522_Wr@ucAddr+1,f,c
  3318                           
  3319                           ;RFIDlib.h: 317: PORTBbits.RB1 = 0;
  3320  000D60  9281               	bcf	3969,1,c	;volatile
  3321  000D62  0609               	decf	MFRC522_Wr@i,f,c
  3322  000D64  A0D8               	btfss	status,0,c
  3323  000D66  060A               	decf	MFRC522_Wr@i+1,f,c
  3324  000D68  D7E8               	goto	l1775
  3325  000D6A                     u1030:
  3326                           
  3327                           ;RFIDlib.h: 319: }
  3328                           ;RFIDlib.h: 325: for (i = 8; i > 0; i--)
  3329  000D6A  0E00               	movlw	0
  3330  000D6C  6E0A               	movwf	MFRC522_Wr@i+1,c
  3331  000D6E  0E08               	movlw	8
  3332  000D70  6E09               	movwf	MFRC522_Wr@i,c
  3333  000D72  D013               	goto	L4
  3334  000D74                     
  3335                           ;RFIDlib.h: 326: {
  3336                           ;RFIDlib.h: 328: PORTBbits.RB0 = ((value & 0x80) == 0x80);
  3337  000D74  AE03               	btfss	MFRC522_Wr@value,7,c
  3338  000D76  D003               	goto	u1050
  3339  000D78  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3340  000D7A  2A05               	incf	??_MFRC522_Wr& (0+255),f,c
  3341  000D7C  D001               	goto	u1068
  3342  000D7E                     u1050:
  3343  000D7E  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3344  000D80                     u1068:
  3345  000D80  5081               	movf	3969,w,c	;volatile
  3346  000D82  1805               	xorwf	??_MFRC522_Wr,w,c
  3347  000D84  0BFE               	andlw	-2
  3348  000D86  1805               	xorwf	??_MFRC522_Wr,w,c
  3349  000D88  6E81               	movwf	3969,c	;volatile
  3350                           
  3351                           ;RFIDlib.h: 330: PORTBbits.RB1 = 1;
  3352  000D8A  8281               	bsf	3969,1,c	;volatile
  3353                           
  3354                           ;RFIDlib.h: 332: value <<= 1;
  3355  000D8C  90D8               	bcf	status,0,c
  3356  000D8E  3603               	rlcf	MFRC522_Wr@value,f,c
  3357  000D90  3604               	rlcf	MFRC522_Wr@value+1,f,c
  3358                           
  3359                           ;RFIDlib.h: 334: PORTBbits.RB1 = 0;
  3360  000D92  9281               	bcf	3969,1,c	;volatile
  3361  000D94  0609               	decf	MFRC522_Wr@i,f,c
  3362  000D96  A0D8               	btfss	status,0,c
  3363  000D98  060A               	decf	MFRC522_Wr@i+1,f,c
  3364  000D9A                     L4:
  3365  000D9A  5009               	movf	MFRC522_Wr@i,w,c
  3366  000D9C  100A               	iorwf	MFRC522_Wr@i+1,w,c
  3367  000D9E  A4D8               	btfss	status,2,c
  3368  000DA0  D7E9               	goto	l52
  3369                           
  3370                           ;RFIDlib.h: 336: }
  3371                           ;RFIDlib.h: 340: PORTBbits.RB2 = 1;
  3372  000DA2  8481               	bsf	3969,2,c	;volatile
  3373                           
  3374                           ;RFIDlib.h: 342: PORTBbits.RB1 = 1;
  3375  000DA4  8281               	bsf	3969,1,c	;volatile
  3376  000DA6  0012               	return		;funcret
  3377  000DA8                     __end_of_MFRC522_Wr:
  3378                           	opt stack 0
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           prodh	equ	0xFF4
  3384                           prodl	equ	0xFF3
  3385                           indf0	equ	0xFEF
  3386                           fsr0h	equ	0xFEA
  3387                           fsr0l	equ	0xFE9
  3388                           wreg	equ	0xFE8
  3389                           indf2	equ	0xFDF
  3390                           postinc2	equ	0xFDE
  3391                           postdec2	equ	0xFDD
  3392                           fsr2h	equ	0xFDA
  3393                           fsr2l	equ	0xFD9
  3394                           status	equ	0xFD8
  3395                           
  3396 ;; *************** function _MFRC522_Rd *****************
  3397 ;; Defined at:
  3398 ;;		line 240 in file "../RFIDlib.h"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  Address         2    0[COMRAM] unsigned int 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  i               2    8[COMRAM] unsigned int 
  3403 ;;  ucResult        2    6[COMRAM] unsigned int 
  3404 ;;  ucAddr          2    4[COMRAM] unsigned int 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    0[COMRAM] unsigned int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3414 ;;      Params:         2       0       0       0       0       0       0       0       0
  3415 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3416 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3417 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3418 ;;Total ram usage:       10 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_MFRC522_Clear_Bit
  3424 ;;		_MFRC522_Set_Bit
  3425 ;;		_MFRC522_AntennaOn
  3426 ;;		_MFRC522_ToCard
  3427 ;;		_MFRC522_CRC
  3428 ;;		_MFRC522_Auth
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text24
  3433  000C74                     __ptext24:
  3434                           	opt stack 0
  3435  000C74                     _MFRC522_Rd:
  3436                           	opt stack 26
  3437                           
  3438                           ;RFIDlib.h: 243: unsigned int i, ucAddr;
  3439                           ;RFIDlib.h: 245: unsigned int ucResult = 0;
  3440                           
  3441                           ;incstack = 0
  3442  000C74  0E00               	movlw	0
  3443  000C76  6E08               	movwf	MFRC522_Rd@ucResult+1,c
  3444  000C78  0E00               	movlw	0
  3445  000C7A  6E07               	movwf	MFRC522_Rd@ucResult,c
  3446                           
  3447                           ;RFIDlib.h: 247: PORTBbits.RB1 = 0;
  3448  000C7C  9281               	bcf	3969,1,c	;volatile
  3449                           
  3450                           ;RFIDlib.h: 249: PORTBbits.RB2 = 0;
  3451  000C7E  9481               	bcf	3969,2,c	;volatile
  3452                           
  3453                           ;RFIDlib.h: 251: ucAddr = ((Address << 1)&0x7E) | 0x80;
  3454  000C80  C001  F003         	movff	MFRC522_Rd@Address,??_MFRC522_Rd
  3455  000C84  C002  F004         	movff	MFRC522_Rd@Address+1,??_MFRC522_Rd+1
  3456  000C88  90D8               	bcf	status,0,c
  3457  000C8A  3603               	rlcf	??_MFRC522_Rd,f,c
  3458  000C8C  3604               	rlcf	??_MFRC522_Rd+1,f,c
  3459  000C8E  0E7E               	movlw	126
  3460  000C90  1603               	andwf	??_MFRC522_Rd,f,c
  3461  000C92  0E00               	movlw	0
  3462  000C94  1604               	andwf	??_MFRC522_Rd+1,f,c
  3463  000C96  0E80               	movlw	128
  3464  000C98  1003               	iorwf	??_MFRC522_Rd,w,c
  3465  000C9A  6E05               	movwf	MFRC522_Rd@ucAddr,c
  3466  000C9C  5004               	movf	??_MFRC522_Rd+1,w,c
  3467  000C9E  6E06               	movwf	MFRC522_Rd@ucAddr+1,c
  3468                           
  3469                           ;RFIDlib.h: 255: for (i = 8; i > 0; i--)
  3470  000CA0  0E00               	movlw	0
  3471  000CA2  6E0A               	movwf	MFRC522_Rd@i+1,c
  3472  000CA4  0E08               	movlw	8
  3473  000CA6  6E09               	movwf	MFRC522_Rd@i,c
  3474  000CA8  5009               	movf	MFRC522_Rd@i,w,c
  3475  000CAA  100A               	iorwf	MFRC522_Rd@i+1,w,c
  3476  000CAC  B4D8               	btfsc	status,2,c
  3477  000CAE  D014               	goto	u960
  3478                           
  3479                           ;RFIDlib.h: 256: {
  3480                           ;RFIDlib.h: 258: PORTBbits.RB0 = ((ucAddr & 0x80) == 0x80);
  3481  000CB0  AE05               	btfss	MFRC522_Rd@ucAddr,7,c
  3482  000CB2  D003               	goto	u940
  3483  000CB4  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  3484  000CB6  2A03               	incf	??_MFRC522_Rd& (0+255),f,c
  3485  000CB8  D001               	goto	u958
  3486  000CBA                     u940:
  3487  000CBA  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  3488  000CBC                     u958:
  3489  000CBC  5081               	movf	3969,w,c	;volatile
  3490  000CBE  1803               	xorwf	??_MFRC522_Rd,w,c
  3491  000CC0  0BFE               	andlw	-2
  3492  000CC2  1803               	xorwf	??_MFRC522_Rd,w,c
  3493  000CC4  6E81               	movwf	3969,c	;volatile
  3494                           
  3495                           ;RFIDlib.h: 260: PORTBbits.RB1 = 1;
  3496  000CC6  8281               	bsf	3969,1,c	;volatile
  3497                           
  3498                           ;RFIDlib.h: 262: ucAddr <<= 1;
  3499  000CC8  90D8               	bcf	status,0,c
  3500  000CCA  3605               	rlcf	MFRC522_Rd@ucAddr,f,c
  3501  000CCC  3606               	rlcf	MFRC522_Rd@ucAddr+1,f,c
  3502                           
  3503                           ;RFIDlib.h: 264: PORTBbits.RB1 = 0;
  3504  000CCE  9281               	bcf	3969,1,c	;volatile
  3505  000CD0  0609               	decf	MFRC522_Rd@i,f,c
  3506  000CD2  A0D8               	btfss	status,0,c
  3507  000CD4  060A               	decf	MFRC522_Rd@i+1,f,c
  3508  000CD6  D7E8               	goto	L5
  3509  000CD8                     u960:
  3510                           
  3511                           ;RFIDlib.h: 266: }
  3512                           ;RFIDlib.h: 270: for (i = 8; i > 0; i--)
  3513  000CD8  0E00               	movlw	0
  3514  000CDA  6E0A               	movwf	MFRC522_Rd@i+1,c
  3515  000CDC  0E08               	movlw	8
  3516  000CDE  6E09               	movwf	MFRC522_Rd@i,c
  3517  000CE0  D010               	goto	L6
  3518  000CE2                     l45:
  3519                           
  3520                           ;RFIDlib.h: 271: {
  3521                           ;RFIDlib.h: 273: PORTBbits.RB1 = 1;
  3522  000CE2  8281               	bsf	3969,1,c	;volatile
  3523                           
  3524                           ;RFIDlib.h: 275: ucResult <<= 1;
  3525  000CE4  90D8               	bcf	status,0,c
  3526  000CE6  3607               	rlcf	MFRC522_Rd@ucResult,f,c
  3527  000CE8  3608               	rlcf	MFRC522_Rd@ucResult+1,f,c
  3528                           
  3529                           ;RFIDlib.h: 277: ucResult |= (int) PORTCbits.RC7;
  3530  000CEA  AE82               	btfss	3970,7,c	;volatile
  3531  000CEC  D003               	goto	u980
  3532  000CEE  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  3533  000CF0  2A03               	incf	??_MFRC522_Rd& (0+255),f,c
  3534  000CF2  D001               	goto	u988
  3535  000CF4                     u980:
  3536  000CF4  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  3537  000CF6                     u988:
  3538  000CF6  5003               	movf	??_MFRC522_Rd,w,c
  3539  000CF8  1207               	iorwf	MFRC522_Rd@ucResult,f,c
  3540                           
  3541                           ;RFIDlib.h: 279: PORTBbits.RB1 = 0;
  3542  000CFA  9281               	bcf	3969,1,c	;volatile
  3543  000CFC  0609               	decf	MFRC522_Rd@i,f,c
  3544  000CFE  A0D8               	btfss	status,0,c
  3545  000D00  060A               	decf	MFRC522_Rd@i+1,f,c
  3546  000D02                     L6:
  3547  000D02  5009               	movf	MFRC522_Rd@i,w,c
  3548  000D04  100A               	iorwf	MFRC522_Rd@i+1,w,c
  3549  000D06  A4D8               	btfss	status,2,c
  3550  000D08  D7EC               	goto	l45
  3551                           
  3552                           ;RFIDlib.h: 281: }
  3553                           ;RFIDlib.h: 287: PORTBbits.RB2 = 1;
  3554  000D0A  8481               	bsf	3969,2,c	;volatile
  3555                           
  3556                           ;RFIDlib.h: 289: PORTBbits.RB1 = 1;
  3557  000D0C  8281               	bsf	3969,1,c	;volatile
  3558                           
  3559                           ;RFIDlib.h: 291: return ucResult;
  3560  000D0E  C007  F001         	movff	MFRC522_Rd@ucResult,?_MFRC522_Rd
  3561  000D12  C008  F002         	movff	MFRC522_Rd@ucResult+1,?_MFRC522_Rd+1
  3562  000D16  0012               	return		;funcret
  3563  000D18                     __end_of_MFRC522_Rd:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           indf0	equ	0xFEF
  3572                           fsr0h	equ	0xFEA
  3573                           fsr0l	equ	0xFE9
  3574                           wreg	equ	0xFE8
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           indf0	equ	0xFEF
  3588                           fsr0h	equ	0xFEA
  3589                           fsr0l	equ	0xFE9
  3590                           wreg	equ	0xFE8
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           postdec2	equ	0xFDD
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598                           	psect	rparam
  3599  0000                     tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           indf0	equ	0xFEF
  3606                           fsr0h	equ	0xFEA
  3607                           fsr0l	equ	0xFE9
  3608                           wreg	equ	0xFE8
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           postdec2	equ	0xFDD
  3612                           fsr2h	equ	0xFDA
  3613                           fsr2l	equ	0xFD9
  3614                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     68      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[3]), STR_1(CODE[10]), 

    traduz@txt	PTR unsigned char  size(2) Largest target is 3
		 -> main@buffer(COMRAM[3]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 10
		 -> main@UID(COMRAM[10]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(2) Largest target is 2
		 -> main@TagType(COMRAM[2]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 10
		 -> main@UID(COMRAM[10]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 2
		 -> main@TagType(COMRAM[2]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 18
		 -> main@UID(COMRAM[10]), main@TagType(COMRAM[2]), MFRC522_Write@buff(COMRAM[18]), MFRC522_Auth@buff(COMRAM[12]), 
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Read@unLen(COMRAM[2]), MFRC522_Write@recvBits(COMRAM[2]), MFRC522_Auth@recvBits(COMRAM[2]), 
		 -> MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 18
		 -> main@UID(COMRAM[10]), main@TagType(COMRAM[2]), MFRC522_Write@buff(COMRAM[18]), MFRC522_Auth@buff(COMRAM[12]), 
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_MFRC522_ReadCardSerial
    _putsXLCD->_WriteDataXLCD
    _inic_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Init->_MFRC522_AntennaOn
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Set_Bit->_MFRC522_Wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   54077
                                             48 COMRAM    20    20      0
                           _BusyXLCD
                       _MFRC522_Init
             _MFRC522_ReadCardSerial
                     _MFRC522_isCard
                            _Mydelay
                       _SetDDRamAddr
                          _inic_XLCD
                           _putsXLCD
                             _traduz
 ---------------------------------------------------------------------------------
 (1) _traduz                                              12     8      4     444
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     227
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _inic_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mydelay                                              5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_isCard                                       2     0      2   18712
                                             43 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2   18614
                                             37 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   23313
                                             45 COMRAM     3     1      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   23170
                                             37 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7   15611
                                             18 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    8     7      1    4442
                                             10 COMRAM     8     7      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0   10780
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    2745
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    2     2      0    5290
                                             14 COMRAM     2     2      0
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      4     3      1    4214
                                             10 COMRAM     4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                          10     6      4    2745
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                          10     8      2    1075
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _MFRC522_Init
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
       _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Wr
   _MFRC522_isCard
     _MFRC522_Request
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Wr
   _Mydelay
   _SetDDRamAddr
     _DelayFor18TCY
   _inic_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _traduz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     44      44       1       71.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 22:17:47 2018

                    MFRC522_Rd@i 0009                      MFRC522_Wr@i 0009  
                             l52 0D74                               l45 0CE2  
                             l80 08B0                               l81 088A  
                             l90 0954                               l83 08E6  
                             l75 082E                               l92 09C6  
                             l84 08EA                               l76 081C  
                             l93 09DA                               l77 083C  
                             l94 09E4                               l78 0824  
                             l95 09EE                               l96 0A18  
                             l89 0A3C                               l97 09F8  
                             l99 0A40                      __CFG_BORV$1 000000  
                    main@TagType 0041                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l103 0EFA  
                            l223 0AC6                              l160 0BCC  
                            l225 0AE8                              l217 0A68  
                            l219 0A7E                              l164 11C2  
                            l252 1090                              l181 10F2  
                            l158 0B9C                              l182 10E0  
                            l174 0E40                              l191 10BA  
                            l176 0E6C                              l169 1162  
                            l273 0C22                              l282 0C52  
                            l194 10CA                              l290 0F32  
                            l267 0C08                              l291 0F00  
                            l276 0C32                              l188 10AA  
                            l285 0C62                              l542 11C8  
                            l279 0C42                     __CFG_CPB$OFF 000000  
                            _RA0 007C00                              u305 0F70  
                            u370 0C12                     __CFG_CPD$OFF 000000  
                            u940 0CBA                              u960 0CD8  
                            u980 0CF4                              u958 0CBC  
                            u988 0CF6                     __CFG_BOR$OFF 000000  
          __size_of_WriteCmdXLCD 003E                              wreg 000FE8  
                 ??_MFRC522_Init 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l2201 0AD8  
                           l2185 0A7E                             l1933 0B94  
                           l1775 0D3A                             STR_1 0801  
                           u1010 0D4C                             u1030 0D6A  
                           u1120 0914                             u1050 0D7E  
                           u1028 0D4E                             u1220 0EF6  
                           u1250 0BB4                             u1068 0D80  
                           u1335 0E52                             u1370 0F2A  
                           u1380 0F52                             u1377 0F20  
                           u1650 0AAA                             u1707 11E2  
                           u1387 0F48                             u1717 11CE  
                           u1727 11FA                             u1737 10E6  
                           u1665 0AAC                             _main 0A44  
          MFRC522_AntiColl@unLen 002A                             fsr0h 000FEA  
                           indf0 000FEF                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr2l 000FD9           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                    __CFG_IESO$OFF 000000  
               _MFRC522_AntiColl 0B28                     ___param_bank 000000  
                ??_MFRC522_Reset 000B                     _WriteCmdXLCD 102C  
                __end_of_Mydelay 1108                    __CFG_PLLDIV$1 000000  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
        ?_MFRC522_ReadCardSerial 002E                            _PORTD 000F83  
                  __CFG_USBDIV$1 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95            __size_of_Delay10KTCYx 0016  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000              __size_of_MFRC522_Rd 00A4  
            __size_of_MFRC522_Wr 0090                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
         MFRC522_AntiColl@serNum 0026                            main@i 0043  
                          tablat 000FF5                _MFRC522_Clear_Bit 0FAC  
                          status 000FD8               ?_MFRC522_Clear_Bit 000B  
                 __CFG_ICPRT$OFF 000000                _MFRC522_AntennaOn 118A  
                 __CFG_MCLRE$OFF 000000                  __initialization 11EE  
                   __end_of_main 0B28               ?_MFRC522_AntennaOn 0001  
            ??_MFRC522_Clear_Bit 000C                 __end_of_BusyXLCD 10A4  
                   traduz@numero 0001        MFRC522_ReadCardSerial@str 002E  
                   _Delay10KTCYx 11C6            __size_of_DelayPORXLCD 0012  
 __end_of_MFRC522_ReadCardSerial 1166                 ??_MFRC522_ToCard 001A  
       __size_of_MFRC522_Set_Bit 0032                   ??_SetDDRamAddr 0001  
               __end_of_OpenXLCD 0C74         __size_of_MFRC522_Request 005E  
                         ??_main 0031              ??_MFRC522_AntennaOn 000F  
                  __activetblptr 000002                    _WriteDataXLCD 0FEE  
                MFRC522_ToCard@i 0023                  MFRC522_ToCard@n 0025  
               ??_MFRC522_isCard 002E            MFRC522_ToCard@backLen 0018  
             MFRC522_Rd@ucResult 0007                  __CFG_CCP2MX$OFF 000000  
                         _ADCON1 000FC1                  MFRC522_Wr@value 0003  
      __end_of_MFRC522_Clear_Bit 0FEE            MFRC522_ToCard@_status 001F  
          MFRC522_ToCard@command 0022            MFRC522_ToCard@sendLen 0015  
                         _OSCCON 000FD3            MFRC522_ToCard@waitIRq 001E  
      __end_of_MFRC522_AntennaOn 11AA                     _DelayPORXLCD 11DC  
                 __CFG_XINST$OFF 000000                        ??_Mydelay 0003  
           __end_of_MFRC522_Init 0E2E          MFRC522_AntiColl@_status 002C  
                         _traduz 0E2E                   ?_WriteDataXLCD 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               __end_of_putsXLCD 0F5A                       __accesstop 0060  
        __end_of__initialization 11EE                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001           MFRC522_Request@TagType 0026  
                   ??_MFRC522_Rd 0003                     ??_MFRC522_Wr 0005  
          MFRC522_isCard@TagType 002C                   __pcstackCOMRAM 0001  
         MFRC522_Request@_status 0029                 MFRC522_Rd@ucAddr 0005  
         MFRC522_Request@reqMode 0028         __end_of_MFRC522_AntiColl 0BD0  
              ??_MFRC522_Set_Bit 000C               __end_of_MFRC522_Rd 0D18  
             __end_of_MFRC522_Wr 0DA8                ??_MFRC522_Request 0028  
     __size_of_MFRC522_Clear_Bit 0042           __size_of_DelayFor18TCY 0008  
             __size_of_inic_XLCD 0032                        ?_BusyXLCD 0001  
                WriteCmdXLCD@cmd 0001             __end_of_SetDDRamAddr 0FAC  
         MFRC522_ToCard@backData 0016       __size_of_MFRC522_AntennaOn 0020  
                      ?_OpenXLCD 0001               MFRC522_Set_Bit@tmp 000C  
              WriteDataXLCD@data 0001                 MFRC522_Wr@ucAddr 0007  
                ??_WriteDataXLCD 0001                          ?_traduz 0001  
         MFRC522_ToCard@lastBits 0020           MFRC522_ToCard@sendData 0013  
                     ??_BusyXLCD 0001                  __CFG_VREGEN$OFF 000000  
                     ??_OpenXLCD 0005            __size_of_MFRC522_Init 0086  
                        __Hparam 0000                          __Lparam 0000  
                        _Mydelay 10D6             MFRC522_Clear_Bit@tmp 0010  
                  _DelayFor18TCY 11F8                        ?_putsXLCD 0002  
                   __psmallconst 0800                __end_of_inic_XLCD 10D6  
                __CFG_STVREN$OFF 000000                          __pcinit 11EE  
          __end_of_MFRC522_Reset 118A                          __ramtop 0800  
                        __ptext0 0A44                          __ptext1 0E2E  
                        __ptext2 0EFE                          __ptext3 0FEE  
                        __ptext4 10A4                          __ptext5 0BD0  
                        __ptext6 102C                          __ptext7 0F5A  
                        __ptext8 11DC                          __ptext9 11C6  
                __size_of_traduz 0072                          main@UID 0032  
                        main@var 003F                     _MFRC522_Init 0DA8  
           end_of_initialization 11EE                    __Lmediumconst 0000  
  MFRC522_ReadCardSerial@_status 0030                   ?_DelayFor18TCY 0001  
                        postdec2 000FDD                          traduz@a 0008  
                        traduz@b 0009                          postinc2 000FDE  
                     ??_putsXLCD 0004                        _PORTBbits 000F81  
                      _PORTCbits 000F82                        _TRISDbits 000F95  
          __size_of_SetDDRamAddr 0052                       main@buffer 003C  
              MFRC522_Rd@Address 0001                  _MFRC522_Set_Bit 1108  
        MFRC522_Request@backBits 002A              MFRC522_ToCard@irqEn 0021  
                _MFRC522_Request 0EA0                     _SetDDRamAddr 0F5A  
                 __end_of_traduz 0EA0               SetDDRamAddr@DDaddr 0004  
            start_initialization 11EE                ?_MFRC522_AntiColl 0026  
              MFRC522_AntiColl@i 002D          __size_of_MFRC522_ToCard 0238  
             ??_MFRC522_AntiColl 0028          __size_of_MFRC522_isCard 001C  
              __size_of_BusyXLCD 003A                  ??_DelayFor18TCY 0001  
       ??_MFRC522_ReadCardSerial 0030                __size_of_OpenXLCD 00A4  
                  ?_WriteCmdXLCD 0001                 __CFG_LPT1OSC$OFF 000000  
                       ??_traduz 0005                MFRC522_Wr@Address 0001  
           MFRC522_AntennaOn@stt 000F          __end_of_MFRC522_Set_Bit 113A  
                 putsXLCD@buffer 0002          __end_of_MFRC522_Request 0EFE  
            MFRC522_Set_Bit@addr 000E                         ?_Mydelay 0001  
            MFRC522_Set_Bit@mask 000B                   ??_WriteCmdXLCD 0001  
                  ?_Delay10KTCYx 0001                __size_of_putsXLCD 005C  
          __end_of_WriteDataXLCD 102C                      __smallconst 0800  
                      _inic_XLCD 10A4                         _LATDbits 000F8C  
                  ?_DelayPORXLCD 0001                  OpenXLCD@lcdtype 0005  
__size_of_MFRC522_ReadCardSerial 002C                 __CFG_WDTPS$32768 000000  
                 ??_Delay10KTCYx 0001                     Mydelay@tempo 0001  
                     ?_inic_XLCD 0001                 Delay10KTCYx@unit 0002  
                 _MFRC522_ToCard 080C                         _BusyXLCD 106A  
                 _MFRC522_isCard 11AA           __size_of_MFRC522_Reset 0024  
                 ??_DelayPORXLCD 0001                         _OpenXLCD 0BD0  
               ?_MFRC522_Set_Bit 000B                         Mydelay@i 0004  
                       __Hrparam 0000            MFRC522_Clear_Bit@addr 0012  
               ?_MFRC522_Request 0026            MFRC522_Clear_Bit@mask 000B  
                       __Lrparam 0000                 __size_of_Mydelay 0032  
         __end_of_MFRC522_ToCard 0A44           _MFRC522_ReadCardSerial 113A  
                       __ptext10 106A                         __ptext11 11F8  
                       __ptext20 1166                         __ptext12 10D6  
                       __ptext21 118A                         __ptext13 11AA  
                       __ptext22 1108                         __ptext14 0EA0  
                       __ptext23 0D18                         __ptext15 113A  
                       __ptext24 0C74                         __ptext16 0B28  
                       __ptext17 080C                         __ptext18 0FAC  
                       __ptext19 0DA8           __end_of_MFRC522_isCard 11C6  
           __end_of_WriteCmdXLCD 106A      MFRC522_AntiColl@serNumCheck 0029  
                  __size_of_main 00E4                       _MFRC522_Rd 0C74  
                     _MFRC522_Wr 0D18        __size_of_MFRC522_AntiColl 00A8  
                       _putsXLCD 0EFE                    _MFRC522_Reset 1166  
          __CFG_CPUDIV$OSC1_PLL2 000000                      ??_inic_XLCD 0006  
                      traduz@txt 0003                  ?_MFRC522_ToCard 0013  
                ?_MFRC522_isCard 002C             __end_of_Delay10KTCYx 11DC  
          __end_of_DelayFor18TCY 1200                   ?_MFRC522_Reset 0001  
            __CFG_FOSC$INTOSC_HS 000000             __end_of_DelayPORXLCD 11EE  
                  ?_MFRC522_Init 0001                      ?_MFRC522_Rd 0001  
                    ?_MFRC522_Wr 0001  
