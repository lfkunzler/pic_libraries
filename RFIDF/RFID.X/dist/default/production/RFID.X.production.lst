

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 24 23:01:08 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0013CE                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for main@F4143
    82  0013CE  14                 	db	20
    83  0013CF  B5                 	db	181
    84  0013D0  CE                 	db	206
    85  0013D1  FC                 	db	252
    86  0013D2  00                 	db	0
    87                           
    88                           	psect	idataBANK0
    89  0013C8                     __pidataBANK0:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _key
    93  0013C8  FF                 	db	255
    94  0013C9  FF                 	db	255
    95  0013CA  FF                 	db	255
    96  0013CB  FF                 	db	255
    97  0013CC  FF                 	db	255
    98  0013CD  FF                 	db	255
    99  0000                     _TRISDbits	set	3989
   100  0000                     _PORTD	set	3971
   101  0000                     _LATDbits	set	3980
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISC	set	3988
   104  0000                     _TRISD	set	3989
   105  0000                     _TRISA	set	3986
   106  0000                     _OSCCON	set	4051
   107  0000                     _ADCON1	set	4033
   108  0000                     _PORTCbits	set	3970
   109  0000                     _PORTBbits	set	3969
   110  0000                     _RA0	set	31744
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt stack 0
   115  000800  00                 	db	0
   116  000801                     STR_1:
   117  000801  49                 	db	73	;'I'
   118  000802  44                 	db	68	;'D'
   119  000803  20                 	db	32
   120  000804  44                 	db	68	;'D'
   121  000805  41                 	db	65	;'A'
   122  000806  20                 	db	32
   123  000807  54                 	db	84	;'T'
   124  000808  41                 	db	65	;'A'
   125  000809  47                 	db	71	;'G'
   126  00080A  00                 	db	0
   127                           
   128                           ; #config settings
   129  00080B  00                 	db	0	; dummy byte at the end
   130  0000                     
   131                           	psect	cinit
   132  001134                     __pcinit:
   133                           	opt stack 0
   134  001134                     start_initialization:
   135                           	opt stack 0
   136  001134                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Initialize objects allocated to BANK0 (6 bytes)
   140                           ; load TBLPTR registers with __pidataBANK0
   141  001134  0EC8               	movlw	low __pidataBANK0
   142  001136  6EF6               	movwf	tblptrl,c
   143  001138  0E13               	movlw	high __pidataBANK0
   144  00113A  6EF7               	movwf	tblptrh,c
   145  00113C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   146  00113E  6EF8               	movwf	tblptru,c
   147  001140  EE00  F060         	lfsr	0,__pdataBANK0
   148  001144  EE10 F006          	lfsr	1,6
   149  001148                     copy_data0:
   150  001148  0009               	tblrd		*+
   151  00114A  CFF5 FFEE          	movff	tablat,postinc0
   152  00114E  50E5               	movf	postdec1,w,c
   153  001150  50E1               	movf	fsr1l,w,c
   154  001152  E1FA               	bnz	copy_data0
   155                           
   156                           ; Initialize objects allocated to COMRAM (5 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158  001154  0ECE               	movlw	low __pidataCOMRAM
   159  001156  6EF6               	movwf	tblptrl,c
   160  001158  0E13               	movlw	high __pidataCOMRAM
   161  00115A  6EF7               	movwf	tblptrh,c
   162  00115C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163  00115E  6EF8               	movwf	tblptru,c
   164  001160  EE00  F058         	lfsr	0,__pdataCOMRAM
   165  001164  EE10 F005          	lfsr	1,5
   166  001168                     copy_data1:
   167  001168  0009               	tblrd		*+
   168  00116A  CFF5 FFEE          	movff	tablat,postinc0
   169  00116E  50E5               	movf	postdec1,w,c
   170  001170  50E1               	movf	fsr1l,w,c
   171  001172  E1FA               	bnz	copy_data1
   172  001174                     end_of_initialization:
   173                           	opt stack 0
   174  001174                     __end_of__initialization:
   175                           	opt stack 0
   176  001174  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  001176  6EF8               	movwf	tblptru,c
   178  001178  0100               	movlb	0
   179  00117A  EF22  F005         	goto	_main	;jump to C main() function
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           postdec1	equ	0xFE5
   186                           fsr1l	equ	0xFE1
   187                           
   188                           	psect	dataCOMRAM
   189  000058                     __pdataCOMRAM:
   190                           	opt stack 0
   191  000058                     main@F4143:
   192                           	opt stack 0
   193  000058                     	ds	5
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	dataBANK0
   203  000060                     __pdataBANK0:
   204                           	opt stack 0
   205  000060                     _key:
   206                           	opt stack 0
   207  000060                     	ds	6
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           postdec1	equ	0xFE5
   214                           fsr1l	equ	0xFE1
   215                           
   216                           	psect	cstackCOMRAM
   217  000001                     __pcstackCOMRAM:
   218                           	opt stack 0
   219  000001                     ??_SetDDRamAddr:
   220  000001                     ??_Delay10KTCYx:
   221  000001                     ??_DelayPORXLCD:
   222  000001                     ?_MFRC522_Rd:
   223                           	opt stack 0
   224  000001                     ?___awdiv:
   225                           	opt stack 0
   226  000001                     ?___awmod:
   227                           	opt stack 0
   228  000001                     WriteCmdXLCD@cmd:
   229                           	opt stack 0
   230  000001                     WriteDataXLCD@data:
   231                           	opt stack 0
   232  000001                     MFRC522_Rd@Address:
   233                           	opt stack 0
   234  000001                     MFRC522_Wr@Address:
   235                           	opt stack 0
   236  000001                     Mydelay@tempo:
   237                           	opt stack 0
   238  000001                     ___awdiv@dividend:
   239                           	opt stack 0
   240  000001                     ___awmod@dividend:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x0
   244  000001                     	ds	1
   245  000002                     Delay10KTCYx@unit:
   246                           	opt stack 0
   247  000002                     putsXLCD@buffer:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x1
   251  000002                     	ds	1
   252  000003                     ??_MFRC522_Rd:
   253  000003                     ??_Mydelay:
   254  000003                     MFRC522_Wr@value:
   255                           	opt stack 0
   256  000003                     ___awdiv@divisor:
   257                           	opt stack 0
   258  000003                     ___awmod@divisor:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262  000003                     	ds	1
   263  000004                     SetDDRamAddr@DDaddr:
   264                           	opt stack 0
   265  000004                     Mydelay@i:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x3
   269  000004                     	ds	1
   270  000005                     ??_MFRC522_Wr:
   271  000005                     OpenXLCD@lcdtype:
   272                           	opt stack 0
   273  000005                     ___awdiv@counter:
   274                           	opt stack 0
   275  000005                     ___awmod@counter:
   276                           	opt stack 0
   277  000005                     MFRC522_Rd@ucAddr:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x4
   281  000005                     	ds	1
   282  000006                     ___awdiv@sign:
   283                           	opt stack 0
   284  000006                     ___awmod@sign:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x5
   288  000006                     	ds	1
   289  000007                     MFRC522_Rd@ucResult:
   290                           	opt stack 0
   291  000007                     MFRC522_Wr@ucAddr:
   292                           	opt stack 0
   293  000007                     ___awdiv@quotient:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x6
   297  000007                     	ds	2
   298  000009                     MFRC522_Rd@i:
   299                           	opt stack 0
   300  000009                     MFRC522_Wr@i:
   301                           	opt stack 0
   302  000009                     traduz@numero:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x8
   306  000009                     	ds	2
   307  00000B                     MFRC522_Clear_Bit@mask:
   308                           	opt stack 0
   309  00000B                     MFRC522_Set_Bit@mask:
   310                           	opt stack 0
   311  00000B                     traduz@txt:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xA
   315  00000B                     	ds	1
   316  00000C                     ??_MFRC522_Clear_Bit:
   317  00000C                     MFRC522_Set_Bit@tmp:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0xB
   321  00000C                     	ds	1
   322  00000D                     traduz@a:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0xC
   326  00000D                     	ds	1
   327  00000E                     MFRC522_Set_Bit@addr:
   328                           	opt stack 0
   329  00000E                     traduz@b:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xD
   333  00000E                     	ds	1
   334  00000F                     traduz@c:
   335                           	opt stack 0
   336  00000F                     MFRC522_AntennaOn@stt:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0xE
   340  00000F                     	ds	1
   341  000010                     MFRC522_Clear_Bit@tmp:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0xF
   345  000010                     	ds	1
   346  000011                     
   347                           ; 1 bytes @ 0x10
   348  000011                     	ds	1
   349  000012                     MFRC522_Clear_Bit@addr:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x11
   353  000012                     	ds	1
   354  000013                     MFRC522_ToCard@sendData:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x12
   358  000013                     	ds	2
   359  000015                     MFRC522_ToCard@sendLen:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x14
   363  000015                     	ds	1
   364  000016                     MFRC522_ToCard@backData:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x15
   368  000016                     	ds	2
   369  000018                     MFRC522_ToCard@backLen:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x17
   373  000018                     	ds	2
   374  00001A                     ??_MFRC522_ToCard:
   375                           
   376                           ; 1 bytes @ 0x19
   377  00001A                     	ds	4
   378  00001E                     MFRC522_ToCard@waitIRq:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1D
   382  00001E                     	ds	1
   383  00001F                     MFRC522_ToCard@_status:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x1E
   387  00001F                     	ds	1
   388  000020                     MFRC522_ToCard@lastBits:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x1F
   392  000020                     	ds	1
   393  000021                     MFRC522_ToCard@irqEn:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x20
   397  000021                     	ds	1
   398  000022                     MFRC522_ToCard@command:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x21
   402  000022                     	ds	1
   403  000023                     MFRC522_ToCard@i:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x22
   407  000023                     	ds	2
   408  000025                     MFRC522_ToCard@n:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x24
   412  000025                     	ds	1
   413  000026                     MFRC522_Request@TagType:
   414                           	opt stack 0
   415  000026                     MFRC522_AntiColl@serNum:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x25
   419  000026                     	ds	2
   420  000028                     MFRC522_Request@reqMode:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x27
   424  000028                     	ds	1
   425  000029                     MFRC522_Request@_status:
   426                           	opt stack 0
   427  000029                     MFRC522_AntiColl@serNumCheck:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x28
   431  000029                     	ds	1
   432  00002A                     MFRC522_Request@backBits:
   433                           	opt stack 0
   434  00002A                     MFRC522_AntiColl@unLen:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x29
   438  00002A                     	ds	2
   439  00002C                     MFRC522_AntiColl@_status:
   440                           	opt stack 0
   441  00002C                     MFRC522_isCard@TagType:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x2B
   445  00002C                     	ds	1
   446  00002D                     MFRC522_AntiColl@i:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x2C
   450  00002D                     	ds	1
   451  00002E                     MFRC522_ReadCardSerial@str:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x2D
   455  00002E                     	ds	2
   456  000030                     MFRC522_ReadCardSerial@_status:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x2F
   460  000030                     	ds	1
   461  000031                     ??_main:
   462                           
   463                           ; 1 bytes @ 0x30
   464  000031                     	ds	1
   465  000032                     main@vetor:
   466                           	opt stack 0
   467                           
   468                           ; 5 bytes @ 0x31
   469  000032                     	ds	5
   470  000037                     main@t:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x36
   474  000037                     	ds	2
   475  000039                     main@k:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x38
   479  000039                     	ds	2
   480  00003B                     main@i:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x3A
   484  00003B                     	ds	2
   485  00003D                     main@cont:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x3C
   489  00003D                     	ds	2
   490  00003F                     main@valor:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x3E
   494  00003F                     	ds	2
   495  000041                     main@j:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x40
   499  000041                     	ds	2
   500  000043                     main@UID:
   501                           	opt stack 0
   502                           
   503                           ; 10 bytes @ 0x42
   504  000043                     	ds	10
   505  00004D                     main@buffer:
   506                           	opt stack 0
   507                           
   508                           ; 5 bytes @ 0x4C
   509  00004D                     	ds	5
   510  000052                     main@var:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x51
   514  000052                     	ds	2
   515  000054                     main@TagType:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x53
   519  000054                     	ds	2
   520  000056                     main@i_340:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x55
   524  000056                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 78 in file "../main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  i               2   85[COMRAM] int 
   543 ;;  var             2   81[COMRAM] int 
   544 ;;  UID            10   66[COMRAM] unsigned char [10]
   545 ;;  buffer          5   76[COMRAM] unsigned char [5]
   546 ;;  vetor           5   49[COMRAM] unsigned char [5]
   547 ;;  TagType         2   83[COMRAM] unsigned int 
   548 ;;  j               2   64[COMRAM] int 
   549 ;;  valor           2   62[COMRAM] int 
   550 ;;  cont            2   60[COMRAM] int 
   551 ;;  i               2   58[COMRAM] int 
   552 ;;  k               2   56[COMRAM] int 
   553 ;;  t               2   54[COMRAM] int 
   554 ;;  size            1    0        unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  2  213[None  ] int 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         0       0       0       0       0       0       0       0       0
   565 ;;      Locals:        38       0       0       0       0       0       0       0       0
   566 ;;      Temps:          1       0       0       0       0       0       0       0       0
   567 ;;      Totals:        39       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:       39 bytes
   569 ;; Hardware stack levels required when called:    5
   570 ;; This function calls:
   571 ;;		_BusyXLCD
   572 ;;		_MFRC522_Init
   573 ;;		_MFRC522_ReadCardSerial
   574 ;;		_MFRC522_isCard
   575 ;;		_Mydelay
   576 ;;		_SetDDRamAddr
   577 ;;		_inic_XLCD
   578 ;;		_putsXLCD
   579 ;;		_traduz
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text0
   586  000A44                     __ptext0:
   587                           	opt stack 0
   588  000A44                     _main:
   589                           	opt stack 26
   590                           
   591                           ;main.c: 79: ADCON1 = 0x0F;
   592                           
   593                           ;incstack = 0
   594  000A44  0E0F               	movlw	15
   595  000A46  6EC1               	movwf	4033,c	;volatile
   596                           
   597                           ;main.c: 80: OSCCON = 0b01110111;
   598  000A48  0E77               	movlw	119
   599  000A4A  6ED3               	movwf	4051,c	;volatile
   600                           
   601                           ;main.c: 81: TRISA = 0x00;
   602  000A4C  0E00               	movlw	0
   603  000A4E  6E92               	movwf	3986,c	;volatile
   604                           
   605                           ;main.c: 82: TRISD = 0b00000010;
   606  000A50  0E02               	movlw	2
   607  000A52  6E95               	movwf	3989,c	;volatile
   608                           
   609                           ;main.c: 83: TRISC = 0b11111111;
   610  000A54  6894               	setf	3988,c	;volatile
   611                           
   612                           ;main.c: 84: TRISB = 0b00000000;
   613  000A56  0E00               	movlw	0
   614  000A58  6E93               	movwf	3987,c	;volatile
   615                           
   616                           ;main.c: 87: MFRC522_Init();
   617  000A5A  EC57  F007         	call	_MFRC522_Init	;wreg free
   618                           
   619                           ;main.c: 88: inic_XLCD();
   620  000A5E  EC3B  F009         	call	_inic_XLCD	;wreg free
   621                           
   622                           ;main.c: 89: char UID[10];
   623                           ;main.c: 90: char buffer[5];
   624                           ;main.c: 92: unsigned TagType;
   625                           ;main.c: 93: char size;
   626                           ;main.c: 94: int t = 0, k = 1, i = 0, cont = 0, valor = 0, j = 0;
   627  000A62  0E00               	movlw	0
   628  000A64  6E38               	movwf	main@t+1,c
   629  000A66  0E00               	movlw	0
   630  000A68  6E37               	movwf	main@t,c
   631  000A6A  0E00               	movlw	0
   632  000A6C  6E3A               	movwf	main@k+1,c
   633  000A6E  0E01               	movlw	1
   634  000A70  6E39               	movwf	main@k,c
   635  000A72  0E00               	movlw	0
   636  000A74  6E3C               	movwf	main@i+1,c
   637  000A76  0E00               	movlw	0
   638  000A78  6E3B               	movwf	main@i,c
   639  000A7A  0E00               	movlw	0
   640  000A7C  6E3E               	movwf	main@cont+1,c
   641  000A7E  0E00               	movlw	0
   642  000A80  6E3D               	movwf	main@cont,c
   643  000A82  0E00               	movlw	0
   644  000A84  6E40               	movwf	main@valor+1,c
   645  000A86  0E00               	movlw	0
   646  000A88  6E3F               	movwf	main@valor,c
   647  000A8A  0E00               	movlw	0
   648  000A8C  6E42               	movwf	main@j+1,c
   649  000A8E  0E00               	movlw	0
   650  000A90  6E41               	movwf	main@j,c
   651                           
   652                           ;main.c: 99: SetDDRamAddr(0x03);
   653  000A92  0E03               	movlw	3
   654  000A94  EC71  F008         	call	_SetDDRamAddr
   655  000A98  EC1E  F009         	call	_BusyXLCD	;wreg free
   656  000A9C  0900               	iorlw	0
   657  000A9E  A4D8               	btfss	status,2,c
   658  000AA0  D7FB               	goto	l215
   659                           
   660                           ;main.c: 101: putsXLCD("ID DA TAG");
   661  000AA2  0E01               	movlw	low STR_1
   662  000AA4  6E02               	movwf	putsXLCD@buffer,c
   663  000AA6  0E08               	movlw	high STR_1
   664  000AA8  6E03               	movwf	putsXLCD@buffer+1,c
   665  000AAA  EC43  F008         	call	_putsXLCD	;wreg free
   666                           
   667                           ;main.c: 104: char vetor[5] = {0x14,0xB5,0xCE, 0xFC};
   668  000AAE  EE20  F058         	lfsr	2,main@F4143
   669  000AB2  EE10  F032         	lfsr	1,main@vetor
   670  000AB6  0E04               	movlw	4
   671  000AB8                     u1821:
   672  000AB8  CFDB FFE3          	movff	plusw2,plusw1
   673  000ABC  06E8               	decf	wreg,f,c
   674  000ABE  E2FC               	bc	u1821
   675  000AC0                     l2345:
   676                           
   677                           ;main.c: 113: if (MFRC522_isCard(&TagType)) {
   678  000AC0  0E54               	movlw	low main@TagType
   679  000AC2  6E2C               	movwf	MFRC522_isCard@TagType,c
   680  000AC4  0E00               	movlw	high main@TagType
   681  000AC6  6E2D               	movwf	MFRC522_isCard@TagType+1,c
   682  000AC8  ECBE  F009         	call	_MFRC522_isCard	;wreg free
   683  000ACC  0900               	iorlw	0
   684  000ACE  B4D8               	btfsc	status,2,c
   685  000AD0  D7F7               	goto	l219
   686                           
   687                           ;main.c: 118: if (MFRC522_ReadCardSerial(&UID)) {
   688  000AD2  0E43               	movlw	low main@UID
   689  000AD4  6E2E               	movwf	MFRC522_ReadCardSerial@str,c
   690  000AD6  0E00               	movlw	high main@UID
   691  000AD8  6E2F               	movwf	MFRC522_ReadCardSerial@str+1,c
   692  000ADA  EC86  F009         	call	_MFRC522_ReadCardSerial	;wreg free
   693  000ADE  0900               	iorlw	0
   694  000AE0  B4D8               	btfsc	status,2,c
   695  000AE2  D7EE               	goto	l219
   696                           
   697                           ;main.c: 119: RA0 = ! RA0;
   698  000AE4  B080               	btfsc	3968,0,c	;volatile
   699  000AE6  D002               	goto	u1850
   700  000AE8  8080               	bsf	3968,0,c	;volatile
   701  000AEA  D001               	goto	u1865
   702  000AEC                     u1850:
   703  000AEC  9080               	bcf	3968,0,c	;volatile
   704  000AEE                     u1865:
   705                           
   706                           ;main.c: 120: Mydelay(500);
   707  000AEE  0E01               	movlw	1
   708  000AF0  6E02               	movwf	Mydelay@tempo+1,c
   709  000AF2  0EF4               	movlw	244
   710  000AF4  6E01               	movwf	Mydelay@tempo,c
   711  000AF6  EC54  F009         	call	_Mydelay	;wreg free
   712                           
   713                           ;main.c: 123: int var= 0x40;
   714  000AFA  0E00               	movlw	0
   715  000AFC  6E53               	movwf	main@var+1,c
   716  000AFE  0E40               	movlw	64
   717  000B00  6E52               	movwf	main@var,c
   718                           
   719                           ;main.c: 124: SetDDRamAddr(var);
   720  000B02  5052               	movf	main@var,w,c
   721  000B04  EC71  F008         	call	_SetDDRamAddr
   722  000B08  EC1E  F009         	call	_BusyXLCD	;wreg free
   723  000B0C  0900               	iorlw	0
   724  000B0E  A4D8               	btfss	status,2,c
   725  000B10  D7FB               	goto	l223
   726                           
   727                           ;main.c: 126: for(int i = 0; i < 5; i++){
   728  000B12  0E00               	movlw	0
   729  000B14  6E57               	movwf	main@i_340+1,c
   730  000B16  0E00               	movlw	0
   731  000B18  6E56               	movwf	main@i_340,c
   732  000B1A                     l2361:
   733  000B1A  BE57               	btfsc	main@i_340+1,7,c
   734  000B1C  D006               	goto	l225
   735  000B1E  5057               	movf	main@i_340+1,w,c
   736  000B20  E1CF               	bnz	l2345
   737  000B22  0E05               	movlw	5
   738  000B24  5C56               	subwf	main@i_340,w,c
   739  000B26  B0D8               	btfsc	status,0,c
   740  000B28  D7CB               	goto	l219
   741  000B2A                     l225:
   742                           
   743                           ;main.c: 127: traduz(UID[i],buffer);
   744  000B2A  0E43               	movlw	low main@UID
   745  000B2C  2456               	addwf	main@i_340,w,c
   746  000B2E  6ED9               	movwf	fsr2l,c
   747  000B30  0E00               	movlw	high main@UID
   748  000B32  2057               	addwfc	main@i_340+1,w,c
   749  000B34  6EDA               	movwf	fsr2h,c
   750  000B36  50DF               	movf	indf2,w,c
   751  000B38  6E31               	movwf	??_main& (0+255),c
   752  000B3A  5031               	movf	??_main,w,c
   753  000B3C  6E09               	movwf	traduz@numero,c
   754  000B3E  6A0A               	clrf	traduz@numero+1,c
   755  000B40  0E4D               	movlw	low main@buffer
   756  000B42  6E0B               	movwf	traduz@txt,c
   757  000B44  0E00               	movlw	high main@buffer
   758  000B46  6E0C               	movwf	traduz@txt+1,c
   759  000B48  ECB5  F005         	call	_traduz	;wreg free
   760                           
   761                           ;main.c: 128: putsXLCD(buffer);
   762  000B4C  0E4D               	movlw	low main@buffer
   763  000B4E  6E02               	movwf	putsXLCD@buffer,c
   764  000B50  0E00               	movlw	high main@buffer
   765  000B52  6E03               	movwf	putsXLCD@buffer+1,c
   766  000B54  EC43  F008         	call	_putsXLCD	;wreg free
   767                           
   768                           ;main.c: 129: var = var +4;
   769  000B58  0E04               	movlw	4
   770  000B5A  2452               	addwf	main@var,w,c
   771  000B5C  6E52               	movwf	main@var,c
   772  000B5E  0E00               	movlw	0
   773  000B60  2053               	addwfc	main@var+1,w,c
   774  000B62  6E53               	movwf	main@var+1,c
   775  000B64  4A56               	infsnz	main@i_340,f,c
   776  000B66  2A57               	incf	main@i_340+1,f,c
   777  000B68  D7D8               	goto	l2361
   778  000B6A                     __end_of_main:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           postdec1	equ	0xFE5
   787                           plusw1	equ	0xFE3
   788                           fsr1l	equ	0xFE1
   789                           indf2	equ	0xFDF
   790                           plusw2	equ	0xFDB
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _traduz *****************
   796 ;; Defined at:
   797 ;;		line 20 in file "../main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  numero          2    8[COMRAM] int 
   800 ;;  txt             2   10[COMRAM] PTR unsigned char 
   801 ;;		 -> main@buffer(5), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  c               1   14[COMRAM] unsigned char 
   804 ;;  b               1   13[COMRAM] unsigned char 
   805 ;;  a               1   12[COMRAM] unsigned char 
   806 ;;  e               1    0        unsigned char 
   807 ;;  d               1    0        unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   817 ;;      Params:         4       0       0       0       0       0       0       0       0
   818 ;;      Locals:         3       0       0       0       0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0
   820 ;;      Totals:         7       0       0       0       0       0       0       0       0
   821 ;;Total ram usage:        7 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    1
   824 ;; This function calls:
   825 ;;		___awdiv
   826 ;;		___awmod
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833  000B6A                     __ptext1:
   834                           	opt stack 0
   835  000B6A                     _traduz:
   836                           	opt stack 29
   837                           
   838                           ;main.c: 21: char a,b,c,d,e;
   839                           ;main.c: 22: a = (numero % 10) + 48;
   840                           
   841                           ;incstack = 0
   842  000B6A  C009  F001         	movff	traduz@numero,___awmod@dividend
   843  000B6E  C00A  F002         	movff	traduz@numero+1,___awmod@dividend+1
   844  000B72  0E00               	movlw	0
   845  000B74  6E04               	movwf	___awmod@divisor+1,c
   846  000B76  0E0A               	movlw	10
   847  000B78  6E03               	movwf	___awmod@divisor,c
   848  000B7A  ECDC  F007         	call	___awmod	;wreg free
   849  000B7E  5001               	movf	?___awmod,w,c
   850  000B80  0F30               	addlw	48
   851  000B82  6E0D               	movwf	traduz@a,c
   852                           
   853                           ;main.c: 23: numero = numero / 10 ;
   854  000B84  C009  F001         	movff	traduz@numero,___awdiv@dividend
   855  000B88  C00A  F002         	movff	traduz@numero+1,___awdiv@dividend+1
   856  000B8C  0E00               	movlw	0
   857  000B8E  6E04               	movwf	___awdiv@divisor+1,c
   858  000B90  0E0A               	movlw	10
   859  000B92  6E03               	movwf	___awdiv@divisor,c
   860  000B94  EC9A  F007         	call	___awdiv	;wreg free
   861  000B98  C001  F009         	movff	?___awdiv,traduz@numero
   862  000B9C  C002  F00A         	movff	?___awdiv+1,traduz@numero+1
   863                           
   864                           ;main.c: 24: b = (numero % 10) + 48;
   865  000BA0  C009  F001         	movff	traduz@numero,___awmod@dividend
   866  000BA4  C00A  F002         	movff	traduz@numero+1,___awmod@dividend+1
   867  000BA8  0E00               	movlw	0
   868  000BAA  6E04               	movwf	___awmod@divisor+1,c
   869  000BAC  0E0A               	movlw	10
   870  000BAE  6E03               	movwf	___awmod@divisor,c
   871  000BB0  ECDC  F007         	call	___awmod	;wreg free
   872  000BB4  5001               	movf	?___awmod,w,c
   873  000BB6  0F30               	addlw	48
   874  000BB8  6E0E               	movwf	traduz@b,c
   875                           
   876                           ;main.c: 25: numero=numero / 10 ;
   877  000BBA  C009  F001         	movff	traduz@numero,___awdiv@dividend
   878  000BBE  C00A  F002         	movff	traduz@numero+1,___awdiv@dividend+1
   879  000BC2  0E00               	movlw	0
   880  000BC4  6E04               	movwf	___awdiv@divisor+1,c
   881  000BC6  0E0A               	movlw	10
   882  000BC8  6E03               	movwf	___awdiv@divisor,c
   883  000BCA  EC9A  F007         	call	___awdiv	;wreg free
   884  000BCE  C001  F009         	movff	?___awdiv,traduz@numero
   885  000BD2  C002  F00A         	movff	?___awdiv+1,traduz@numero+1
   886                           
   887                           ;main.c: 26: c = (numero % 10) + 48;
   888  000BD6  C009  F001         	movff	traduz@numero,___awmod@dividend
   889  000BDA  C00A  F002         	movff	traduz@numero+1,___awmod@dividend+1
   890  000BDE  0E00               	movlw	0
   891  000BE0  6E04               	movwf	___awmod@divisor+1,c
   892  000BE2  0E0A               	movlw	10
   893  000BE4  6E03               	movwf	___awmod@divisor,c
   894  000BE6  ECDC  F007         	call	___awmod	;wreg free
   895  000BEA  5001               	movf	?___awmod,w,c
   896  000BEC  0F30               	addlw	48
   897  000BEE  6E0F               	movwf	traduz@c,c
   898                           
   899                           ;main.c: 30: (txt)[0]=c;
   900  000BF0  C00B  FFD9         	movff	traduz@txt,fsr2l
   901  000BF4  C00C  FFDA         	movff	traduz@txt+1,fsr2h
   902  000BF8  C00F  FFDF         	movff	traduz@c,indf2
   903                           
   904                           ;main.c: 31: (txt)[1]=b;
   905  000BFC  EE20 F001          	lfsr	2,1
   906  000C00  500B               	movf	traduz@txt,w,c
   907  000C02  26D9               	addwf	fsr2l,f,c
   908  000C04  500C               	movf	traduz@txt+1,w,c
   909  000C06  22DA               	addwfc	fsr2h,f,c
   910  000C08  C00E  FFDF         	movff	traduz@b,indf2
   911                           
   912                           ;main.c: 32: (txt)[2]=a;
   913  000C0C  EE20 F002          	lfsr	2,2
   914  000C10  500B               	movf	traduz@txt,w,c
   915  000C12  26D9               	addwf	fsr2l,f,c
   916  000C14  500C               	movf	traduz@txt+1,w,c
   917  000C16  22DA               	addwfc	fsr2h,f,c
   918  000C18  C00D  FFDF         	movff	traduz@a,indf2
   919                           
   920                           ;main.c: 33: (txt)[3]='\0';
   921  000C1C  EE20 F003          	lfsr	2,3
   922  000C20  500B               	movf	traduz@txt,w,c
   923  000C22  26D9               	addwf	fsr2l,f,c
   924  000C24  500C               	movf	traduz@txt+1,w,c
   925  000C26  22DA               	addwfc	fsr2h,f,c
   926  000C28  0E00               	movlw	0
   927  000C2A  6EDF               	movwf	indf2,c
   928  000C2C  0012               	return		;funcret
   929  000C2E                     __end_of_traduz:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           postdec1	equ	0xFE5
   938                           plusw1	equ	0xFE3
   939                           fsr1l	equ	0xFE1
   940                           indf2	equ	0xFDF
   941                           plusw2	equ	0xFDB
   942                           fsr2h	equ	0xFDA
   943                           fsr2l	equ	0xFD9
   944                           status	equ	0xFD8
   945                           
   946 ;; *************** function ___awmod *****************
   947 ;; Defined at:
   948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  dividend        2    0[COMRAM] int 
   951 ;;  divisor         2    2[COMRAM] int 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  sign            1    5[COMRAM] unsigned char 
   954 ;;  counter         1    4[COMRAM] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  2    0[COMRAM] int 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   964 ;;      Params:         4       0       0       0       0       0       0       0       0
   965 ;;      Locals:         2       0       0       0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0
   967 ;;      Totals:         6       0       0       0       0       0       0       0       0
   968 ;;Total ram usage:        6 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_traduz
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text2
   978  000FB8                     __ptext2:
   979                           	opt stack 0
   980  000FB8                     ___awmod:
   981                           	opt stack 29
   982                           
   983                           ;incstack = 0
   984  000FB8  0E00               	movlw	0
   985  000FBA  6E06               	movwf	___awmod@sign,c
   986  000FBC  AE02               	btfss	___awmod@dividend+1,7,c
   987  000FBE  D006               	goto	l521
   988  000FC0  6C01               	negf	___awmod@dividend,c
   989  000FC2  1E02               	comf	___awmod@dividend+1,f,c
   990  000FC4  B0D8               	btfsc	status,0,c
   991  000FC6  2A02               	incf	___awmod@dividend+1,f,c
   992  000FC8  0E01               	movlw	1
   993  000FCA  6E06               	movwf	___awmod@sign,c
   994  000FCC                     l521:
   995  000FCC  AE04               	btfss	___awmod@divisor+1,7,c
   996  000FCE  D004               	goto	l522
   997  000FD0  6C03               	negf	___awmod@divisor,c
   998  000FD2  1E04               	comf	___awmod@divisor+1,f,c
   999  000FD4  B0D8               	btfsc	status,0,c
  1000  000FD6  2A04               	incf	___awmod@divisor+1,f,c
  1001  000FD8                     l522:
  1002  000FD8  5003               	movf	___awmod@divisor,w,c
  1003  000FDA  1004               	iorwf	___awmod@divisor+1,w,c
  1004  000FDC  B4D8               	btfsc	status,2,c
  1005  000FDE  D018               	goto	l529
  1006  000FE0  0E01               	movlw	1
  1007  000FE2  6E05               	movwf	___awmod@counter,c
  1008  000FE4  D004               	goto	l524
  1009  000FE6  90D8               	bcf	status,0,c
  1010  000FE8  3603               	rlcf	___awmod@divisor,f,c
  1011  000FEA  3604               	rlcf	___awmod@divisor+1,f,c
  1012  000FEC  2A05               	incf	___awmod@counter,f,c
  1013  000FEE                     l524:
  1014  000FEE  AE04               	btfss	___awmod@divisor+1,7,c
  1015  000FF0  D7FA               	goto	l525
  1016  000FF2                     u1460:
  1017  000FF2  5003               	movf	___awmod@divisor,w,c
  1018  000FF4  5C01               	subwf	___awmod@dividend,w,c
  1019  000FF6  5004               	movf	___awmod@divisor+1,w,c
  1020  000FF8  5802               	subwfb	___awmod@dividend+1,w,c
  1021  000FFA  A0D8               	btfss	status,0,c
  1022  000FFC  D004               	goto	l528
  1023  000FFE  5003               	movf	___awmod@divisor,w,c
  1024  001000  5E01               	subwf	___awmod@dividend,f,c
  1025  001002  5004               	movf	___awmod@divisor+1,w,c
  1026  001004  5A02               	subwfb	___awmod@dividend+1,f,c
  1027  001006                     l528:
  1028  001006  90D8               	bcf	status,0,c
  1029  001008  3204               	rrcf	___awmod@divisor+1,f,c
  1030  00100A  3203               	rrcf	___awmod@divisor,f,c
  1031  00100C  2E05               	decfsz	___awmod@counter,f,c
  1032  00100E  D7F1               	goto	u1460
  1033  001010                     l529:
  1034  001010  5006               	movf	___awmod@sign,w,c
  1035  001012  B4D8               	btfsc	status,2,c
  1036  001014  D004               	goto	l530
  1037  001016  6C01               	negf	___awmod@dividend,c
  1038  001018  1E02               	comf	___awmod@dividend+1,f,c
  1039  00101A  B0D8               	btfsc	status,0,c
  1040  00101C  2A02               	incf	___awmod@dividend+1,f,c
  1041  00101E                     l530:
  1042  00101E  C001  F001         	movff	___awmod@dividend,?___awmod
  1043  001022  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1044  001026  0012               	return	
  1045  001028                     __end_of___awmod:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           postdec1	equ	0xFE5
  1054                           plusw1	equ	0xFE3
  1055                           fsr1l	equ	0xFE1
  1056                           indf2	equ	0xFDF
  1057                           plusw2	equ	0xFDB
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function ___awdiv *****************
  1063 ;; Defined at:
  1064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  dividend        2    0[COMRAM] int 
  1067 ;;  divisor         2    2[COMRAM] int 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  quotient        2    6[COMRAM] int 
  1070 ;;  sign            1    5[COMRAM] unsigned char 
  1071 ;;  counter         1    4[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2    0[COMRAM] int 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         4       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_traduz
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text3
  1095  000F34                     __ptext3:
  1096                           	opt stack 0
  1097  000F34                     ___awdiv:
  1098                           	opt stack 29
  1099                           
  1100                           ;incstack = 0
  1101  000F34  0E00               	movlw	0
  1102  000F36  6E06               	movwf	___awdiv@sign,c
  1103  000F38  AE04               	btfss	___awdiv@divisor+1,7,c
  1104  000F3A  D006               	goto	l508
  1105  000F3C  6C03               	negf	___awdiv@divisor,c
  1106  000F3E  1E04               	comf	___awdiv@divisor+1,f,c
  1107  000F40  B0D8               	btfsc	status,0,c
  1108  000F42  2A04               	incf	___awdiv@divisor+1,f,c
  1109  000F44  0E01               	movlw	1
  1110  000F46  6E06               	movwf	___awdiv@sign,c
  1111  000F48                     l508:
  1112  000F48  AE02               	btfss	___awdiv@dividend+1,7,c
  1113  000F4A  D006               	goto	l509
  1114  000F4C  6C01               	negf	___awdiv@dividend,c
  1115  000F4E  1E02               	comf	___awdiv@dividend+1,f,c
  1116  000F50  B0D8               	btfsc	status,0,c
  1117  000F52  2A02               	incf	___awdiv@dividend+1,f,c
  1118  000F54  0E01               	movlw	1
  1119  000F56  1A06               	xorwf	___awdiv@sign,f,c
  1120  000F58                     l509:
  1121  000F58  0E00               	movlw	0
  1122  000F5A  6E08               	movwf	___awdiv@quotient+1,c
  1123  000F5C  0E00               	movlw	0
  1124  000F5E  6E07               	movwf	___awdiv@quotient,c
  1125  000F60  5003               	movf	___awdiv@divisor,w,c
  1126  000F62  1004               	iorwf	___awdiv@divisor+1,w,c
  1127  000F64  B4D8               	btfsc	status,2,c
  1128  000F66  D01C               	goto	l516
  1129  000F68  0E01               	movlw	1
  1130  000F6A  6E05               	movwf	___awdiv@counter,c
  1131  000F6C  D004               	goto	l511
  1132  000F6E  90D8               	bcf	status,0,c
  1133  000F70  3603               	rlcf	___awdiv@divisor,f,c
  1134  000F72  3604               	rlcf	___awdiv@divisor+1,f,c
  1135  000F74  2A05               	incf	___awdiv@counter,f,c
  1136  000F76                     l511:
  1137  000F76  AE04               	btfss	___awdiv@divisor+1,7,c
  1138  000F78  D7FA               	goto	l512
  1139  000F7A                     u1400:
  1140  000F7A  90D8               	bcf	status,0,c
  1141  000F7C  3607               	rlcf	___awdiv@quotient,f,c
  1142  000F7E  3608               	rlcf	___awdiv@quotient+1,f,c
  1143  000F80  5003               	movf	___awdiv@divisor,w,c
  1144  000F82  5C01               	subwf	___awdiv@dividend,w,c
  1145  000F84  5004               	movf	___awdiv@divisor+1,w,c
  1146  000F86  5802               	subwfb	___awdiv@dividend+1,w,c
  1147  000F88  A0D8               	btfss	status,0,c
  1148  000F8A  D005               	goto	l515
  1149  000F8C  5003               	movf	___awdiv@divisor,w,c
  1150  000F8E  5E01               	subwf	___awdiv@dividend,f,c
  1151  000F90  5004               	movf	___awdiv@divisor+1,w,c
  1152  000F92  5A02               	subwfb	___awdiv@dividend+1,f,c
  1153  000F94  8007               	bsf	___awdiv@quotient,0,c
  1154  000F96                     l515:
  1155  000F96  90D8               	bcf	status,0,c
  1156  000F98  3204               	rrcf	___awdiv@divisor+1,f,c
  1157  000F9A  3203               	rrcf	___awdiv@divisor,f,c
  1158  000F9C  2E05               	decfsz	___awdiv@counter,f,c
  1159  000F9E  D7ED               	goto	u1400
  1160  000FA0                     l516:
  1161  000FA0  5006               	movf	___awdiv@sign,w,c
  1162  000FA2  B4D8               	btfsc	status,2,c
  1163  000FA4  D004               	goto	l517
  1164  000FA6  6C07               	negf	___awdiv@quotient,c
  1165  000FA8  1E08               	comf	___awdiv@quotient+1,f,c
  1166  000FAA  B0D8               	btfsc	status,0,c
  1167  000FAC  2A08               	incf	___awdiv@quotient+1,f,c
  1168  000FAE                     l517:
  1169  000FAE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1170  000FB2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1171  000FB6  0012               	return	
  1172  000FB8                     __end_of___awdiv:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           postdec1	equ	0xFE5
  1181                           plusw1	equ	0xFE3
  1182                           fsr1l	equ	0xFE1
  1183                           indf2	equ	0xFDF
  1184                           plusw2	equ	0xFDB
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function _putsXLCD *****************
  1190 ;; Defined at:
  1191 ;;		line 125 in file "../mylcd.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  1194 ;;		 -> main@buffer(5), STR_1(10), 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         2       0       0       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		_BusyXLCD
  1215 ;;		_WriteDataXLCD
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text4
  1222  001086                     __ptext4:
  1223                           	opt stack 0
  1224  001086                     _putsXLCD:
  1225                           	opt stack 28
  1226                           
  1227                           ;mylcd.c: 127: while(*buffer)
  1228                           
  1229                           ;incstack = 0
  1230  001086  D019               	goto	l290
  1231  001088                     
  1232                           ;mylcd.c: 128: {
  1233                           ;mylcd.c: 129: while(BusyXLCD());
  1234  001088  EC1E  F009         	call	_BusyXLCD	;wreg free
  1235  00108C  0900               	iorlw	0
  1236  00108E  A4D8               	btfss	status,2,c
  1237  001090  D7FB               	goto	l291
  1238                           
  1239                           ;mylcd.c: 130: WriteDataXLCD(*buffer);
  1240  001092  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  1241  001096  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1242  00109A  6AF8               	clrf	tblptru,c
  1243  00109C  0E07               	movlw	(high __ramtop+-1)
  1244  00109E  64F7               	cpfsgt	tblptrh,c
  1245  0010A0  D003               	bra	u1567
  1246  0010A2  0008               	tblrd		*
  1247  0010A4  50F5               	movf	tablat,w,c
  1248  0010A6  D005               	bra	u1560
  1249  0010A8                     u1567:
  1250  0010A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1251  0010AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1252  0010B0  50EF               	movf	indf0,w,c
  1253  0010B2                     u1560:
  1254  0010B2  ECE0  F008         	call	_WriteDataXLCD
  1255                           
  1256                           ;mylcd.c: 131: buffer++;
  1257  0010B6  4A02               	infsnz	putsXLCD@buffer,f,c
  1258  0010B8  2A03               	incf	putsXLCD@buffer+1,f,c
  1259  0010BA                     l290:
  1260  0010BA  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  1261  0010BE  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1262  0010C2  6AF8               	clrf	tblptru,c
  1263  0010C4  0E07               	movlw	(high __ramtop+-1)
  1264  0010C6  64F7               	cpfsgt	tblptrh,c
  1265  0010C8  D003               	bra	u1577
  1266  0010CA  0008               	tblrd		*
  1267  0010CC  50F5               	movf	tablat,w,c
  1268  0010CE  D005               	bra	u1570
  1269  0010D0                     u1577:
  1270  0010D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1271  0010D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1272  0010D8  50EF               	movf	indf0,w,c
  1273  0010DA                     u1570:
  1274  0010DA  0900               	iorlw	0
  1275  0010DC  B4D8               	btfsc	status,2,c
  1276  0010DE  0012               	return	
  1277  0010E0  D7D3               	goto	l291
  1278  0010E2                     __end_of_putsXLCD:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           indf0	equ	0xFEF
  1285                           postinc0	equ	0xFEE
  1286                           fsr0h	equ	0xFEA
  1287                           fsr0l	equ	0xFE9
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           plusw1	equ	0xFE3
  1291                           fsr1l	equ	0xFE1
  1292                           indf2	equ	0xFDF
  1293                           plusw2	equ	0xFDB
  1294                           fsr2h	equ	0xFDA
  1295                           fsr2l	equ	0xFD9
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function _WriteDataXLCD *****************
  1299 ;; Defined at:
  1300 ;;		line 357 in file "../mylcd.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  data            1    wreg     unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  data            1    0[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        1 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    1
  1321 ;; This function calls:
  1322 ;;		_DelayFor18TCY
  1323 ;; This function is called by:
  1324 ;;		_putsXLCD
  1325 ;;		_putrsXLCD
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text5
  1330  0011C0                     __ptext5:
  1331                           	opt stack 0
  1332  0011C0                     _WriteDataXLCD:
  1333                           	opt stack 28
  1334                           
  1335                           ;incstack = 0
  1336                           ;WriteDataXLCD@data stored from wreg
  1337  0011C0  6E01               	movwf	WriteDataXLCD@data,c
  1338                           
  1339                           ;mylcd.c: 376: TRISD &= 0xf0;
  1340  0011C2  0EF0               	movlw	240
  1341  0011C4  1695               	andwf	3989,f,c	;volatile
  1342                           
  1343                           ;mylcd.c: 377: PORTD &= 0xf0;
  1344  0011C6  0EF0               	movlw	240
  1345  0011C8  1683               	andwf	3971,f,c	;volatile
  1346                           
  1347                           ;mylcd.c: 378: PORTD |= ((data>>4)&0x0f);
  1348  0011CA  3801               	swapf	WriteDataXLCD@data,w,c
  1349  0011CC  0B0F               	andlw	15
  1350  0011CE  0B0F               	andlw	15
  1351  0011D0  1283               	iorwf	3971,f,c	;volatile
  1352                           
  1353                           ;mylcd.c: 380: LATDbits.LATD6 = 1;
  1354  0011D2  8C8C               	bsf	3980,6,c	;volatile
  1355                           
  1356                           ;mylcd.c: 381: LATDbits.LATD5 = 0;
  1357  0011D4  9A8C               	bcf	3980,5,c	;volatile
  1358                           
  1359                           ;mylcd.c: 382: DelayFor18TCY();
  1360  0011D6  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1361                           
  1362                           ;mylcd.c: 383: LATDbits.LATD4 = 1;
  1363  0011DA  888C               	bsf	3980,4,c	;volatile
  1364                           
  1365                           ;mylcd.c: 384: DelayFor18TCY();
  1366  0011DC  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1367                           
  1368                           ;mylcd.c: 385: LATDbits.LATD4 = 0;
  1369  0011E0  988C               	bcf	3980,4,c	;volatile
  1370                           
  1371                           ;mylcd.c: 390: PORTD &= 0xf0;
  1372  0011E2  0EF0               	movlw	240
  1373  0011E4  1683               	andwf	3971,f,c	;volatile
  1374                           
  1375                           ;mylcd.c: 391: PORTD |= (data&0x0f);
  1376  0011E6  5001               	movf	WriteDataXLCD@data,w,c
  1377  0011E8  0B0F               	andlw	15
  1378  0011EA  1283               	iorwf	3971,f,c	;volatile
  1379                           
  1380                           ;mylcd.c: 393: DelayFor18TCY();
  1381  0011EC  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1382                           
  1383                           ;mylcd.c: 394: LATDbits.LATD4 = 1;
  1384  0011F0  888C               	bsf	3980,4,c	;volatile
  1385                           
  1386                           ;mylcd.c: 395: DelayFor18TCY();
  1387  0011F2  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1388                           
  1389                           ;mylcd.c: 396: LATDbits.LATD4 = 0;
  1390  0011F6  988C               	bcf	3980,4,c	;volatile
  1391                           
  1392                           ;mylcd.c: 400: TRISD |= 0x0f;
  1393  0011F8  0E0F               	movlw	15
  1394  0011FA  1295               	iorwf	3989,f,c	;volatile
  1395  0011FC  0012               	return	
  1396  0011FE                     __end_of_WriteDataXLCD:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           indf0	equ	0xFEF
  1403                           postinc0	equ	0xFEE
  1404                           fsr0h	equ	0xFEA
  1405                           fsr0l	equ	0xFE9
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           plusw1	equ	0xFE3
  1409                           fsr1l	equ	0xFE1
  1410                           indf2	equ	0xFDF
  1411                           plusw2	equ	0xFDB
  1412                           fsr2h	equ	0xFDA
  1413                           fsr2l	equ	0xFD9
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function _inic_XLCD *****************
  1417 ;; Defined at:
  1418 ;;		line 51 in file "../main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		_BusyXLCD
  1441 ;;		_OpenXLCD
  1442 ;;		_WriteCmdXLCD
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text6
  1449  001276                     __ptext6:
  1450                           	opt stack 0
  1451  001276                     _inic_XLCD:
  1452                           	opt stack 27
  1453                           
  1454                           ;main.c: 53: OpenXLCD(0b00101100&0b00111000);
  1455                           
  1456                           ;incstack = 0
  1457  001276  0E28               	movlw	40
  1458  001278  EC6B  F006         	call	_OpenXLCD
  1459  00127C  EC1E  F009         	call	_BusyXLCD	;wreg free
  1460  001280  0900               	iorlw	0
  1461  001282  A4D8               	btfss	status,2,c
  1462  001284  D7FB               	goto	l186
  1463                           
  1464                           ;main.c: 55: WriteCmdXLCD(0x06);
  1465  001286  0E06               	movlw	6
  1466  001288  ECFF  F008         	call	_WriteCmdXLCD
  1467  00128C  EC1E  F009         	call	_BusyXLCD	;wreg free
  1468  001290  0900               	iorlw	0
  1469  001292  A4D8               	btfss	status,2,c
  1470  001294  D7FB               	goto	l189
  1471                           
  1472                           ;main.c: 57: WriteCmdXLCD(0x0C);
  1473  001296  0E0C               	movlw	12
  1474  001298  ECFF  F008         	call	_WriteCmdXLCD
  1475  00129C  EC1E  F009         	call	_BusyXLCD	;wreg free
  1476  0012A0  0900               	iorlw	0
  1477  0012A2  B4D8               	btfsc	status,2,c
  1478  0012A4  0012               	return	
  1479  0012A6  D7FA               	goto	l192
  1480  0012A8                     __end_of_inic_XLCD:
  1481                           	opt stack 0
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           indf0	equ	0xFEF
  1487                           postinc0	equ	0xFEE
  1488                           fsr0h	equ	0xFEA
  1489                           fsr0l	equ	0xFE9
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           plusw1	equ	0xFE3
  1493                           fsr1l	equ	0xFE1
  1494                           indf2	equ	0xFDF
  1495                           plusw2	equ	0xFDB
  1496                           fsr2h	equ	0xFDA
  1497                           fsr2l	equ	0xFD9
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function _OpenXLCD *****************
  1501 ;; Defined at:
  1502 ;;		line 63 in file "../mylcd.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  lcdtype         1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1519 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1520 ;;Total ram usage:        1 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		_BusyXLCD
  1525 ;;		_Delay10KTCYx
  1526 ;;		_DelayPORXLCD
  1527 ;;		_SetDDRamAddr
  1528 ;;		_WriteCmdXLCD
  1529 ;; This function is called by:
  1530 ;;		_inic_XLCD
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text7
  1535  000CD6                     __ptext7:
  1536                           	opt stack 0
  1537  000CD6                     _OpenXLCD:
  1538                           	opt stack 27
  1539                           
  1540                           ;incstack = 0
  1541                           ;OpenXLCD@lcdtype stored from wreg
  1542  000CD6  6E05               	movwf	OpenXLCD@lcdtype,c
  1543                           
  1544                           ;mylcd.c: 75: PORTD &= 0xf0;
  1545  000CD8  0EF0               	movlw	240
  1546  000CDA  1683               	andwf	3971,f,c	;volatile
  1547                           
  1548                           ;mylcd.c: 76: TRISD &= 0xF0;
  1549  000CDC  0EF0               	movlw	240
  1550  000CDE  1695               	andwf	3989,f,c	;volatile
  1551                           
  1552                           ;mylcd.c: 79: TRISDbits.TRISD5 = 0;
  1553  000CE0  9A95               	bcf	3989,5,c	;volatile
  1554                           
  1555                           ;mylcd.c: 80: TRISDbits.TRISD6 = 0;
  1556  000CE2  9C95               	bcf	3989,6,c	;volatile
  1557                           
  1558                           ;mylcd.c: 81: TRISDbits.TRISD4 = 0;
  1559  000CE4  9895               	bcf	3989,4,c	;volatile
  1560                           
  1561                           ;mylcd.c: 82: LATDbits.LATD5 = 0;
  1562  000CE6  9A8C               	bcf	3980,5,c	;volatile
  1563                           
  1564                           ;mylcd.c: 83: LATDbits.LATD6 = 0;
  1565  000CE8  9C8C               	bcf	3980,6,c	;volatile
  1566                           
  1567                           ;mylcd.c: 84: LATDbits.LATD4 = 0;
  1568  000CEA  988C               	bcf	3980,4,c	;volatile
  1569                           
  1570                           ;mylcd.c: 87: DelayPORXLCD();
  1571  000CEC  ECD7  F009         	call	_DelayPORXLCD	;wreg free
  1572                           
  1573                           ;mylcd.c: 89: WriteCmdXLCD(0x30);
  1574  000CF0  0E30               	movlw	48
  1575  000CF2  ECFF  F008         	call	_WriteCmdXLCD
  1576                           
  1577                           ;mylcd.c: 90: Delay10KTCYx(0x05);
  1578  000CF6  0E05               	movlw	5
  1579  000CF8  ECCC  F009         	call	_Delay10KTCYx
  1580                           
  1581                           ;mylcd.c: 92: WriteCmdXLCD(0x30);
  1582  000CFC  0E30               	movlw	48
  1583  000CFE  ECFF  F008         	call	_WriteCmdXLCD
  1584                           
  1585                           ;mylcd.c: 93: Delay10KTCYx(0x01);
  1586  000D02  0E01               	movlw	1
  1587  000D04  ECCC  F009         	call	_Delay10KTCYx
  1588                           
  1589                           ;mylcd.c: 96: WriteCmdXLCD(0x32);
  1590  000D08  0E32               	movlw	50
  1591  000D0A  ECFF  F008         	call	_WriteCmdXLCD
  1592  000D0E  EC1E  F009         	call	_BusyXLCD	;wreg free
  1593  000D12  0900               	iorlw	0
  1594  000D14  A4D8               	btfss	status,2,c
  1595  000D16  D7FB               	goto	l267
  1596  000D18                     u370:
  1597                           
  1598                           ;mylcd.c: 102: while(BusyXLCD());
  1599  000D18  EC1E  F009         	call	_BusyXLCD	;wreg free
  1600  000D1C  0900               	iorlw	0
  1601  000D1E  A4D8               	btfss	status,2,c
  1602  000D20  D7FB               	goto	u370
  1603                           
  1604                           ;mylcd.c: 103: WriteCmdXLCD(lcdtype);
  1605  000D22  5005               	movf	OpenXLCD@lcdtype,w,c
  1606  000D24  ECFF  F008         	call	_WriteCmdXLCD
  1607  000D28  EC1E  F009         	call	_BusyXLCD	;wreg free
  1608  000D2C  0900               	iorlw	0
  1609  000D2E  A4D8               	btfss	status,2,c
  1610  000D30  D7FB               	goto	l273
  1611                           
  1612                           ;mylcd.c: 107: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1613  000D32  0E08               	movlw	8
  1614  000D34  ECFF  F008         	call	_WriteCmdXLCD
  1615  000D38  EC1E  F009         	call	_BusyXLCD	;wreg free
  1616  000D3C  0900               	iorlw	0
  1617  000D3E  A4D8               	btfss	status,2,c
  1618  000D40  D7FB               	goto	l276
  1619                           
  1620                           ;mylcd.c: 109: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1621  000D42  0E0F               	movlw	15
  1622  000D44  ECFF  F008         	call	_WriteCmdXLCD
  1623  000D48  EC1E  F009         	call	_BusyXLCD	;wreg free
  1624  000D4C  0900               	iorlw	0
  1625  000D4E  A4D8               	btfss	status,2,c
  1626  000D50  D7FB               	goto	l279
  1627                           
  1628                           ;mylcd.c: 113: WriteCmdXLCD(0x01);
  1629  000D52  0E01               	movlw	1
  1630  000D54  ECFF  F008         	call	_WriteCmdXLCD
  1631  000D58  EC1E  F009         	call	_BusyXLCD	;wreg free
  1632  000D5C  0900               	iorlw	0
  1633  000D5E  A4D8               	btfss	status,2,c
  1634  000D60  D7FB               	goto	l282
  1635                           
  1636                           ;mylcd.c: 117: WriteCmdXLCD(0b00000100);
  1637  000D62  0E04               	movlw	4
  1638  000D64  ECFF  F008         	call	_WriteCmdXLCD
  1639  000D68  EC1E  F009         	call	_BusyXLCD	;wreg free
  1640  000D6C  0900               	iorlw	0
  1641  000D6E  A4D8               	btfss	status,2,c
  1642  000D70  D7FB               	goto	l285
  1643                           
  1644                           ;mylcd.c: 121: SetDDRamAddr(0x80);
  1645  000D72  0E80               	movlw	128
  1646  000D74  EC71  F008         	call	_SetDDRamAddr
  1647  000D78  0012               	return	
  1648  000D7A                     __end_of_OpenXLCD:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           indf0	equ	0xFEF
  1655                           postinc0	equ	0xFEE
  1656                           fsr0h	equ	0xFEA
  1657                           fsr0l	equ	0xFE9
  1658                           wreg	equ	0xFE8
  1659                           postdec1	equ	0xFE5
  1660                           plusw1	equ	0xFE3
  1661                           fsr1l	equ	0xFE1
  1662                           indf2	equ	0xFDF
  1663                           plusw2	equ	0xFDB
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _WriteCmdXLCD *****************
  1669 ;; Defined at:
  1670 ;;		line 309 in file "../mylcd.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  cmd             1    wreg     unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  cmd             1    0[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0
  1685 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1687 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:        1 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    1
  1691 ;; This function calls:
  1692 ;;		_DelayFor18TCY
  1693 ;; This function is called by:
  1694 ;;		_inic_XLCD
  1695 ;;		_OpenXLCD
  1696 ;;		_limpa
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text8
  1701  0011FE                     __ptext8:
  1702                           	opt stack 0
  1703  0011FE                     _WriteCmdXLCD:
  1704                           	opt stack 28
  1705                           
  1706                           ;incstack = 0
  1707                           ;WriteCmdXLCD@cmd stored from wreg
  1708  0011FE  6E01               	movwf	WriteCmdXLCD@cmd,c
  1709                           
  1710                           ;mylcd.c: 328: TRISD &= 0xf0;
  1711  001200  0EF0               	movlw	240
  1712  001202  1695               	andwf	3989,f,c	;volatile
  1713                           
  1714                           ;mylcd.c: 329: PORTD &= 0xf0;
  1715  001204  0EF0               	movlw	240
  1716  001206  1683               	andwf	3971,f,c	;volatile
  1717                           
  1718                           ;mylcd.c: 330: PORTD |= (cmd>>4)&0x0f;
  1719  001208  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1720  00120A  0B0F               	andlw	15
  1721  00120C  0B0F               	andlw	15
  1722  00120E  1283               	iorwf	3971,f,c	;volatile
  1723                           
  1724                           ;mylcd.c: 332: LATDbits.LATD5 = 0;
  1725  001210  9A8C               	bcf	3980,5,c	;volatile
  1726                           
  1727                           ;mylcd.c: 333: LATDbits.LATD6 = 0;
  1728  001212  9C8C               	bcf	3980,6,c	;volatile
  1729                           
  1730                           ;mylcd.c: 334: DelayFor18TCY();
  1731  001214  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1732                           
  1733                           ;mylcd.c: 335: LATDbits.LATD4 = 1;
  1734  001218  888C               	bsf	3980,4,c	;volatile
  1735                           
  1736                           ;mylcd.c: 336: DelayFor18TCY();
  1737  00121A  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1738                           
  1739                           ;mylcd.c: 337: LATDbits.LATD4 = 0;
  1740  00121E  988C               	bcf	3980,4,c	;volatile
  1741                           
  1742                           ;mylcd.c: 342: PORTD &= 0xf0;
  1743  001220  0EF0               	movlw	240
  1744  001222  1683               	andwf	3971,f,c	;volatile
  1745                           
  1746                           ;mylcd.c: 343: PORTD |= cmd&0x0f;
  1747  001224  5001               	movf	WriteCmdXLCD@cmd,w,c
  1748  001226  0B0F               	andlw	15
  1749  001228  1283               	iorwf	3971,f,c	;volatile
  1750                           
  1751                           ;mylcd.c: 345: DelayFor18TCY();
  1752  00122A  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1753                           
  1754                           ;mylcd.c: 346: LATDbits.LATD4 = 1;
  1755  00122E  888C               	bsf	3980,4,c	;volatile
  1756                           
  1757                           ;mylcd.c: 347: DelayFor18TCY();
  1758  001230  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1759                           
  1760                           ;mylcd.c: 348: LATDbits.LATD4 = 0;
  1761  001234  988C               	bcf	3980,4,c	;volatile
  1762                           
  1763                           ;mylcd.c: 352: TRISD |= 0x0f;
  1764  001236  0E0F               	movlw	15
  1765  001238  1295               	iorwf	3989,f,c	;volatile
  1766  00123A  0012               	return	
  1767  00123C                     __end_of_WriteCmdXLCD:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           indf0	equ	0xFEF
  1774                           postinc0	equ	0xFEE
  1775                           fsr0h	equ	0xFEA
  1776                           fsr0l	equ	0xFE9
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           plusw1	equ	0xFE3
  1780                           fsr1l	equ	0xFE1
  1781                           indf2	equ	0xFDF
  1782                           plusw2	equ	0xFDB
  1783                           fsr2h	equ	0xFDA
  1784                           fsr2l	equ	0xFD9
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _SetDDRamAddr *****************
  1788 ;; Defined at:
  1789 ;;		line 261 in file "../mylcd.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  DDaddr          1    wreg     unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        4 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		_DelayFor18TCY
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;;		_OpenXLCD
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text9
  1819  0010E2                     __ptext9:
  1820                           	opt stack 0
  1821  0010E2                     _SetDDRamAddr:
  1822                           	opt stack 27
  1823                           
  1824                           ;incstack = 0
  1825                           ;SetDDRamAddr@DDaddr stored from wreg
  1826  0010E2  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1827                           
  1828                           ;mylcd.c: 280: TRISD &= 0xf0;
  1829  0010E4  0EF0               	movlw	240
  1830  0010E6  1695               	andwf	3989,f,c	;volatile
  1831                           
  1832                           ;mylcd.c: 281: PORTD &= 0xf0;
  1833  0010E8  0EF0               	movlw	240
  1834  0010EA  1683               	andwf	3971,f,c	;volatile
  1835                           
  1836                           ;mylcd.c: 282: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1837  0010EC  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1838  0010EE  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1839  0010F0  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1840  0010F2  8E01               	bsf	??_SetDDRamAddr,7,c
  1841  0010F4  0E04               	movlw	4
  1842  0010F6  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1843  0010F8                     u305:
  1844  0010F8  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1845  0010FA  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1846  0010FC  3201               	rrcf	??_SetDDRamAddr,f,c
  1847  0010FE  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1848  001100  D7FB               	goto	u305
  1849  001102  5001               	movf	??_SetDDRamAddr,w,c
  1850  001104  0B0F               	andlw	15
  1851  001106  1283               	iorwf	3971,f,c	;volatile
  1852                           
  1853                           ;mylcd.c: 284: LATDbits.LATD5 = 0;
  1854  001108  9A8C               	bcf	3980,5,c	;volatile
  1855                           
  1856                           ;mylcd.c: 285: LATDbits.LATD6 = 0;
  1857  00110A  9C8C               	bcf	3980,6,c	;volatile
  1858                           
  1859                           ;mylcd.c: 286: DelayFor18TCY();
  1860  00110C  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1861                           
  1862                           ;mylcd.c: 287: LATDbits.LATD4 = 1;
  1863  001110  888C               	bsf	3980,4,c	;volatile
  1864                           
  1865                           ;mylcd.c: 288: DelayFor18TCY();
  1866  001112  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1867                           
  1868                           ;mylcd.c: 289: LATDbits.LATD4 = 0;
  1869  001116  988C               	bcf	3980,4,c	;volatile
  1870                           
  1871                           ;mylcd.c: 294: PORTD &= 0xf0;
  1872  001118  0EF0               	movlw	240
  1873  00111A  1683               	andwf	3971,f,c	;volatile
  1874                           
  1875                           ;mylcd.c: 295: PORTD |= (DDaddr&0x0f);
  1876  00111C  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1877  00111E  0B0F               	andlw	15
  1878  001120  1283               	iorwf	3971,f,c	;volatile
  1879                           
  1880                           ;mylcd.c: 297: DelayFor18TCY();
  1881  001122  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1882                           
  1883                           ;mylcd.c: 298: LATDbits.LATD4 = 1;
  1884  001126  888C               	bsf	3980,4,c	;volatile
  1885                           
  1886                           ;mylcd.c: 299: DelayFor18TCY();
  1887  001128  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  1888                           
  1889                           ;mylcd.c: 300: LATDbits.LATD4 = 0;
  1890  00112C  988C               	bcf	3980,4,c	;volatile
  1891                           
  1892                           ;mylcd.c: 304: TRISD |= 0x0f;
  1893  00112E  0E0F               	movlw	15
  1894  001130  1295               	iorwf	3989,f,c	;volatile
  1895  001132  0012               	return	
  1896  001134                     __end_of_SetDDRamAddr:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           indf0	equ	0xFEF
  1903                           postinc0	equ	0xFEE
  1904                           fsr0h	equ	0xFEA
  1905                           fsr0l	equ	0xFE9
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           plusw1	equ	0xFE3
  1909                           fsr1l	equ	0xFE1
  1910                           indf2	equ	0xFDF
  1911                           plusw2	equ	0xFDB
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _DelayPORXLCD *****************
  1917 ;; Defined at:
  1918 ;;		line 73 in file "../main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_OpenXLCD
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text10
  1946  0013AE                     __ptext10:
  1947                           	opt stack 0
  1948  0013AE                     _DelayPORXLCD:
  1949                           	opt stack 28
  1950                           
  1951                           ;incstack = 0
  1952  0013AE  0E9C               	movlw	156
  1953  0013B0  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1954  0013B2  0ED7               	movlw	215
  1955  0013B4                     u1907:
  1956  0013B4  2EE8               	decfsz	wreg,f,c
  1957  0013B6  D7FE               	bra	u1907
  1958  0013B8  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1959  0013BA  D7FC               	bra	u1907
  1960  0013BC  F000               	nop	
  1961  0013BE  0012               	return		;funcret
  1962  0013C0                     __end_of_DelayPORXLCD:
  1963                           	opt stack 0
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           indf0	equ	0xFEF
  1969                           postinc0	equ	0xFEE
  1970                           fsr0h	equ	0xFEA
  1971                           fsr0l	equ	0xFE9
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           plusw1	equ	0xFE3
  1975                           fsr1l	equ	0xFE1
  1976                           indf2	equ	0xFDF
  1977                           plusw2	equ	0xFDB
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _Delay10KTCYx *****************
  1983 ;; Defined at:
  1984 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10ktcyx.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  unit            1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  unit            1    1[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2000 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2001 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_OpenXLCD
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text11
  2012  001398                     __ptext11:
  2013                           	opt stack 0
  2014  001398                     _Delay10KTCYx:
  2015                           	opt stack 28
  2016                           
  2017                           ;incstack = 0
  2018                           ;Delay10KTCYx@unit stored from wreg
  2019  001398  6E02               	movwf	Delay10KTCYx@unit,c
  2020  00139A                     l542:
  2021  00139A  0E0D               	movlw	13
  2022  00139C  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  2023  00139E  0EFC               	movlw	252
  2024  0013A0                     u1917:
  2025  0013A0  2EE8               	decfsz	wreg,f,c
  2026  0013A2  D7FE               	bra	u1917
  2027  0013A4  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2028  0013A6  D7FC               	bra	u1917
  2029  0013A8  2E02               	decfsz	Delay10KTCYx@unit,f,c
  2030  0013AA  D7F7               	goto	l542
  2031  0013AC  0012               	return	
  2032  0013AE                     __end_of_Delay10KTCYx:
  2033                           	opt stack 0
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           indf0	equ	0xFEF
  2039                           postinc0	equ	0xFEE
  2040                           fsr0h	equ	0xFEA
  2041                           fsr0l	equ	0xFE9
  2042                           wreg	equ	0xFE8
  2043                           postdec1	equ	0xFE5
  2044                           plusw1	equ	0xFE3
  2045                           fsr1l	equ	0xFE1
  2046                           indf2	equ	0xFDF
  2047                           plusw2	equ	0xFDB
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _BusyXLCD *****************
  2053 ;; Defined at:
  2054 ;;		line 4 in file "../mylcd.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      unsigned char 
  2061 ;; Registers used:
  2062 ;;		wreg, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    1
  2075 ;; This function calls:
  2076 ;;		_DelayFor18TCY
  2077 ;; This function is called by:
  2078 ;;		_inic_XLCD
  2079 ;;		_main
  2080 ;;		_OpenXLCD
  2081 ;;		_putsXLCD
  2082 ;;		_limpa
  2083 ;;		_putrsXLCD
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text12
  2088  00123C                     __ptext12:
  2089                           	opt stack 0
  2090  00123C                     _BusyXLCD:
  2091                           	opt stack 28
  2092                           
  2093                           ;mylcd.c: 6: LATDbits.LATD5 = 1;
  2094                           
  2095                           ;incstack = 0
  2096  00123C  8A8C               	bsf	3980,5,c	;volatile
  2097                           
  2098                           ;mylcd.c: 7: LATDbits.LATD6 = 0;
  2099  00123E  9C8C               	bcf	3980,6,c	;volatile
  2100                           
  2101                           ;mylcd.c: 8: DelayFor18TCY();
  2102  001240  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2103                           
  2104                           ;mylcd.c: 9: LATDbits.LATD4 = 1;
  2105  001244  888C               	bsf	3980,4,c	;volatile
  2106                           
  2107                           ;mylcd.c: 10: DelayFor18TCY();
  2108  001246  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2109                           
  2110                           ;mylcd.c: 28: if(PORTD&0x08)
  2111  00124A  A683               	btfss	3971,3,c	;volatile
  2112  00124C  D00A               	goto	l252
  2113                           
  2114                           ;mylcd.c: 30: {
  2115                           ;mylcd.c: 31: LATDbits.LATD4 = 0;
  2116  00124E  988C               	bcf	3980,4,c	;volatile
  2117                           
  2118                           ;mylcd.c: 32: DelayFor18TCY();
  2119  001250  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2120                           
  2121                           ;mylcd.c: 33: LATDbits.LATD4 = 1;
  2122  001254  888C               	bsf	3980,4,c	;volatile
  2123                           
  2124                           ;mylcd.c: 34: DelayFor18TCY();
  2125  001256  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2126                           
  2127                           ;mylcd.c: 35: LATDbits.LATD4 = 0;
  2128  00125A  988C               	bcf	3980,4,c	;volatile
  2129                           
  2130                           ;mylcd.c: 36: LATDbits.LATD5 = 0;
  2131  00125C  9A8C               	bcf	3980,5,c	;volatile
  2132                           
  2133                           ;mylcd.c: 37: return 1;
  2134  00125E  0E01               	movlw	1
  2135                           
  2136                           ;mylcd.c: 38: }
  2137  001260  0012               	return	
  2138  001262                     l252:
  2139                           
  2140                           ;mylcd.c: 39: else
  2141                           ;mylcd.c: 40: {
  2142                           ;mylcd.c: 41: LATDbits.LATD4 = 0;
  2143  001262  988C               	bcf	3980,4,c	;volatile
  2144                           
  2145                           ;mylcd.c: 42: DelayFor18TCY();
  2146  001264  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2147                           
  2148                           ;mylcd.c: 43: LATDbits.LATD4 = 1;
  2149  001268  888C               	bsf	3980,4,c	;volatile
  2150                           
  2151                           ;mylcd.c: 44: DelayFor18TCY();
  2152  00126A  ECE0  F009         	call	_DelayFor18TCY	;wreg free
  2153                           
  2154                           ;mylcd.c: 45: LATDbits.LATD4 = 0;
  2155  00126E  988C               	bcf	3980,4,c	;volatile
  2156                           
  2157                           ;mylcd.c: 46: LATDbits.LATD5 = 0;
  2158  001270  9A8C               	bcf	3980,5,c	;volatile
  2159                           
  2160                           ;mylcd.c: 47: return 0;
  2161  001272  0E00               	movlw	0
  2162  001274  0012               	return	
  2163  001276                     __end_of_BusyXLCD:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           indf0	equ	0xFEF
  2170                           postinc0	equ	0xFEE
  2171                           fsr0h	equ	0xFEA
  2172                           fsr0l	equ	0xFE9
  2173                           wreg	equ	0xFE8
  2174                           postdec1	equ	0xFE5
  2175                           plusw1	equ	0xFE3
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           plusw2	equ	0xFDB
  2179                           fsr2h	equ	0xFDA
  2180                           fsr2l	equ	0xFD9
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _DelayFor18TCY *****************
  2184 ;; Defined at:
  2185 ;;		line 68 in file "../main.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_BusyXLCD
  2209 ;;		_SetDDRamAddr
  2210 ;;		_WriteCmdXLCD
  2211 ;;		_WriteDataXLCD
  2212 ;;		_ReadAddrXLCD
  2213 ;;		_ReadDataXLCD
  2214 ;;		_SetCGRamAddr
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text13
  2219  0013C0                     __ptext13:
  2220                           	opt stack 0
  2221  0013C0                     _DelayFor18TCY:
  2222                           	opt stack 28
  2223                           
  2224                           ;incstack = 0
  2225  0013C0  0E30               	movlw	48
  2226  0013C2                     u1927:
  2227  0013C2  2EE8               	decfsz	wreg,f,c
  2228  0013C4  D7FE               	bra	u1927
  2229  0013C6  0012               	return		;funcret
  2230  0013C8                     __end_of_DelayFor18TCY:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           indf0	equ	0xFEF
  2237                           postinc0	equ	0xFEE
  2238                           fsr0h	equ	0xFEA
  2239                           fsr0l	equ	0xFE9
  2240                           wreg	equ	0xFE8
  2241                           postdec1	equ	0xFE5
  2242                           plusw1	equ	0xFE3
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           plusw2	equ	0xFDB
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _Mydelay *****************
  2251 ;; Defined at:
  2252 ;;		line 41 in file "../main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  tempo           2    0[COMRAM] int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  i               2    3[COMRAM] int 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         2       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        5 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;;		_limpa
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text14
  2281  0012A8                     __ptext14:
  2282                           	opt stack 0
  2283  0012A8                     _Mydelay:
  2284                           	opt stack 30
  2285                           
  2286                           ;main.c: 43: int i;
  2287                           ;main.c: 44: for (i=0;i<tempo;i++)
  2288                           
  2289                           ;incstack = 0
  2290  0012A8  0E00               	movlw	0
  2291  0012AA  6E05               	movwf	Mydelay@i+1,c
  2292  0012AC  0E00               	movlw	0
  2293  0012AE  6E04               	movwf	Mydelay@i,c
  2294  0012B0  D009               	goto	l179
  2295  0012B2                     
  2296                           ;main.c: 45: {
  2297                           ;main.c: 46: _delay((unsigned long)((1)*(8000000/4000.0)));
  2298  0012B2  0E03               	movlw	3
  2299  0012B4  6E03               	movwf	??_Mydelay& (0+255),c
  2300  0012B6  0E98               	movlw	152
  2301  0012B8                     u1937:
  2302  0012B8  2EE8               	decfsz	wreg,f,c
  2303  0012BA  D7FE               	bra	u1937
  2304  0012BC  2E03               	decfsz	??_Mydelay& (0+255),f,c
  2305  0012BE  D7FC               	bra	u1937
  2306  0012C0  4A04               	infsnz	Mydelay@i,f,c
  2307  0012C2  2A05               	incf	Mydelay@i+1,f,c
  2308  0012C4                     l179:
  2309  0012C4  5001               	movf	Mydelay@tempo,w,c
  2310  0012C6  5C04               	subwf	Mydelay@i,w,c
  2311  0012C8  5005               	movf	Mydelay@i+1,w,c
  2312  0012CA  0A80               	xorlw	128
  2313  0012CC  6E03               	movwf	??_Mydelay& (0+255),c
  2314  0012CE  5002               	movf	Mydelay@tempo+1,w,c
  2315  0012D0  0A80               	xorlw	128
  2316  0012D2  5803               	subwfb	??_Mydelay& (0+255),w,c
  2317  0012D4  B0D8               	btfsc	status,0,c
  2318  0012D6  0012               	return	
  2319  0012D8  D7EC               	goto	l180
  2320  0012DA                     __end_of_Mydelay:
  2321                           	opt stack 0
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           indf0	equ	0xFEF
  2327                           postinc0	equ	0xFEE
  2328                           fsr0h	equ	0xFEA
  2329                           fsr0l	equ	0xFE9
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           plusw1	equ	0xFE3
  2333                           fsr1l	equ	0xFE1
  2334                           indf2	equ	0xFDF
  2335                           plusw2	equ	0xFDB
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _MFRC522_isCard *****************
  2341 ;; Defined at:
  2342 ;;		line 971 in file "../RFIDlib.h"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  TagType         2   43[COMRAM] PTR unsigned char 
  2345 ;;		 -> main@TagType(2), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      unsigned char 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         2       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    4
  2364 ;; This function calls:
  2365 ;;		_MFRC522_Request
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text15
  2372  00137C                     __ptext15:
  2373                           	opt stack 0
  2374  00137C                     _MFRC522_isCard:
  2375                           	opt stack 26
  2376                           
  2377                           ;RFIDlib.h: 974: if (MFRC522_Request(0x26, TagType) == 0)
  2378                           
  2379                           ;incstack = 0
  2380  00137C  C02C  F026         	movff	MFRC522_isCard@TagType,MFRC522_Request@TagType
  2381  001380  C02D  F027         	movff	MFRC522_isCard@TagType+1,MFRC522_Request@TagType+1
  2382  001384  0E26               	movlw	38
  2383  001386  EC14  F008         	call	_MFRC522_Request
  2384  00138A  0900               	iorlw	0
  2385  00138C  A4D8               	btfss	status,2,c
  2386  00138E  D002               	goto	l164
  2387                           
  2388                           ;RFIDlib.h: 976: return 1;
  2389  001390  0E01               	movlw	1
  2390  001392  0012               	return	
  2391  001394                     l164:
  2392                           
  2393                           ;RFIDlib.h: 978: else
  2394                           ;RFIDlib.h: 980: return 0;
  2395  001394  0E00               	movlw	0
  2396  001396  0012               	return	
  2397  001398                     __end_of_MFRC522_isCard:
  2398                           	opt stack 0
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           indf0	equ	0xFEF
  2404                           postinc0	equ	0xFEE
  2405                           fsr0h	equ	0xFEA
  2406                           fsr0l	equ	0xFE9
  2407                           wreg	equ	0xFE8
  2408                           postdec1	equ	0xFE5
  2409                           plusw1	equ	0xFE3
  2410                           fsr1l	equ	0xFE1
  2411                           indf2	equ	0xFDF
  2412                           plusw2	equ	0xFDB
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _MFRC522_Request *****************
  2418 ;; Defined at:
  2419 ;;		line 635 in file "../RFIDlib.h"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  reqMode         1    wreg     unsigned char 
  2422 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  2423 ;;		 -> main@TagType(2), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  reqMode         1   39[COMRAM] unsigned char 
  2426 ;;  backBits        2   41[COMRAM] unsigned int 
  2427 ;;  _status         1   40[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      unsigned char 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2437 ;;      Params:         2       0       0       0       0       0       0       0       0
  2438 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        6 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		_MFRC522_ToCard
  2446 ;;		_MFRC522_Wr
  2447 ;; This function is called by:
  2448 ;;		_MFRC522_isCard
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text16
  2453  001028                     __ptext16:
  2454                           	opt stack 0
  2455  001028                     _MFRC522_Request:
  2456                           	opt stack 26
  2457                           
  2458                           ;incstack = 0
  2459                           ;MFRC522_Request@reqMode stored from wreg
  2460  001028  6E28               	movwf	MFRC522_Request@reqMode,c
  2461                           
  2462                           ;RFIDlib.h: 638: char _status;
  2463                           ;RFIDlib.h: 640: unsigned backBits;
  2464                           ;RFIDlib.h: 642: MFRC522_Wr(0x0D, 0x07);
  2465  00102A  0E00               	movlw	0
  2466  00102C  6E02               	movwf	MFRC522_Wr@Address+1,c
  2467  00102E  0E0D               	movlw	13
  2468  001030  6E01               	movwf	MFRC522_Wr@Address,c
  2469  001032  0E00               	movlw	0
  2470  001034  6E04               	movwf	MFRC522_Wr@value+1,c
  2471  001036  0E07               	movlw	7
  2472  001038  6E03               	movwf	MFRC522_Wr@value,c
  2473  00103A  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  2474                           
  2475                           ;RFIDlib.h: 644: TagType[0] = reqMode;
  2476  00103E  C026  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  2477  001042  C027  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  2478  001046  C028  FFDF         	movff	MFRC522_Request@reqMode,indf2
  2479                           
  2480                           ;RFIDlib.h: 646: _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  2481  00104A  C026  F013         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  2482  00104E  C027  F014         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  2483  001052  0E01               	movlw	1
  2484  001054  6E15               	movwf	MFRC522_ToCard@sendLen,c
  2485  001056  C026  F016         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  2486  00105A  C027  F017         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  2487  00105E  0E2A               	movlw	low MFRC522_Request@backBits
  2488  001060  6E18               	movwf	MFRC522_ToCard@backLen,c
  2489  001062  0E00               	movlw	high MFRC522_Request@backBits
  2490  001064  6E19               	movwf	MFRC522_ToCard@backLen+1,c
  2491  001066  0E0C               	movlw	12
  2492  001068  EC06  F004         	call	_MFRC522_ToCard
  2493  00106C  6E29               	movwf	MFRC522_Request@_status,c
  2494                           
  2495                           ;RFIDlib.h: 648: if ((_status != 0) || (backBits != 0x10))
  2496  00106E  5029               	movf	MFRC522_Request@_status,w,c
  2497  001070  A4D8               	btfss	status,2,c
  2498  001072  D005               	goto	u1320
  2499  001074  0E10               	movlw	16
  2500  001076  182A               	xorwf	MFRC522_Request@backBits,w,c
  2501  001078  102B               	iorwf	MFRC522_Request@backBits+1,w,c
  2502  00107A  B4D8               	btfsc	status,2,c
  2503  00107C  D002               	goto	l103
  2504  00107E                     u1320:
  2505                           
  2506                           ;RFIDlib.h: 649: {
  2507                           ;RFIDlib.h: 651: _status = 2;
  2508  00107E  0E02               	movlw	2
  2509  001080  6E29               	movwf	MFRC522_Request@_status,c
  2510  001082                     l103:
  2511                           
  2512                           ;RFIDlib.h: 653: }
  2513                           ;RFIDlib.h: 655: return _status;
  2514  001082  5029               	movf	MFRC522_Request@_status,w,c
  2515  001084  0012               	return	
  2516  001086                     __end_of_MFRC522_Request:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           indf0	equ	0xFEF
  2523                           postinc0	equ	0xFEE
  2524                           fsr0h	equ	0xFEA
  2525                           fsr0l	equ	0xFE9
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           plusw1	equ	0xFE3
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           plusw2	equ	0xFDB
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _MFRC522_ReadCardSerial *****************
  2537 ;; Defined at:
  2538 ;;		line 984 in file "../RFIDlib.h"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  str             2   45[COMRAM] PTR unsigned char 
  2541 ;;		 -> main@UID(10), 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  _status         1   47[COMRAM] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      unsigned char 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         2       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2556 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:        3 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    4
  2560 ;; This function calls:
  2561 ;;		_MFRC522_AntiColl
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text17
  2568  00130C                     __ptext17:
  2569                           	opt stack 0
  2570  00130C                     _MFRC522_ReadCardSerial:
  2571                           	opt stack 26
  2572                           
  2573                           ;RFIDlib.h: 987: char _status;
  2574                           ;RFIDlib.h: 989: _status = MFRC522_AntiColl(str);
  2575                           
  2576                           ;incstack = 0
  2577  00130C  C02E  F026         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  2578  001310  C02F  F027         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  2579  001314  EC17  F006         	call	_MFRC522_AntiColl	;wreg free
  2580  001318  6E30               	movwf	MFRC522_ReadCardSerial@_status,c
  2581                           
  2582                           ;RFIDlib.h: 991: str[5] = 0;
  2583  00131A  EE20 F005          	lfsr	2,5
  2584  00131E  502E               	movf	MFRC522_ReadCardSerial@str,w,c
  2585  001320  26D9               	addwf	fsr2l,f,c
  2586  001322  502F               	movf	MFRC522_ReadCardSerial@str+1,w,c
  2587  001324  22DA               	addwfc	fsr2h,f,c
  2588  001326  0E00               	movlw	0
  2589  001328  6EDF               	movwf	indf2,c
  2590                           
  2591                           ;RFIDlib.h: 993: if (_status == 0)
  2592  00132A  5030               	movf	MFRC522_ReadCardSerial@_status,w,c
  2593  00132C  A4D8               	btfss	status,2,c
  2594  00132E  D002               	goto	l169
  2595                           
  2596                           ;RFIDlib.h: 995: return 1;
  2597  001330  0E01               	movlw	1
  2598  001332  0012               	return	
  2599  001334                     l169:
  2600                           
  2601                           ;RFIDlib.h: 997: else
  2602                           ;RFIDlib.h: 999: return 0;
  2603  001334  0E00               	movlw	0
  2604  001336  0012               	return	
  2605  001338                     __end_of_MFRC522_ReadCardSerial:
  2606                           	opt stack 0
  2607                           tblptru	equ	0xFF8
  2608                           tblptrh	equ	0xFF7
  2609                           tblptrl	equ	0xFF6
  2610                           tablat	equ	0xFF5
  2611                           indf0	equ	0xFEF
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           plusw1	equ	0xFE3
  2618                           fsr1l	equ	0xFE1
  2619                           indf2	equ	0xFDF
  2620                           plusw2	equ	0xFDB
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _MFRC522_AntiColl *****************
  2626 ;; Defined at:
  2627 ;;		line 925 in file "../RFIDlib.h"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  serNum          2   37[COMRAM] PTR unsigned char 
  2630 ;;		 -> main@UID(10), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  unLen           2   41[COMRAM] unsigned int 
  2633 ;;  i               1   44[COMRAM] unsigned char 
  2634 ;;  _status         1   43[COMRAM] unsigned char 
  2635 ;;  serNumCheck     1   40[COMRAM] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      unsigned char 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2645 ;;      Params:         2       0       0       0       0       0       0       0       0
  2646 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2647 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2648 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2649 ;;Total ram usage:        8 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    3
  2652 ;; This function calls:
  2653 ;;		_MFRC522_Clear_Bit
  2654 ;;		_MFRC522_ToCard
  2655 ;;		_MFRC522_Wr
  2656 ;; This function is called by:
  2657 ;;		_MFRC522_ReadCardSerial
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text18
  2662  000C2E                     __ptext18:
  2663                           	opt stack 0
  2664  000C2E                     _MFRC522_AntiColl:
  2665                           	opt stack 26
  2666                           
  2667                           ;RFIDlib.h: 928: char _status;
  2668                           ;RFIDlib.h: 930: char i;
  2669                           ;RFIDlib.h: 932: char serNumCheck = 0;
  2670                           
  2671                           ;incstack = 0
  2672  000C2E  0E00               	movlw	0
  2673  000C30  6E29               	movwf	MFRC522_AntiColl@serNumCheck,c
  2674                           
  2675                           ;RFIDlib.h: 934: unsigned unLen;
  2676                           ;RFIDlib.h: 936: MFRC522_Wr(0x0D, 0x00);
  2677  000C32  0E00               	movlw	0
  2678  000C34  6E02               	movwf	MFRC522_Wr@Address+1,c
  2679  000C36  0E0D               	movlw	13
  2680  000C38  6E01               	movwf	MFRC522_Wr@Address,c
  2681  000C3A  0E00               	movlw	0
  2682  000C3C  6E04               	movwf	MFRC522_Wr@value+1,c
  2683  000C3E  0E00               	movlw	0
  2684  000C40  6E03               	movwf	MFRC522_Wr@value,c
  2685  000C42  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  2686                           
  2687                           ;RFIDlib.h: 938: serNum[0] = 0x93;
  2688  000C46  C026  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  2689  000C4A  C027  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  2690  000C4E  0E93               	movlw	147
  2691  000C50  6EDF               	movwf	indf2,c
  2692                           
  2693                           ;RFIDlib.h: 940: serNum[1] = 0x20;
  2694  000C52  EE20 F001          	lfsr	2,1
  2695  000C56  5026               	movf	MFRC522_AntiColl@serNum,w,c
  2696  000C58  26D9               	addwf	fsr2l,f,c
  2697  000C5A  5027               	movf	MFRC522_AntiColl@serNum+1,w,c
  2698  000C5C  22DA               	addwfc	fsr2h,f,c
  2699  000C5E  0E20               	movlw	32
  2700  000C60  6EDF               	movwf	indf2,c
  2701                           
  2702                           ;RFIDlib.h: 942: MFRC522_Clear_Bit(0x08, 0x08);
  2703  000C62  0E08               	movlw	8
  2704  000C64  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  2705  000C66  0E08               	movlw	8
  2706  000C68  ECBF  F008         	call	_MFRC522_Clear_Bit
  2707                           
  2708                           ;RFIDlib.h: 944: _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  2709  000C6C  C026  F013         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  2710  000C70  C027  F014         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  2711  000C74  0E02               	movlw	2
  2712  000C76  6E15               	movwf	MFRC522_ToCard@sendLen,c
  2713  000C78  C026  F016         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  2714  000C7C  C027  F017         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  2715  000C80  0E2A               	movlw	low MFRC522_AntiColl@unLen
  2716  000C82  6E18               	movwf	MFRC522_ToCard@backLen,c
  2717  000C84  0E00               	movlw	high MFRC522_AntiColl@unLen
  2718  000C86  6E19               	movwf	MFRC522_ToCard@backLen+1,c
  2719  000C88  0E0C               	movlw	12
  2720  000C8A  EC06  F004         	call	_MFRC522_ToCard
  2721  000C8E  6E2C               	movwf	MFRC522_AntiColl@_status,c
  2722                           
  2723                           ;RFIDlib.h: 946: if (_status == 0)
  2724  000C90  502C               	movf	MFRC522_AntiColl@_status,w,c
  2725  000C92  A4D8               	btfss	status,2,c
  2726  000C94  D01E               	goto	l160
  2727                           
  2728                           ;RFIDlib.h: 947: {
  2729                           ;RFIDlib.h: 949: for (i = 0; i < 4; i++)
  2730  000C96  0E00               	movlw	0
  2731  000C98  6E2D               	movwf	MFRC522_AntiColl@i,c
  2732  000C9A                     l2013:
  2733  000C9A  0E03               	movlw	3
  2734  000C9C  642D               	cpfsgt	MFRC522_AntiColl@i,c
  2735  000C9E  D001               	goto	l158
  2736  000CA0  D00C               	goto	u1350
  2737  000CA2                     l158:
  2738                           
  2739                           ;RFIDlib.h: 950: {
  2740                           ;RFIDlib.h: 952: serNumCheck ^= serNum[i];
  2741  000CA2  502D               	movf	MFRC522_AntiColl@i,w,c
  2742  000CA4  0D01               	mullw	1
  2743  000CA6  50F3               	movf	prodl,w,c
  2744  000CA8  2426               	addwf	MFRC522_AntiColl@serNum,w,c
  2745  000CAA  6ED9               	movwf	fsr2l,c
  2746  000CAC  50F4               	movf	prodh,w,c
  2747  000CAE  2027               	addwfc	MFRC522_AntiColl@serNum+1,w,c
  2748  000CB0  6EDA               	movwf	fsr2h,c
  2749  000CB2  50DF               	movf	indf2,w,c
  2750  000CB4  1A29               	xorwf	MFRC522_AntiColl@serNumCheck,f,c
  2751  000CB6  2A2D               	incf	MFRC522_AntiColl@i,f,c
  2752  000CB8  D7F0               	goto	l2013
  2753  000CBA                     u1350:
  2754                           
  2755                           ;RFIDlib.h: 954: }
  2756                           ;RFIDlib.h: 958: if (serNumCheck != serNum[4])
  2757  000CBA  EE20 F004          	lfsr	2,4
  2758  000CBE  5026               	movf	MFRC522_AntiColl@serNum,w,c
  2759  000CC0  26D9               	addwf	fsr2l,f,c
  2760  000CC2  5027               	movf	MFRC522_AntiColl@serNum+1,w,c
  2761  000CC4  22DA               	addwfc	fsr2h,f,c
  2762  000CC6  5029               	movf	MFRC522_AntiColl@serNumCheck,w,c
  2763  000CC8  18DE               	xorwf	postinc2,w,c
  2764  000CCA  B4D8               	btfsc	status,2,c
  2765  000CCC  D002               	goto	l160
  2766                           
  2767                           ;RFIDlib.h: 959: {
  2768                           ;RFIDlib.h: 961: _status = 2;
  2769  000CCE  0E02               	movlw	2
  2770  000CD0  6E2C               	movwf	MFRC522_AntiColl@_status,c
  2771  000CD2                     l160:
  2772                           
  2773                           ;RFIDlib.h: 963: }
  2774                           ;RFIDlib.h: 965: }
  2775                           ;RFIDlib.h: 967: return _status;
  2776  000CD2  502C               	movf	MFRC522_AntiColl@_status,w,c
  2777  000CD4  0012               	return	
  2778  000CD6                     __end_of_MFRC522_AntiColl:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           indf0	equ	0xFEF
  2787                           postinc0	equ	0xFEE
  2788                           fsr0h	equ	0xFEA
  2789                           fsr0l	equ	0xFE9
  2790                           wreg	equ	0xFE8
  2791                           postdec1	equ	0xFE5
  2792                           plusw1	equ	0xFE3
  2793                           fsr1l	equ	0xFE1
  2794                           indf2	equ	0xFDF
  2795                           postinc2	equ	0xFDE
  2796                           plusw2	equ	0xFDB
  2797                           fsr2h	equ	0xFDA
  2798                           fsr2l	equ	0xFD9
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function _MFRC522_ToCard *****************
  2802 ;; Defined at:
  2803 ;;		line 454 in file "../RFIDlib.h"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  command         1    wreg     unsigned char 
  2806 ;;  sendData        2   18[COMRAM] PTR unsigned char 
  2807 ;;		 -> main@UID(10), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  2808 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  2809 ;;  sendLen         1   20[COMRAM] unsigned char 
  2810 ;;  backData        2   21[COMRAM] PTR unsigned char 
  2811 ;;		 -> main@UID(10), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  2812 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  2813 ;;  backLen         2   23[COMRAM] PTR unsigned int 
  2814 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Read@unLen(2), MFRC522_Write@recvBits(2), MFRC522_Auth@recvBits(2), 
  2815 ;;		 -> MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  command         1   33[COMRAM] unsigned char 
  2818 ;;  i               2   34[COMRAM] unsigned int 
  2819 ;;  n               1   36[COMRAM] unsigned char 
  2820 ;;  irqEn           1   32[COMRAM] unsigned char 
  2821 ;;  lastBits        1   31[COMRAM] unsigned char 
  2822 ;;  _status         1   30[COMRAM] unsigned char 
  2823 ;;  waitIRq         1   29[COMRAM] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      unsigned char 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2833 ;;      Params:         7       0       0       0       0       0       0       0       0
  2834 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2836 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2837 ;;Total ram usage:       19 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    2
  2840 ;; This function calls:
  2841 ;;		_MFRC522_Clear_Bit
  2842 ;;		_MFRC522_Rd
  2843 ;;		_MFRC522_Set_Bit
  2844 ;;		_MFRC522_Wr
  2845 ;; This function is called by:
  2846 ;;		_MFRC522_Request
  2847 ;;		_MFRC522_AntiColl
  2848 ;;		_MFRC522_SelectTag
  2849 ;;		_MFRC522_Halt
  2850 ;;		_MFRC522_Auth
  2851 ;;		_MFRC522_Write
  2852 ;;		_MFRC522_Read
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text19
  2857  00080C                     __ptext19:
  2858                           	opt stack 0
  2859  00080C                     _MFRC522_ToCard:
  2860                           	opt stack 26
  2861                           
  2862                           ;incstack = 0
  2863                           ;MFRC522_ToCard@command stored from wreg
  2864  00080C  6E22               	movwf	MFRC522_ToCard@command,c
  2865                           
  2866                           ;RFIDlib.h: 457: char _status = 2;
  2867  00080E  0E02               	movlw	2
  2868  000810  6E1F               	movwf	MFRC522_ToCard@_status,c
  2869                           
  2870                           ;RFIDlib.h: 459: char irqEn = 0x00;
  2871  000812  0E00               	movlw	0
  2872  000814  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2873                           
  2874                           ;RFIDlib.h: 461: char waitIRq = 0x00;
  2875  000816  0E00               	movlw	0
  2876  000818  6E1E               	movwf	MFRC522_ToCard@waitIRq,c
  2877                           
  2878                           ;RFIDlib.h: 463: char lastBits;
  2879                           ;RFIDlib.h: 465: char n;
  2880                           ;RFIDlib.h: 467: unsigned i;
  2881                           ;RFIDlib.h: 471: switch (command)
  2882  00081A  D009               	goto	l75
  2883  00081C                     
  2884                           ;RFIDlib.h: 476: {
  2885                           ;RFIDlib.h: 478: irqEn = 0x12;
  2886  00081C  0E12               	movlw	18
  2887  00081E  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2888                           
  2889                           ;RFIDlib.h: 480: waitIRq = 0x10;
  2890  000820  0E10               	movlw	16
  2891  000822  D003               	goto	L1
  2892  000824                     
  2893                           ;RFIDlib.h: 488: {
  2894                           ;RFIDlib.h: 490: irqEn = 0x77;
  2895  000824  0E77               	movlw	119
  2896  000826  6E21               	movwf	MFRC522_ToCard@irqEn,c
  2897                           
  2898                           ;RFIDlib.h: 492: waitIRq = 0x30;
  2899  000828  0E30               	movlw	48
  2900  00082A                     L1:
  2901  00082A  6E1E               	movwf	MFRC522_ToCard@waitIRq,c
  2902                           
  2903                           ;RFIDlib.h: 502: }
  2904                           
  2905                           ;RFIDlib.h: 500: break;
  2906                           
  2907                           ;RFIDlib.h: 496: }
  2908                           ;RFIDlib.h: 498: default:
  2909                           
  2910                           ;RFIDlib.h: 494: break;
  2911  00082C  D007               	goto	l77
  2912  00082E                     l75:
  2913  00082E  5022               	movf	MFRC522_ToCard@command,w,c
  2914                           
  2915                           ; Switch size 1, requested type "space"
  2916                           ; Number of cases is 2, Range of values is 12 to 14
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte            7     4 (average)
  2920                           ;	Chosen strategy is simple_byte
  2921  000830  0A0C               	xorlw	12	; case 12
  2922  000832  B4D8               	btfsc	status,2,c
  2923  000834  D7F7               	goto	l78
  2924  000836  0A02               	xorlw	2	; case 14
  2925  000838  B4D8               	btfsc	status,2,c
  2926  00083A  D7F0               	goto	l76
  2927  00083C                     l77:
  2928                           
  2929                           ;RFIDlib.h: 504: MFRC522_Wr(0x02, irqEn | 0x80);
  2930  00083C  0E00               	movlw	0
  2931  00083E  6E02               	movwf	MFRC522_Wr@Address+1,c
  2932  000840  0E02               	movlw	2
  2933  000842  6E01               	movwf	MFRC522_Wr@Address,c
  2934  000844  0E80               	movlw	128
  2935  000846  C021  F01A         	movff	MFRC522_ToCard@irqEn,??_MFRC522_ToCard
  2936  00084A  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  2937  00084C  101A               	iorwf	??_MFRC522_ToCard,w,c
  2938  00084E  6E03               	movwf	MFRC522_Wr@value,c
  2939  000850  501B               	movf	??_MFRC522_ToCard+1,w,c
  2940  000852  6E04               	movwf	MFRC522_Wr@value+1,c
  2941  000854  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  2942                           
  2943                           ;RFIDlib.h: 506: MFRC522_Clear_Bit(0x04, 0x80);
  2944  000858  0E80               	movlw	128
  2945  00085A  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  2946  00085C  0E04               	movlw	4
  2947  00085E  ECBF  F008         	call	_MFRC522_Clear_Bit
  2948                           
  2949                           ;RFIDlib.h: 508: MFRC522_Set_Bit(0x0A, 0x80);
  2950  000862  0E80               	movlw	128
  2951  000864  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  2952  000866  0E0A               	movlw	10
  2953  000868  EC6D  F009         	call	_MFRC522_Set_Bit
  2954                           
  2955                           ;RFIDlib.h: 510: MFRC522_Wr(0x01, 0x00);
  2956  00086C  0E00               	movlw	0
  2957  00086E  6E02               	movwf	MFRC522_Wr@Address+1,c
  2958  000870  0E01               	movlw	1
  2959  000872  6E01               	movwf	MFRC522_Wr@Address,c
  2960  000874  0E00               	movlw	0
  2961  000876  6E04               	movwf	MFRC522_Wr@value+1,c
  2962  000878  0E00               	movlw	0
  2963  00087A  6E03               	movwf	MFRC522_Wr@value,c
  2964  00087C  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  2965                           
  2966                           ;RFIDlib.h: 514: for (i = 0; i < sendLen; i++)
  2967  000880  0E00               	movlw	0
  2968  000882  6E24               	movwf	MFRC522_ToCard@i+1,c
  2969  000884  0E00               	movlw	0
  2970  000886  6E23               	movwf	MFRC522_ToCard@i,c
  2971  000888  D013               	goto	l80
  2972  00088A                     
  2973                           ;RFIDlib.h: 515: {
  2974                           ;RFIDlib.h: 517: MFRC522_Wr(0x09, sendData[i]);
  2975  00088A  0E00               	movlw	0
  2976  00088C  6E02               	movwf	MFRC522_Wr@Address+1,c
  2977  00088E  0E09               	movlw	9
  2978  000890  6E01               	movwf	MFRC522_Wr@Address,c
  2979  000892  5023               	movf	MFRC522_ToCard@i,w,c
  2980  000894  2413               	addwf	MFRC522_ToCard@sendData,w,c
  2981  000896  6ED9               	movwf	fsr2l,c
  2982  000898  5024               	movf	MFRC522_ToCard@i+1,w,c
  2983  00089A  2014               	addwfc	MFRC522_ToCard@sendData+1,w,c
  2984  00089C  6EDA               	movwf	fsr2h,c
  2985  00089E  50DF               	movf	indf2,w,c
  2986  0008A0  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2987  0008A2  501A               	movf	??_MFRC522_ToCard,w,c
  2988  0008A4  6E03               	movwf	MFRC522_Wr@value,c
  2989  0008A6  6A04               	clrf	MFRC522_Wr@value+1,c
  2990  0008A8  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  2991  0008AC  4A23               	infsnz	MFRC522_ToCard@i,f,c
  2992  0008AE  2A24               	incf	MFRC522_ToCard@i+1,f,c
  2993  0008B0                     l80:
  2994  0008B0  5015               	movf	MFRC522_ToCard@sendLen,w,c
  2995  0008B2  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  2996  0008B4  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  2997  0008B6  501A               	movf	??_MFRC522_ToCard,w,c
  2998  0008B8  5C23               	subwf	MFRC522_ToCard@i,w,c
  2999  0008BA  501B               	movf	??_MFRC522_ToCard+1,w,c
  3000  0008BC  5824               	subwfb	MFRC522_ToCard@i+1,w,c
  3001  0008BE  A0D8               	btfss	status,0,c
  3002  0008C0  D7E4               	goto	l81
  3003                           
  3004                           ;RFIDlib.h: 519: }
  3005                           ;RFIDlib.h: 523: MFRC522_Wr(0x01, command);
  3006  0008C2  0E00               	movlw	0
  3007  0008C4  6E02               	movwf	MFRC522_Wr@Address+1,c
  3008  0008C6  0E01               	movlw	1
  3009  0008C8  6E01               	movwf	MFRC522_Wr@Address,c
  3010  0008CA  C022  F003         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  3011  0008CE  6A04               	clrf	MFRC522_Wr@value+1,c
  3012  0008D0  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3013                           
  3014                           ;RFIDlib.h: 525: if (command == 0x0C)
  3015  0008D4  0E0C               	movlw	12
  3016  0008D6  1822               	xorwf	MFRC522_ToCard@command,w,c
  3017  0008D8  A4D8               	btfss	status,2,c
  3018  0008DA  D005               	goto	l83
  3019                           
  3020                           ;RFIDlib.h: 526: {
  3021                           ;RFIDlib.h: 528: MFRC522_Set_Bit(0x0D, 0x80);
  3022  0008DC  0E80               	movlw	128
  3023  0008DE  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  3024  0008E0  0E0D               	movlw	13
  3025  0008E2  EC6D  F009         	call	_MFRC522_Set_Bit
  3026  0008E6                     l83:
  3027                           
  3028                           ;RFIDlib.h: 530: }
  3029                           ;RFIDlib.h: 536: i = 0xFFFF;
  3030  0008E6  6823               	setf	MFRC522_ToCard@i,c
  3031  0008E8  6824               	setf	MFRC522_ToCard@i+1,c
  3032  0008EA                     l84:
  3033                           
  3034                           ;RFIDlib.h: 539: {
  3035                           ;RFIDlib.h: 545: n = MFRC522_Rd(0x04);
  3036  0008EA  0E00               	movlw	0
  3037  0008EC  6E02               	movwf	MFRC522_Rd@Address+1,c
  3038  0008EE  0E04               	movlw	4
  3039  0008F0  6E01               	movwf	MFRC522_Rd@Address,c
  3040  0008F2  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3041  0008F6  5001               	movf	?_MFRC522_Rd,w,c
  3042  0008F8  6E25               	movwf	MFRC522_ToCard@n,c
  3043                           
  3044                           ;RFIDlib.h: 547: i--;
  3045  0008FA  0623               	decf	MFRC522_ToCard@i,f,c
  3046  0008FC  A0D8               	btfss	status,0,c
  3047  0008FE  0624               	decf	MFRC522_ToCard@i+1,f,c
  3048                           
  3049                           ;RFIDlib.h: 549: } while (i && !(n & 0x01) && !(n & waitIRq));
  3050  000900  5023               	movf	MFRC522_ToCard@i,w,c
  3051  000902  1024               	iorwf	MFRC522_ToCard@i+1,w,c
  3052  000904  A4D8               	btfss	status,2,c
  3053  000906  B025               	btfsc	MFRC522_ToCard@n,0,c
  3054  000908  D005               	goto	u1220
  3055  00090A  5025               	movf	MFRC522_ToCard@n,w,c
  3056  00090C  141E               	andwf	MFRC522_ToCard@waitIRq,w,c
  3057  00090E  0900               	iorlw	0
  3058  000910  B4D8               	btfsc	status,2,c
  3059  000912  D7EB               	goto	l84
  3060  000914                     u1220:
  3061                           
  3062                           ;RFIDlib.h: 551: MFRC522_Clear_Bit(0x0D, 0x80);
  3063  000914  0E80               	movlw	128
  3064  000916  6E0B               	movwf	MFRC522_Clear_Bit@mask,c
  3065  000918  0E0D               	movlw	13
  3066  00091A  ECBF  F008         	call	_MFRC522_Clear_Bit
  3067                           
  3068                           ;RFIDlib.h: 553: if (i != 0)
  3069  00091E  5023               	movf	MFRC522_ToCard@i,w,c
  3070  000920  1024               	iorwf	MFRC522_ToCard@i+1,w,c
  3071  000922  B4D8               	btfsc	status,2,c
  3072  000924  D08D               	goto	l99
  3073                           
  3074                           ;RFIDlib.h: 554: {
  3075                           ;RFIDlib.h: 556: if (!(MFRC522_Rd(0x06) & 0x1B))
  3076  000926  0E00               	movlw	0
  3077  000928  6E02               	movwf	MFRC522_Rd@Address+1,c
  3078  00092A  0E06               	movlw	6
  3079  00092C  6E01               	movwf	MFRC522_Rd@Address,c
  3080  00092E  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3081  000932  0E1B               	movlw	27
  3082  000934  1601               	andwf	?_MFRC522_Rd,f,c
  3083  000936  0E00               	movlw	0
  3084  000938  1602               	andwf	?_MFRC522_Rd+1,f,c
  3085  00093A  5001               	movf	?_MFRC522_Rd,w,c
  3086  00093C  1002               	iorwf	?_MFRC522_Rd+1,w,c
  3087  00093E  A4D8               	btfss	status,2,c
  3088  000940  D07D               	goto	l89
  3089                           
  3090                           ;RFIDlib.h: 557: {
  3091                           ;RFIDlib.h: 559: _status = 0;
  3092  000942  0E00               	movlw	0
  3093  000944  6E1F               	movwf	MFRC522_ToCard@_status,c
  3094                           
  3095                           ;RFIDlib.h: 561: if (n & irqEn & 0x01)
  3096  000946  5025               	movf	MFRC522_ToCard@n,w,c
  3097  000948  1421               	andwf	MFRC522_ToCard@irqEn,w,c
  3098  00094A  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  3099  00094C  A01A               	btfss	??_MFRC522_ToCard,0,c
  3100  00094E  D002               	goto	l90
  3101                           
  3102                           ;RFIDlib.h: 562: {
  3103                           ;RFIDlib.h: 564: _status = 1;
  3104  000950  0E01               	movlw	1
  3105  000952  6E1F               	movwf	MFRC522_ToCard@_status,c
  3106  000954                     l90:
  3107                           
  3108                           ;RFIDlib.h: 566: }
  3109                           ;RFIDlib.h: 568: if (command == 0x0C)
  3110  000954  0E0C               	movlw	12
  3111  000956  1822               	xorwf	MFRC522_ToCard@command,w,c
  3112  000958  A4D8               	btfss	status,2,c
  3113  00095A  D072               	goto	l99
  3114                           
  3115                           ;RFIDlib.h: 569: {
  3116                           ;RFIDlib.h: 571: n = MFRC522_Rd(0x0A);
  3117  00095C  0E00               	movlw	0
  3118  00095E  6E02               	movwf	MFRC522_Rd@Address+1,c
  3119  000960  0E0A               	movlw	10
  3120  000962  6E01               	movwf	MFRC522_Rd@Address,c
  3121  000964  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3122  000968  5001               	movf	?_MFRC522_Rd,w,c
  3123  00096A  6E25               	movwf	MFRC522_ToCard@n,c
  3124                           
  3125                           ;RFIDlib.h: 573: lastBits = MFRC522_Rd(0x0C) & 0x07;
  3126  00096C  0E00               	movlw	0
  3127  00096E  6E02               	movwf	MFRC522_Rd@Address+1,c
  3128  000970  0E0C               	movlw	12
  3129  000972  6E01               	movwf	MFRC522_Rd@Address,c
  3130  000974  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3131  000978  5001               	movf	?_MFRC522_Rd,w,c
  3132  00097A  0B07               	andlw	7
  3133  00097C  6E20               	movwf	MFRC522_ToCard@lastBits,c
  3134                           
  3135                           ;RFIDlib.h: 575: if (lastBits)
  3136  00097E  5020               	movf	MFRC522_ToCard@lastBits,w,c
  3137  000980  B4D8               	btfsc	status,2,c
  3138  000982  D021               	goto	l92
  3139                           
  3140                           ;RFIDlib.h: 576: {
  3141                           ;RFIDlib.h: 578: *backLen = (n - 1) * 8 + lastBits;
  3142  000984  0EF8               	movlw	248
  3143  000986  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  3144  000988  0EFF               	movlw	255
  3145  00098A  6E1B               	movwf	(??_MFRC522_ToCard+1)& (0+255),c
  3146  00098C  5020               	movf	MFRC522_ToCard@lastBits,w,c
  3147  00098E  C025  F01C         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  3148  000992  6A1D               	clrf	(??_MFRC522_ToCard+3)& (0+255),c
  3149  000994  90D8               	bcf	status,0,c
  3150  000996  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  3151  000998  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  3152  00099A  90D8               	bcf	status,0,c
  3153  00099C  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  3154  00099E  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  3155  0009A0  90D8               	bcf	status,0,c
  3156  0009A2  361C               	rlcf	??_MFRC522_ToCard+2,f,c
  3157  0009A4  361D               	rlcf	??_MFRC522_ToCard+3,f,c
  3158  0009A6  261C               	addwf	??_MFRC522_ToCard+2,f,c
  3159  0009A8  0E00               	movlw	0
  3160  0009AA  221D               	addwfc	??_MFRC522_ToCard+3,f,c
  3161  0009AC  501A               	movf	??_MFRC522_ToCard,w,c
  3162  0009AE  261C               	addwf	??_MFRC522_ToCard+2,f,c
  3163  0009B0  501B               	movf	??_MFRC522_ToCard+1,w,c
  3164  0009B2  221D               	addwfc	??_MFRC522_ToCard+3,f,c
  3165  0009B4  C018  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  3166  0009B8  C019  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  3167  0009BC  C01C  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  3168  0009C0  C01D  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  3169                           
  3170                           ;RFIDlib.h: 580: }
  3171  0009C4  D00A               	goto	l93
  3172  0009C6                     l92:
  3173                           
  3174                           ;RFIDlib.h: 581: else
  3175                           ;RFIDlib.h: 582: {
  3176                           ;RFIDlib.h: 584: *backLen = n * 8;
  3177  0009C6  5025               	movf	MFRC522_ToCard@n,w,c
  3178  0009C8  0D08               	mullw	8
  3179  0009CA  C018  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  3180  0009CE  C019  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  3181  0009D2  CFF3 FFDE          	movff	prodl,postinc2
  3182  0009D6  CFF4 FFDD          	movff	prodh,postdec2
  3183  0009DA                     l93:
  3184                           
  3185                           ;RFIDlib.h: 586: }
  3186                           ;RFIDlib.h: 588: if (n == 0)
  3187  0009DA  5025               	movf	MFRC522_ToCard@n,w,c
  3188  0009DC  A4D8               	btfss	status,2,c
  3189  0009DE  D002               	goto	l94
  3190                           
  3191                           ;RFIDlib.h: 589: {
  3192                           ;RFIDlib.h: 591: n = 1;
  3193  0009E0  0E01               	movlw	1
  3194  0009E2  6E25               	movwf	MFRC522_ToCard@n,c
  3195  0009E4                     l94:
  3196                           
  3197                           ;RFIDlib.h: 593: }
  3198                           ;RFIDlib.h: 595: if (n > 16)
  3199  0009E4  0E10               	movlw	16
  3200  0009E6  6425               	cpfsgt	MFRC522_ToCard@n,c
  3201  0009E8  D002               	goto	l95
  3202                           
  3203                           ;RFIDlib.h: 596: {
  3204                           ;RFIDlib.h: 598: n = 16;
  3205  0009EA  0E10               	movlw	16
  3206  0009EC  6E25               	movwf	MFRC522_ToCard@n,c
  3207  0009EE                     l95:
  3208                           
  3209                           ;RFIDlib.h: 600: }
  3210                           ;RFIDlib.h: 604: for (i = 0; i < n; i++)
  3211  0009EE  0E00               	movlw	0
  3212  0009F0  6E24               	movwf	MFRC522_ToCard@i+1,c
  3213  0009F2  0E00               	movlw	0
  3214  0009F4  6E23               	movwf	MFRC522_ToCard@i,c
  3215  0009F6  D010               	goto	l96
  3216  0009F8                     
  3217                           ;RFIDlib.h: 605: {
  3218                           ;RFIDlib.h: 607: backData[i] = MFRC522_Rd(0x09);
  3219  0009F8  5023               	movf	MFRC522_ToCard@i,w,c
  3220  0009FA  2416               	addwf	MFRC522_ToCard@backData,w,c
  3221  0009FC  6ED9               	movwf	fsr2l,c
  3222  0009FE  5024               	movf	MFRC522_ToCard@i+1,w,c
  3223  000A00  2017               	addwfc	MFRC522_ToCard@backData+1,w,c
  3224  000A02  6EDA               	movwf	fsr2h,c
  3225  000A04  0E00               	movlw	0
  3226  000A06  6E02               	movwf	MFRC522_Rd@Address+1,c
  3227  000A08  0E09               	movlw	9
  3228  000A0A  6E01               	movwf	MFRC522_Rd@Address,c
  3229  000A0C  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3230  000A10  5001               	movf	?_MFRC522_Rd,w,c
  3231  000A12  6EDF               	movwf	indf2,c
  3232  000A14  4A23               	infsnz	MFRC522_ToCard@i,f,c
  3233  000A16  2A24               	incf	MFRC522_ToCard@i+1,f,c
  3234  000A18                     l96:
  3235  000A18  5025               	movf	MFRC522_ToCard@n,w,c
  3236  000A1A  6E1A               	movwf	??_MFRC522_ToCard& (0+255),c
  3237  000A1C  6A1B               	clrf	(??_MFRC522_ToCard+1)& (0+255),c
  3238  000A1E  501A               	movf	??_MFRC522_ToCard,w,c
  3239  000A20  5C23               	subwf	MFRC522_ToCard@i,w,c
  3240  000A22  501B               	movf	??_MFRC522_ToCard+1,w,c
  3241  000A24  5824               	subwfb	MFRC522_ToCard@i+1,w,c
  3242  000A26  A0D8               	btfss	status,0,c
  3243  000A28  D7E7               	goto	l97
  3244                           
  3245                           ;RFIDlib.h: 609: }
  3246                           ;RFIDlib.h: 613: backData[i] = 0;
  3247  000A2A  5023               	movf	MFRC522_ToCard@i,w,c
  3248  000A2C  2416               	addwf	MFRC522_ToCard@backData,w,c
  3249  000A2E  6ED9               	movwf	fsr2l,c
  3250  000A30  5024               	movf	MFRC522_ToCard@i+1,w,c
  3251  000A32  2017               	addwfc	MFRC522_ToCard@backData+1,w,c
  3252  000A34  6EDA               	movwf	fsr2h,c
  3253  000A36  0E00               	movlw	0
  3254  000A38  6EDF               	movwf	indf2,c
  3255                           
  3256                           ;RFIDlib.h: 615: }
  3257                           ;RFIDlib.h: 617: }
  3258  000A3A  D002               	goto	l99
  3259  000A3C                     l89:
  3260                           
  3261                           ;RFIDlib.h: 618: else
  3262                           ;RFIDlib.h: 619: {
  3263                           ;RFIDlib.h: 621: _status = 2;
  3264  000A3C  0E02               	movlw	2
  3265  000A3E  6E1F               	movwf	MFRC522_ToCard@_status,c
  3266  000A40                     l99:
  3267                           
  3268                           ;RFIDlib.h: 623: }
  3269                           ;RFIDlib.h: 625: }
  3270                           ;RFIDlib.h: 631: return _status;
  3271  000A40  501F               	movf	MFRC522_ToCard@_status,w,c
  3272  000A42  0012               	return	
  3273  000A44                     __end_of_MFRC522_ToCard:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           indf0	equ	0xFEF
  3282                           postinc0	equ	0xFEE
  3283                           fsr0h	equ	0xFEA
  3284                           fsr0l	equ	0xFE9
  3285                           wreg	equ	0xFE8
  3286                           postdec1	equ	0xFE5
  3287                           plusw1	equ	0xFE3
  3288                           fsr1l	equ	0xFE1
  3289                           indf2	equ	0xFDF
  3290                           postinc2	equ	0xFDE
  3291                           postdec2	equ	0xFDD
  3292                           plusw2	equ	0xFDB
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _MFRC522_Clear_Bit *****************
  3298 ;; Defined at:
  3299 ;;		line 346 in file "../RFIDlib.h"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  addr            1    wreg     unsigned char 
  3302 ;;  mask            1   10[COMRAM] unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  addr            1   17[COMRAM] unsigned char 
  3305 ;;  tmp             2   15[COMRAM] unsigned int 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3315 ;;      Params:         1       0       0       0       0       0       0       0       0
  3316 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3318 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3319 ;;Total ram usage:        8 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    1
  3322 ;; This function calls:
  3323 ;;		_MFRC522_Rd
  3324 ;;		_MFRC522_Wr
  3325 ;; This function is called by:
  3326 ;;		_MFRC522_ToCard
  3327 ;;		_MFRC522_AntiColl
  3328 ;;		_MFRC522_AntennaOff
  3329 ;;		_MFRC522_CRC
  3330 ;;		_MFRC522_Halt
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text20
  3335  00117E                     __ptext20:
  3336                           	opt stack 0
  3337  00117E                     _MFRC522_Clear_Bit:
  3338                           	opt stack 26
  3339                           
  3340                           ;incstack = 0
  3341                           ;MFRC522_Clear_Bit@addr stored from wreg
  3342  00117E  6E12               	movwf	MFRC522_Clear_Bit@addr,c
  3343                           
  3344                           ;RFIDlib.h: 348: unsigned int tmp = 0x0;
  3345  001180  0E00               	movlw	0
  3346  001182  6E11               	movwf	MFRC522_Clear_Bit@tmp+1,c
  3347  001184  0E00               	movlw	0
  3348  001186  6E10               	movwf	MFRC522_Clear_Bit@tmp,c
  3349                           
  3350                           ;RFIDlib.h: 350: tmp = MFRC522_Rd(addr);
  3351  001188  C012  F001         	movff	MFRC522_Clear_Bit@addr,MFRC522_Rd@Address
  3352  00118C  6A02               	clrf	MFRC522_Rd@Address+1,c
  3353  00118E  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3354  001192  C001  F010         	movff	?_MFRC522_Rd,MFRC522_Clear_Bit@tmp
  3355  001196  C002  F011         	movff	?_MFRC522_Rd+1,MFRC522_Clear_Bit@tmp+1
  3356                           
  3357                           ;RFIDlib.h: 352: MFRC522_Wr(addr, tmp&~mask);
  3358  00119A  C012  F001         	movff	MFRC522_Clear_Bit@addr,MFRC522_Wr@Address
  3359  00119E  6A02               	clrf	MFRC522_Wr@Address+1,c
  3360  0011A0  500B               	movf	MFRC522_Clear_Bit@mask,w,c
  3361  0011A2  6E0C               	movwf	??_MFRC522_Clear_Bit& (0+255),c
  3362  0011A4  6A0D               	clrf	(??_MFRC522_Clear_Bit+1)& (0+255),c
  3363  0011A6  1C0C               	comf	??_MFRC522_Clear_Bit,w,c
  3364  0011A8  6E0E               	movwf	(??_MFRC522_Clear_Bit+2)& (0+255),c
  3365  0011AA  1C0D               	comf	??_MFRC522_Clear_Bit+1,w,c
  3366  0011AC  6E0F               	movwf	(??_MFRC522_Clear_Bit+3)& (0+255),c
  3367  0011AE  5010               	movf	MFRC522_Clear_Bit@tmp,w,c
  3368  0011B0  140E               	andwf	??_MFRC522_Clear_Bit+2,w,c
  3369  0011B2  6E03               	movwf	MFRC522_Wr@value,c
  3370  0011B4  5011               	movf	MFRC522_Clear_Bit@tmp+1,w,c
  3371  0011B6  140F               	andwf	??_MFRC522_Clear_Bit+3,w,c
  3372  0011B8  6E04               	movwf	MFRC522_Wr@value+1,c
  3373  0011BA  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3374  0011BE  0012               	return		;funcret
  3375  0011C0                     __end_of_MFRC522_Clear_Bit:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           prodh	equ	0xFF4
  3382                           prodl	equ	0xFF3
  3383                           indf0	equ	0xFEF
  3384                           postinc0	equ	0xFEE
  3385                           fsr0h	equ	0xFEA
  3386                           fsr0l	equ	0xFE9
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           plusw1	equ	0xFE3
  3390                           fsr1l	equ	0xFE1
  3391                           indf2	equ	0xFDF
  3392                           postinc2	equ	0xFDE
  3393                           postdec2	equ	0xFDD
  3394                           plusw2	equ	0xFDB
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function _MFRC522_Init *****************
  3400 ;; Defined at:
  3401 ;;		line 411 in file "../RFIDlib.h"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    3
  3422 ;; This function calls:
  3423 ;;		_MFRC522_AntennaOn
  3424 ;;		_MFRC522_Reset
  3425 ;;		_MFRC522_Wr
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text21
  3432  000EAE                     __ptext21:
  3433                           	opt stack 0
  3434  000EAE                     _MFRC522_Init:
  3435                           	opt stack 27
  3436                           
  3437                           ;RFIDlib.h: 435: PORTBbits.RB1 = 1;
  3438                           
  3439                           ;incstack = 0
  3440  000EAE  8281               	bsf	3969,1,c	;volatile
  3441                           
  3442                           ;RFIDlib.h: 436: PORTBbits.RB3 = 1;
  3443  000EB0  8681               	bsf	3969,3,c	;volatile
  3444                           
  3445                           ;RFIDlib.h: 438: MFRC522_Reset();
  3446  000EB2  EC9C  F009         	call	_MFRC522_Reset	;wreg free
  3447                           
  3448                           ;RFIDlib.h: 440: MFRC522_Wr( 0x2A, 0x8D );
  3449  000EB6  0E00               	movlw	0
  3450  000EB8  6E02               	movwf	MFRC522_Wr@Address+1,c
  3451  000EBA  0E2A               	movlw	42
  3452  000EBC  6E01               	movwf	MFRC522_Wr@Address,c
  3453  000EBE  0E00               	movlw	0
  3454  000EC0  6E04               	movwf	MFRC522_Wr@value+1,c
  3455  000EC2  0E8D               	movlw	141
  3456  000EC4  6E03               	movwf	MFRC522_Wr@value,c
  3457  000EC6  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3458                           
  3459                           ;RFIDlib.h: 441: MFRC522_Wr( 0x2B, 0x3E );
  3460  000ECA  0E00               	movlw	0
  3461  000ECC  6E02               	movwf	MFRC522_Wr@Address+1,c
  3462  000ECE  0E2B               	movlw	43
  3463  000ED0  6E01               	movwf	MFRC522_Wr@Address,c
  3464  000ED2  0E00               	movlw	0
  3465  000ED4  6E04               	movwf	MFRC522_Wr@value+1,c
  3466  000ED6  0E3E               	movlw	62
  3467  000ED8  6E03               	movwf	MFRC522_Wr@value,c
  3468  000EDA  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3469                           
  3470                           ;RFIDlib.h: 442: MFRC522_Wr( 0x2D, 30 );
  3471  000EDE  0E00               	movlw	0
  3472  000EE0  6E02               	movwf	MFRC522_Wr@Address+1,c
  3473  000EE2  0E2D               	movlw	45
  3474  000EE4  6E01               	movwf	MFRC522_Wr@Address,c
  3475  000EE6  0E00               	movlw	0
  3476  000EE8  6E04               	movwf	MFRC522_Wr@value+1,c
  3477  000EEA  0E1E               	movlw	30
  3478  000EEC  6E03               	movwf	MFRC522_Wr@value,c
  3479  000EEE  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3480                           
  3481                           ;RFIDlib.h: 443: MFRC522_Wr( 0x2C, 0 );
  3482  000EF2  0E00               	movlw	0
  3483  000EF4  6E02               	movwf	MFRC522_Wr@Address+1,c
  3484  000EF6  0E2C               	movlw	44
  3485  000EF8  6E01               	movwf	MFRC522_Wr@Address,c
  3486  000EFA  0E00               	movlw	0
  3487  000EFC  6E04               	movwf	MFRC522_Wr@value+1,c
  3488  000EFE  0E00               	movlw	0
  3489  000F00  6E03               	movwf	MFRC522_Wr@value,c
  3490  000F02  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3491                           
  3492                           ;RFIDlib.h: 445: MFRC522_Wr( 0x15, 0x40 );
  3493  000F06  0E00               	movlw	0
  3494  000F08  6E02               	movwf	MFRC522_Wr@Address+1,c
  3495  000F0A  0E15               	movlw	21
  3496  000F0C  6E01               	movwf	MFRC522_Wr@Address,c
  3497  000F0E  0E00               	movlw	0
  3498  000F10  6E04               	movwf	MFRC522_Wr@value+1,c
  3499  000F12  0E40               	movlw	64
  3500  000F14  6E03               	movwf	MFRC522_Wr@value,c
  3501  000F16  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3502                           
  3503                           ;RFIDlib.h: 446: MFRC522_Wr( 0x11, 0x3D );
  3504  000F1A  0E00               	movlw	0
  3505  000F1C  6E02               	movwf	MFRC522_Wr@Address+1,c
  3506  000F1E  0E11               	movlw	17
  3507  000F20  6E01               	movwf	MFRC522_Wr@Address,c
  3508  000F22  0E00               	movlw	0
  3509  000F24  6E04               	movwf	MFRC522_Wr@value+1,c
  3510  000F26  0E3D               	movlw	61
  3511  000F28  6E03               	movwf	MFRC522_Wr@value,c
  3512  000F2A  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3513                           
  3514                           ;RFIDlib.h: 451: MFRC522_AntennaOn();
  3515  000F2E  ECAE  F009         	call	_MFRC522_AntennaOn	;wreg free
  3516  000F32  0012               	return		;funcret
  3517  000F34                     __end_of_MFRC522_Init:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           indf0	equ	0xFEF
  3526                           postinc0	equ	0xFEE
  3527                           fsr0h	equ	0xFEA
  3528                           fsr0l	equ	0xFE9
  3529                           wreg	equ	0xFE8
  3530                           postdec1	equ	0xFE5
  3531                           plusw1	equ	0xFE3
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           plusw2	equ	0xFDB
  3537                           fsr2h	equ	0xFDA
  3538                           fsr2l	equ	0xFD9
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _MFRC522_Reset *****************
  3542 ;; Defined at:
  3543 ;;		line 366 in file "../RFIDlib.h"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    1
  3564 ;; This function calls:
  3565 ;;		_MFRC522_Wr
  3566 ;; This function is called by:
  3567 ;;		_MFRC522_Init
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text22
  3572  001338                     __ptext22:
  3573                           	opt stack 0
  3574  001338                     _MFRC522_Reset:
  3575                           	opt stack 28
  3576                           
  3577                           ;RFIDlib.h: 369: PORTBbits.RB3 = 1;
  3578                           
  3579                           ;incstack = 0
  3580  001338  8681               	bsf	3969,3,c	;volatile
  3581                           
  3582                           ;RFIDlib.h: 371: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3583  00133A  D000               	nop2		;2 cycle nop
  3584                           
  3585                           ;RFIDlib.h: 373: PORTBbits.RB3 = 0;
  3586  00133C  9681               	bcf	3969,3,c	;volatile
  3587                           
  3588                           ;RFIDlib.h: 375: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3589  00133E  D000               	nop2		;2 cycle nop
  3590                           
  3591                           ;RFIDlib.h: 377: PORTBbits.RB3 = 1;
  3592  001340  8681               	bsf	3969,3,c	;volatile
  3593                           
  3594                           ;RFIDlib.h: 379: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3595  001342  D000               	nop2		;2 cycle nop
  3596                           
  3597                           ;RFIDlib.h: 381: MFRC522_Wr(0x01, 0x0F);
  3598  001344  0E00               	movlw	0
  3599  001346  6E02               	movwf	MFRC522_Wr@Address+1,c
  3600  001348  0E01               	movlw	1
  3601  00134A  6E01               	movwf	MFRC522_Wr@Address,c
  3602  00134C  0E00               	movlw	0
  3603  00134E  6E04               	movwf	MFRC522_Wr@value+1,c
  3604  001350  0E0F               	movlw	15
  3605  001352  6E03               	movwf	MFRC522_Wr@value,c
  3606  001354  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3607                           
  3608                           ;RFIDlib.h: 383: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3609  001358  D000               	nop2		;2 cycle nop
  3610  00135A  0012               	return		;funcret
  3611  00135C                     __end_of_MFRC522_Reset:
  3612                           	opt stack 0
  3613                           tblptru	equ	0xFF8
  3614                           tblptrh	equ	0xFF7
  3615                           tblptrl	equ	0xFF6
  3616                           tablat	equ	0xFF5
  3617                           prodh	equ	0xFF4
  3618                           prodl	equ	0xFF3
  3619                           indf0	equ	0xFEF
  3620                           postinc0	equ	0xFEE
  3621                           fsr0h	equ	0xFEA
  3622                           fsr0l	equ	0xFE9
  3623                           wreg	equ	0xFE8
  3624                           postdec1	equ	0xFE5
  3625                           plusw1	equ	0xFE3
  3626                           fsr1l	equ	0xFE1
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           plusw2	equ	0xFDB
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _MFRC522_AntennaOn *****************
  3636 ;; Defined at:
  3637 ;;		line 387 in file "../RFIDlib.h"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  stt             2   14[COMRAM] unsigned int 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0
  3652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    2
  3658 ;; This function calls:
  3659 ;;		_MFRC522_Rd
  3660 ;;		_MFRC522_Set_Bit
  3661 ;; This function is called by:
  3662 ;;		_MFRC522_Init
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text23
  3667  00135C                     __ptext23:
  3668                           	opt stack 0
  3669  00135C                     _MFRC522_AntennaOn:
  3670                           	opt stack 27
  3671                           
  3672                           ;RFIDlib.h: 390: unsigned int stt;
  3673                           ;RFIDlib.h: 392: stt = MFRC522_Rd(0x14);
  3674                           
  3675                           ;incstack = 0
  3676  00135C  0E00               	movlw	0
  3677  00135E  6E02               	movwf	MFRC522_Rd@Address+1,c
  3678  001360  0E14               	movlw	20
  3679  001362  6E01               	movwf	MFRC522_Rd@Address,c
  3680  001364  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3681  001368  C001  F00F         	movff	?_MFRC522_Rd,MFRC522_AntennaOn@stt
  3682  00136C  C002  F010         	movff	?_MFRC522_Rd+1,MFRC522_AntennaOn@stt+1
  3683                           
  3684                           ;RFIDlib.h: 394: MFRC522_Set_Bit(0x14, 0x03);
  3685  001370  0E03               	movlw	3
  3686  001372  6E0B               	movwf	MFRC522_Set_Bit@mask,c
  3687  001374  0E14               	movlw	20
  3688  001376  EC6D  F009         	call	_MFRC522_Set_Bit
  3689  00137A  0012               	return		;funcret
  3690  00137C                     __end_of_MFRC522_AntennaOn:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           indf0	equ	0xFEF
  3699                           postinc0	equ	0xFEE
  3700                           fsr0h	equ	0xFEA
  3701                           fsr0l	equ	0xFE9
  3702                           wreg	equ	0xFE8
  3703                           postdec1	equ	0xFE5
  3704                           plusw1	equ	0xFE3
  3705                           fsr1l	equ	0xFE1
  3706                           indf2	equ	0xFDF
  3707                           postinc2	equ	0xFDE
  3708                           postdec2	equ	0xFDD
  3709                           plusw2	equ	0xFDB
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _MFRC522_Set_Bit *****************
  3715 ;; Defined at:
  3716 ;;		line 356 in file "../RFIDlib.h"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  addr            1    wreg     unsigned char 
  3719 ;;  mask            1   10[COMRAM] unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  addr            1   13[COMRAM] unsigned char 
  3722 ;;  tmp             2   11[COMRAM] unsigned int 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         1       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        4 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		_MFRC522_Rd
  3741 ;;		_MFRC522_Wr
  3742 ;; This function is called by:
  3743 ;;		_MFRC522_AntennaOn
  3744 ;;		_MFRC522_ToCard
  3745 ;;		_MFRC522_CRC
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text24
  3750  0012DA                     __ptext24:
  3751                           	opt stack 0
  3752  0012DA                     _MFRC522_Set_Bit:
  3753                           	opt stack 26
  3754                           
  3755                           ;incstack = 0
  3756                           ;MFRC522_Set_Bit@addr stored from wreg
  3757  0012DA  6E0E               	movwf	MFRC522_Set_Bit@addr,c
  3758                           
  3759                           ;RFIDlib.h: 358: unsigned int tmp = 0x0;
  3760  0012DC  0E00               	movlw	0
  3761  0012DE  6E0D               	movwf	MFRC522_Set_Bit@tmp+1,c
  3762  0012E0  0E00               	movlw	0
  3763  0012E2  6E0C               	movwf	MFRC522_Set_Bit@tmp,c
  3764                           
  3765                           ;RFIDlib.h: 360: tmp = MFRC522_Rd(addr);
  3766  0012E4  C00E  F001         	movff	MFRC522_Set_Bit@addr,MFRC522_Rd@Address
  3767  0012E8  6A02               	clrf	MFRC522_Rd@Address+1,c
  3768  0012EA  ECBD  F006         	call	_MFRC522_Rd	;wreg free
  3769  0012EE  C001  F00C         	movff	?_MFRC522_Rd,MFRC522_Set_Bit@tmp
  3770  0012F2  C002  F00D         	movff	?_MFRC522_Rd+1,MFRC522_Set_Bit@tmp+1
  3771                           
  3772                           ;RFIDlib.h: 362: MFRC522_Wr(addr, tmp | mask);
  3773  0012F6  C00E  F001         	movff	MFRC522_Set_Bit@addr,MFRC522_Wr@Address
  3774  0012FA  6A02               	clrf	MFRC522_Wr@Address+1,c
  3775  0012FC  500C               	movf	MFRC522_Set_Bit@tmp,w,c
  3776  0012FE  100B               	iorwf	MFRC522_Set_Bit@mask,w,c
  3777  001300  6E03               	movwf	MFRC522_Wr@value,c
  3778  001302  500D               	movf	MFRC522_Set_Bit@tmp+1,w,c
  3779  001304  6E04               	movwf	MFRC522_Wr@value+1,c
  3780  001306  EC0F  F007         	call	_MFRC522_Wr	;wreg free
  3781  00130A  0012               	return		;funcret
  3782  00130C                     __end_of_MFRC522_Set_Bit:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           indf0	equ	0xFEF
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           postdec1	equ	0xFE5
  3796                           plusw1	equ	0xFE3
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           plusw2	equ	0xFDB
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _MFRC522_Wr *****************
  3807 ;; Defined at:
  3808 ;;		line 295 in file "../RFIDlib.h"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  Address         2    0[COMRAM] unsigned int 
  3811 ;;  value           2    2[COMRAM] unsigned int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  i               2    8[COMRAM] unsigned int 
  3814 ;;  ucAddr          2    6[COMRAM] unsigned int 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         4       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3827 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:       10 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_MFRC522_Clear_Bit
  3834 ;;		_MFRC522_Set_Bit
  3835 ;;		_MFRC522_Reset
  3836 ;;		_MFRC522_Init
  3837 ;;		_MFRC522_ToCard
  3838 ;;		_MFRC522_Request
  3839 ;;		_MFRC522_AntiColl
  3840 ;;		_MFRC522_CRC
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text25
  3845  000E1E                     __ptext25:
  3846                           	opt stack 0
  3847  000E1E                     _MFRC522_Wr:
  3848                           	opt stack 28
  3849                           
  3850                           ;RFIDlib.h: 300: unsigned int i, ucAddr;
  3851                           ;RFIDlib.h: 302: PORTBbits.RB1 = 0;
  3852                           
  3853                           ;incstack = 0
  3854  000E1E  9281               	bcf	3969,1,c	;volatile
  3855                           
  3856                           ;RFIDlib.h: 304: PORTBbits.RB2 = 0;
  3857  000E20  9481               	bcf	3969,2,c	;volatile
  3858                           
  3859                           ;RFIDlib.h: 306: ucAddr = ((Address << 1)&0x7E);
  3860  000E22  C001  F005         	movff	MFRC522_Wr@Address,??_MFRC522_Wr
  3861  000E26  C002  F006         	movff	MFRC522_Wr@Address+1,??_MFRC522_Wr+1
  3862  000E2A  90D8               	bcf	status,0,c
  3863  000E2C  3605               	rlcf	??_MFRC522_Wr,f,c
  3864  000E2E  3606               	rlcf	??_MFRC522_Wr+1,f,c
  3865  000E30  0E7E               	movlw	126
  3866  000E32  1405               	andwf	??_MFRC522_Wr,w,c
  3867  000E34  6E07               	movwf	MFRC522_Wr@ucAddr,c
  3868  000E36  6A08               	clrf	MFRC522_Wr@ucAddr+1,c
  3869                           
  3870                           ;RFIDlib.h: 308: for (i = 8; i > 0; i--)
  3871  000E38  0E00               	movlw	0
  3872  000E3A  6E0A               	movwf	MFRC522_Wr@i+1,c
  3873  000E3C  0E08               	movlw	8
  3874  000E3E  6E09               	movwf	MFRC522_Wr@i,c
  3875  000E40                     l1855:
  3876  000E40  5009               	movf	MFRC522_Wr@i,w,c
  3877  000E42  100A               	iorwf	MFRC522_Wr@i+1,w,c
  3878  000E44  B4D8               	btfsc	status,2,c
  3879  000E46  D014               	goto	u1130
  3880                           
  3881                           ;RFIDlib.h: 309: {
  3882                           ;RFIDlib.h: 311: PORTBbits.RB0 = ((ucAddr & 0x80) == 0x80);
  3883  000E48  AE07               	btfss	MFRC522_Wr@ucAddr,7,c
  3884  000E4A  D003               	goto	u1110
  3885  000E4C  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3886  000E4E  2A05               	incf	??_MFRC522_Wr& (0+255),f,c
  3887  000E50  D001               	goto	u1128
  3888  000E52                     u1110:
  3889  000E52  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3890  000E54                     u1128:
  3891  000E54  5081               	movf	3969,w,c	;volatile
  3892  000E56  1805               	xorwf	??_MFRC522_Wr,w,c
  3893  000E58  0BFE               	andlw	-2
  3894  000E5A  1805               	xorwf	??_MFRC522_Wr,w,c
  3895  000E5C  6E81               	movwf	3969,c	;volatile
  3896                           
  3897                           ;RFIDlib.h: 313: PORTBbits.RB1 = 1;
  3898  000E5E  8281               	bsf	3969,1,c	;volatile
  3899                           
  3900                           ;RFIDlib.h: 315: ucAddr <<= 1;
  3901  000E60  90D8               	bcf	status,0,c
  3902  000E62  3607               	rlcf	MFRC522_Wr@ucAddr,f,c
  3903  000E64  3608               	rlcf	MFRC522_Wr@ucAddr+1,f,c
  3904                           
  3905                           ;RFIDlib.h: 317: PORTBbits.RB1 = 0;
  3906  000E66  9281               	bcf	3969,1,c	;volatile
  3907  000E68  0609               	decf	MFRC522_Wr@i,f,c
  3908  000E6A  A0D8               	btfss	status,0,c
  3909  000E6C  060A               	decf	MFRC522_Wr@i+1,f,c
  3910  000E6E  D7E8               	goto	l1855
  3911  000E70                     u1130:
  3912                           
  3913                           ;RFIDlib.h: 319: }
  3914                           ;RFIDlib.h: 325: for (i = 8; i > 0; i--)
  3915  000E70  0E00               	movlw	0
  3916  000E72  6E0A               	movwf	MFRC522_Wr@i+1,c
  3917  000E74  0E08               	movlw	8
  3918  000E76  6E09               	movwf	MFRC522_Wr@i,c
  3919  000E78  D013               	goto	L2
  3920  000E7A                     
  3921                           ;RFIDlib.h: 326: {
  3922                           ;RFIDlib.h: 328: PORTBbits.RB0 = ((value & 0x80) == 0x80);
  3923  000E7A  AE03               	btfss	MFRC522_Wr@value,7,c
  3924  000E7C  D003               	goto	u1150
  3925  000E7E  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3926  000E80  2A05               	incf	??_MFRC522_Wr& (0+255),f,c
  3927  000E82  D001               	goto	u1168
  3928  000E84                     u1150:
  3929  000E84  6A05               	clrf	??_MFRC522_Wr& (0+255),c
  3930  000E86                     u1168:
  3931  000E86  5081               	movf	3969,w,c	;volatile
  3932  000E88  1805               	xorwf	??_MFRC522_Wr,w,c
  3933  000E8A  0BFE               	andlw	-2
  3934  000E8C  1805               	xorwf	??_MFRC522_Wr,w,c
  3935  000E8E  6E81               	movwf	3969,c	;volatile
  3936                           
  3937                           ;RFIDlib.h: 330: PORTBbits.RB1 = 1;
  3938  000E90  8281               	bsf	3969,1,c	;volatile
  3939                           
  3940                           ;RFIDlib.h: 332: value <<= 1;
  3941  000E92  90D8               	bcf	status,0,c
  3942  000E94  3603               	rlcf	MFRC522_Wr@value,f,c
  3943  000E96  3604               	rlcf	MFRC522_Wr@value+1,f,c
  3944                           
  3945                           ;RFIDlib.h: 334: PORTBbits.RB1 = 0;
  3946  000E98  9281               	bcf	3969,1,c	;volatile
  3947  000E9A  0609               	decf	MFRC522_Wr@i,f,c
  3948  000E9C  A0D8               	btfss	status,0,c
  3949  000E9E  060A               	decf	MFRC522_Wr@i+1,f,c
  3950  000EA0                     L2:
  3951  000EA0  5009               	movf	MFRC522_Wr@i,w,c
  3952  000EA2  100A               	iorwf	MFRC522_Wr@i+1,w,c
  3953  000EA4  A4D8               	btfss	status,2,c
  3954  000EA6  D7E9               	goto	l52
  3955                           
  3956                           ;RFIDlib.h: 336: }
  3957                           ;RFIDlib.h: 340: PORTBbits.RB2 = 1;
  3958  000EA8  8481               	bsf	3969,2,c	;volatile
  3959                           
  3960                           ;RFIDlib.h: 342: PORTBbits.RB1 = 1;
  3961  000EAA  8281               	bsf	3969,1,c	;volatile
  3962  000EAC  0012               	return		;funcret
  3963  000EAE                     __end_of_MFRC522_Wr:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           prodh	equ	0xFF4
  3970                           prodl	equ	0xFF3
  3971                           indf0	equ	0xFEF
  3972                           postinc0	equ	0xFEE
  3973                           fsr0h	equ	0xFEA
  3974                           fsr0l	equ	0xFE9
  3975                           wreg	equ	0xFE8
  3976                           postdec1	equ	0xFE5
  3977                           plusw1	equ	0xFE3
  3978                           fsr1l	equ	0xFE1
  3979                           indf2	equ	0xFDF
  3980                           postinc2	equ	0xFDE
  3981                           postdec2	equ	0xFDD
  3982                           plusw2	equ	0xFDB
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _MFRC522_Rd *****************
  3988 ;; Defined at:
  3989 ;;		line 240 in file "../RFIDlib.h"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  Address         2    0[COMRAM] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  i               2    8[COMRAM] unsigned int 
  3994 ;;  ucResult        2    6[COMRAM] unsigned int 
  3995 ;;  ucAddr          2    4[COMRAM] unsigned int 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2    0[COMRAM] unsigned int 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0
  4006 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4007 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4008 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4009 ;;Total ram usage:       10 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_MFRC522_Clear_Bit
  4015 ;;		_MFRC522_Set_Bit
  4016 ;;		_MFRC522_AntennaOn
  4017 ;;		_MFRC522_ToCard
  4018 ;;		_MFRC522_CRC
  4019 ;;		_MFRC522_Auth
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text26
  4024  000D7A                     __ptext26:
  4025                           	opt stack 0
  4026  000D7A                     _MFRC522_Rd:
  4027                           	opt stack 26
  4028                           
  4029                           ;RFIDlib.h: 243: unsigned int i, ucAddr;
  4030                           ;RFIDlib.h: 245: unsigned int ucResult = 0;
  4031                           
  4032                           ;incstack = 0
  4033  000D7A  0E00               	movlw	0
  4034  000D7C  6E08               	movwf	MFRC522_Rd@ucResult+1,c
  4035  000D7E  0E00               	movlw	0
  4036  000D80  6E07               	movwf	MFRC522_Rd@ucResult,c
  4037                           
  4038                           ;RFIDlib.h: 247: PORTBbits.RB1 = 0;
  4039  000D82  9281               	bcf	3969,1,c	;volatile
  4040                           
  4041                           ;RFIDlib.h: 249: PORTBbits.RB2 = 0;
  4042  000D84  9481               	bcf	3969,2,c	;volatile
  4043                           
  4044                           ;RFIDlib.h: 251: ucAddr = ((Address << 1)&0x7E) | 0x80;
  4045  000D86  C001  F003         	movff	MFRC522_Rd@Address,??_MFRC522_Rd
  4046  000D8A  C002  F004         	movff	MFRC522_Rd@Address+1,??_MFRC522_Rd+1
  4047  000D8E  90D8               	bcf	status,0,c
  4048  000D90  3603               	rlcf	??_MFRC522_Rd,f,c
  4049  000D92  3604               	rlcf	??_MFRC522_Rd+1,f,c
  4050  000D94  0E7E               	movlw	126
  4051  000D96  1603               	andwf	??_MFRC522_Rd,f,c
  4052  000D98  0E00               	movlw	0
  4053  000D9A  1604               	andwf	??_MFRC522_Rd+1,f,c
  4054  000D9C  0E80               	movlw	128
  4055  000D9E  1003               	iorwf	??_MFRC522_Rd,w,c
  4056  000DA0  6E05               	movwf	MFRC522_Rd@ucAddr,c
  4057  000DA2  5004               	movf	??_MFRC522_Rd+1,w,c
  4058  000DA4  6E06               	movwf	MFRC522_Rd@ucAddr+1,c
  4059                           
  4060                           ;RFIDlib.h: 255: for (i = 8; i > 0; i--)
  4061  000DA6  0E00               	movlw	0
  4062  000DA8  6E0A               	movwf	MFRC522_Rd@i+1,c
  4063  000DAA  0E08               	movlw	8
  4064  000DAC  6E09               	movwf	MFRC522_Rd@i,c
  4065  000DAE  5009               	movf	MFRC522_Rd@i,w,c
  4066  000DB0  100A               	iorwf	MFRC522_Rd@i+1,w,c
  4067  000DB2  B4D8               	btfsc	status,2,c
  4068  000DB4  D014               	goto	u1060
  4069                           
  4070                           ;RFIDlib.h: 256: {
  4071                           ;RFIDlib.h: 258: PORTBbits.RB0 = ((ucAddr & 0x80) == 0x80);
  4072  000DB6  AE05               	btfss	MFRC522_Rd@ucAddr,7,c
  4073  000DB8  D003               	goto	u1040
  4074  000DBA  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  4075  000DBC  2A03               	incf	??_MFRC522_Rd& (0+255),f,c
  4076  000DBE  D001               	goto	u1058
  4077  000DC0                     u1040:
  4078  000DC0  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  4079  000DC2                     u1058:
  4080  000DC2  5081               	movf	3969,w,c	;volatile
  4081  000DC4  1803               	xorwf	??_MFRC522_Rd,w,c
  4082  000DC6  0BFE               	andlw	-2
  4083  000DC8  1803               	xorwf	??_MFRC522_Rd,w,c
  4084  000DCA  6E81               	movwf	3969,c	;volatile
  4085                           
  4086                           ;RFIDlib.h: 260: PORTBbits.RB1 = 1;
  4087  000DCC  8281               	bsf	3969,1,c	;volatile
  4088                           
  4089                           ;RFIDlib.h: 262: ucAddr <<= 1;
  4090  000DCE  90D8               	bcf	status,0,c
  4091  000DD0  3605               	rlcf	MFRC522_Rd@ucAddr,f,c
  4092  000DD2  3606               	rlcf	MFRC522_Rd@ucAddr+1,f,c
  4093                           
  4094                           ;RFIDlib.h: 264: PORTBbits.RB1 = 0;
  4095  000DD4  9281               	bcf	3969,1,c	;volatile
  4096  000DD6  0609               	decf	MFRC522_Rd@i,f,c
  4097  000DD8  A0D8               	btfss	status,0,c
  4098  000DDA  060A               	decf	MFRC522_Rd@i+1,f,c
  4099  000DDC  D7E8               	goto	L3
  4100  000DDE                     u1060:
  4101                           
  4102                           ;RFIDlib.h: 266: }
  4103                           ;RFIDlib.h: 270: for (i = 8; i > 0; i--)
  4104  000DDE  0E00               	movlw	0
  4105  000DE0  6E0A               	movwf	MFRC522_Rd@i+1,c
  4106  000DE2  0E08               	movlw	8
  4107  000DE4  6E09               	movwf	MFRC522_Rd@i,c
  4108  000DE6  D010               	goto	L4
  4109  000DE8                     l45:
  4110                           
  4111                           ;RFIDlib.h: 271: {
  4112                           ;RFIDlib.h: 273: PORTBbits.RB1 = 1;
  4113  000DE8  8281               	bsf	3969,1,c	;volatile
  4114                           
  4115                           ;RFIDlib.h: 275: ucResult <<= 1;
  4116  000DEA  90D8               	bcf	status,0,c
  4117  000DEC  3607               	rlcf	MFRC522_Rd@ucResult,f,c
  4118  000DEE  3608               	rlcf	MFRC522_Rd@ucResult+1,f,c
  4119                           
  4120                           ;RFIDlib.h: 277: ucResult |= (int) PORTCbits.RC7;
  4121  000DF0  AE82               	btfss	3970,7,c	;volatile
  4122  000DF2  D003               	goto	u1080
  4123  000DF4  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  4124  000DF6  2A03               	incf	??_MFRC522_Rd& (0+255),f,c
  4125  000DF8  D001               	goto	u1088
  4126  000DFA                     u1080:
  4127  000DFA  6A03               	clrf	??_MFRC522_Rd& (0+255),c
  4128  000DFC                     u1088:
  4129  000DFC  5003               	movf	??_MFRC522_Rd,w,c
  4130  000DFE  1207               	iorwf	MFRC522_Rd@ucResult,f,c
  4131                           
  4132                           ;RFIDlib.h: 279: PORTBbits.RB1 = 0;
  4133  000E00  9281               	bcf	3969,1,c	;volatile
  4134  000E02  0609               	decf	MFRC522_Rd@i,f,c
  4135  000E04  A0D8               	btfss	status,0,c
  4136  000E06  060A               	decf	MFRC522_Rd@i+1,f,c
  4137  000E08                     L4:
  4138  000E08  5009               	movf	MFRC522_Rd@i,w,c
  4139  000E0A  100A               	iorwf	MFRC522_Rd@i+1,w,c
  4140  000E0C  A4D8               	btfss	status,2,c
  4141  000E0E  D7EC               	goto	l45
  4142                           
  4143                           ;RFIDlib.h: 281: }
  4144                           ;RFIDlib.h: 287: PORTBbits.RB2 = 1;
  4145  000E10  8481               	bsf	3969,2,c	;volatile
  4146                           
  4147                           ;RFIDlib.h: 289: PORTBbits.RB1 = 1;
  4148  000E12  8281               	bsf	3969,1,c	;volatile
  4149                           
  4150                           ;RFIDlib.h: 291: return ucResult;
  4151  000E14  C007  F001         	movff	MFRC522_Rd@ucResult,?_MFRC522_Rd
  4152  000E18  C008  F002         	movff	MFRC522_Rd@ucResult+1,?_MFRC522_Rd+1
  4153  000E1C  0012               	return		;funcret
  4154  000E1E                     __end_of_MFRC522_Rd:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           indf0	equ	0xFEF
  4163                           postinc0	equ	0xFEE
  4164                           fsr0h	equ	0xFEA
  4165                           fsr0l	equ	0xFE9
  4166                           wreg	equ	0xFE8
  4167                           postdec1	equ	0xFE5
  4168                           plusw1	equ	0xFE3
  4169                           fsr1l	equ	0xFE1
  4170                           indf2	equ	0xFDF
  4171                           postinc2	equ	0xFDE
  4172                           postdec2	equ	0xFDD
  4173                           plusw2	equ	0xFDB
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           indf0	equ	0xFEF
  4184                           postinc0	equ	0xFEE
  4185                           fsr0h	equ	0xFEA
  4186                           fsr0l	equ	0xFE9
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           plusw1	equ	0xFE3
  4190                           fsr1l	equ	0xFE1
  4191                           indf2	equ	0xFDF
  4192                           postinc2	equ	0xFDE
  4193                           postdec2	equ	0xFDD
  4194                           plusw2	equ	0xFDB
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199                           	psect	rparam
  4200  0000                     tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           prodh	equ	0xFF4
  4205                           prodl	equ	0xFF3
  4206                           indf0	equ	0xFEF
  4207                           postinc0	equ	0xFEE
  4208                           fsr0h	equ	0xFEA
  4209                           fsr0l	equ	0xFE9
  4210                           wreg	equ	0xFE8
  4211                           postdec1	equ	0xFE5
  4212                           plusw1	equ	0xFE3
  4213                           fsr1l	equ	0xFE1
  4214                           indf2	equ	0xFDF
  4215                           postinc2	equ	0xFDE
  4216                           postdec2	equ	0xFDD
  4217                           plusw2	equ	0xFDB
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     87      92
    BANK0           160      0       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[5]), STR_1(CODE[10]), 

    traduz@txt	PTR unsigned char  size(2) Largest target is 5
		 -> main@buffer(COMRAM[5]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 10
		 -> main@UID(COMRAM[10]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(2) Largest target is 2
		 -> main@TagType(COMRAM[2]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 10
		 -> main@UID(COMRAM[10]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 2
		 -> main@TagType(COMRAM[2]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 18
		 -> main@UID(COMRAM[10]), main@TagType(COMRAM[2]), MFRC522_Write@buff(COMRAM[18]), MFRC522_Auth@buff(COMRAM[12]), 
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Read@unLen(COMRAM[2]), MFRC522_Write@recvBits(COMRAM[2]), MFRC522_Auth@recvBits(COMRAM[2]), 
		 -> MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 18
		 -> main@UID(COMRAM[10]), main@TagType(COMRAM[2]), MFRC522_Write@buff(COMRAM[18]), MFRC522_Auth@buff(COMRAM[12]), 
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_MFRC522_ReadCardSerial
    _traduz->___awdiv
    _putsXLCD->_WriteDataXLCD
    _inic_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Init->_MFRC522_AntennaOn
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Set_Bit->_MFRC522_Wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   55419
                                             48 COMRAM    39    39      0
                           _BusyXLCD
                       _MFRC522_Init
             _MFRC522_ReadCardSerial
                     _MFRC522_isCard
                            _Mydelay
                       _SetDDRamAddr
                          _inic_XLCD
                           _putsXLCD
                             _traduz
 ---------------------------------------------------------------------------------
 (1) _traduz                                               9     5      4    1777
                                              8 COMRAM     7     3      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     227
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _inic_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mydelay                                              5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_isCard                                       2     0      2   18712
                                             43 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2   18614
                                             37 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   23313
                                             45 COMRAM     3     1      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   23170
                                             37 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7   15611
                                             18 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    8     7      1    4442
                                             10 COMRAM     8     7      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0   10780
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    2745
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    2     2      0    5290
                                             14 COMRAM     2     2      0
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      4     3      1    4214
                                             10 COMRAM     4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                          10     6      4    2745
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                          10     8      2    1075
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _MFRC522_Init
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
       _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Wr
   _MFRC522_isCard
     _MFRC522_Request
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Wr
   _Mydelay
   _SetDDRamAddr
     _DelayFor18TCY
   _inic_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _traduz
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       6       5        3.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     57      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      20        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 24 23:01:08 2018

                    MFRC522_Rd@i 0009                      MFRC522_Wr@i 0009  
                             l52 0E7A                               l45 0DE8  
                             l80 08B0                               l81 088A  
                             l90 0954                               l83 08E6  
                             l75 082E                               l92 09C6  
                             l84 08EA                               l76 081C  
                             l93 09DA                               l77 083C  
                             l94 09E4                               l78 0824  
                             l95 09EE                               l96 0A18  
                             l89 0A3C                               l97 09F8  
                             l99 0A40                     ___awdiv@sign 0006  
                    __CFG_BORV$1 000000                      main@TagType 0054  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l103 1082                              l223 0B08  
                            l215 0A98                              l160 0CD2  
                            l225 0B2A                              l219 0AC0  
                            l164 1394                              l180 12B2  
                            l252 1262                              l158 0CA2  
                            l511 0F76                              l192 129C  
                            l512 0F6E                              l169 1334  
                            l273 0D28                              l521 0FCC  
                            l282 0D58                              l186 127C  
                            l290 10BA                              l530 101E  
                            l522 0FD8                              l179 12C4  
                            l267 0D0E                              l291 1088  
                            l515 0F96                              l276 0D38  
                            l516 0FA0                              l508 0F48  
                            l524 0FEE                              l285 0D68  
                            l189 128C                              l517 0FAE  
                            l509 0F58                              l525 0FE6  
                            l542 139A                              l279 0D48  
                            l528 1006                              l529 1010  
                   __CFG_CPB$OFF 000000                              _RA0 007C00  
                            u305 10F8                              u370 0D18  
                   __CFG_CPD$OFF 000000                     __CFG_BOR$OFF 000000  
                            _key 0060            __size_of_WriteCmdXLCD 003E  
                   ___awmod@sign 0006                              wreg 000FE8  
                 ??_MFRC522_Init 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l2013 0C9A  
                           l2361 0B1A                             l2345 0AC0  
                           l1855 0E40                             STR_1 0801  
                           u1110 0E52                             u1040 0DC0  
                           u1130 0E70                             u1060 0DDE  
                           u1220 0914                             u1150 0E84  
                           u1080 0DFA                             u1128 0E54  
                           u1320 107E                             u1400 0F7A  
                           u1058 0DC2                             u1350 0CBA  
                           u1088 0DFC                             u1168 0E86  
                           u1460 0FF2                             u1560 10B2  
                           u1570 10DA                             u1821 0AB8  
                           u1567 10A8                             u1577 10D0  
                           u1850 0AEC                             u1907 13B4  
                           u1917 13A0                             u1927 13C2  
                           u1937 12B8                             u1865 0AEE  
                           _main 0A44            MFRC522_AntiColl@unLen 002A  
                           fsr0h 000FEA                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                    __CFG_IESO$OFF 000000  
               _MFRC522_AntiColl 0C2E                     ___param_bank 000000  
                ??_MFRC522_Reset 000B                     _WriteCmdXLCD 11FE  
                __end_of_Mydelay 12DA                    __CFG_PLLDIV$1 000000  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
                __end_of___awdiv 0FB8          ?_MFRC522_ReadCardSerial 002E  
                __end_of___awmod 1028                  ___awdiv@divisor 0003  
                ___awdiv@counter 0005                            _PORTD 000F83  
                  __CFG_USBDIV$1 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95            __size_of_Delay10KTCYx 0016  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000              __size_of_MFRC522_Rd 00A4  
            __size_of_MFRC522_Wr 0090                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
         MFRC522_AntiColl@serNum 0026                            main@i 003B  
                          main@j 0041                            main@k 0039  
                          main@t 0037                            tablat 000FF5  
              _MFRC522_Clear_Bit 117E                            plusw1 000FE3  
                          plusw2 000FDB                            status 000FD8  
             ?_MFRC522_Clear_Bit 000B                   __CFG_ICPRT$OFF 000000  
              _MFRC522_AntennaOn 135C                   __CFG_MCLRE$OFF 000000  
                __initialization 1134                     __end_of_main 0B6A  
             ?_MFRC522_AntennaOn 0001              ??_MFRC522_Clear_Bit 000C  
               __end_of_BusyXLCD 1276                     traduz@numero 0009  
      MFRC522_ReadCardSerial@str 002E                     _Delay10KTCYx 1398  
          __size_of_DelayPORXLCD 0012   __end_of_MFRC522_ReadCardSerial 1338  
               ??_MFRC522_ToCard 001A         __size_of_MFRC522_Set_Bit 0032  
                 ??_SetDDRamAddr 0001                 __end_of_OpenXLCD 0D7A  
       __size_of_MFRC522_Request 005E                           ??_main 0031  
            ??_MFRC522_AntennaOn 000F                    __activetblptr 000002  
                  _WriteDataXLCD 11C0                  MFRC522_ToCard@i 0023  
                MFRC522_ToCard@n 0025                 ??_MFRC522_isCard 002E  
          MFRC522_ToCard@backLen 0018               MFRC522_Rd@ucResult 0007  
                __CFG_CCP2MX$OFF 000000                           _ADCON1 000FC1  
                MFRC522_Wr@value 0003        __end_of_MFRC522_Clear_Bit 11C0  
          MFRC522_ToCard@_status 001F            MFRC522_ToCard@command 0022  
               ___awdiv@dividend 0001            MFRC522_ToCard@sendLen 0015  
                         _OSCCON 000FD3            MFRC522_ToCard@waitIRq 001E  
      __end_of_MFRC522_AntennaOn 137C                     _DelayPORXLCD 13AE  
                 __CFG_XINST$OFF 000000                        ??_Mydelay 0003  
                      ??___awdiv 0005             __end_of_MFRC522_Init 0F34  
                      ??___awmod 0005          MFRC522_AntiColl@_status 002C  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           _traduz 0B6A  
                 ?_WriteDataXLCD 0001                     __pdataCOMRAM 0058  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               __end_of_putsXLCD 10E2                       __accesstop 0060  
        __end_of__initialization 1174                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001           MFRC522_Request@TagType 0026  
                   ??_MFRC522_Rd 0003                     ??_MFRC522_Wr 0005  
          MFRC522_isCard@TagType 002C                   __pcstackCOMRAM 0001  
                   __pidataBANK0 13C8           MFRC522_Request@_status 0029  
               MFRC522_Rd@ucAddr 0005           MFRC522_Request@reqMode 0028  
       __end_of_MFRC522_AntiColl 0CD6                ??_MFRC522_Set_Bit 000C  
             __end_of_MFRC522_Rd 0E1E               __end_of_MFRC522_Wr 0EAE  
              ??_MFRC522_Request 0028       __size_of_MFRC522_Clear_Bit 0042  
         __size_of_DelayFor18TCY 0008               __size_of_inic_XLCD 0032  
                      ?_BusyXLCD 0001                  WriteCmdXLCD@cmd 0001  
           __end_of_SetDDRamAddr 1134           MFRC522_ToCard@backData 0016  
     __size_of_MFRC522_AntennaOn 0020                        ?_OpenXLCD 0001  
             MFRC522_Set_Bit@tmp 000C                WriteDataXLCD@data 0001  
               MFRC522_Wr@ucAddr 0007                  ??_WriteDataXLCD 0001  
                        ?_traduz 0009           MFRC522_ToCard@lastBits 0020  
         MFRC522_ToCard@sendData 0013                       ??_BusyXLCD 0001  
                __CFG_VREGEN$OFF 000000                       ??_OpenXLCD 0005  
          __size_of_MFRC522_Init 0086                          __Hparam 0000  
                        __Lparam 0000                          _Mydelay 12A8  
           MFRC522_Clear_Bit@tmp 0010                          ___awdiv 0F34  
                  _DelayFor18TCY 13C0                          ___awmod 0FB8  
                      ?_putsXLCD 0002                     __psmallconst 0800  
              __end_of_inic_XLCD 12A8                  __CFG_STVREN$OFF 000000  
                        __pcinit 1134            __end_of_MFRC522_Reset 135C  
                        __ramtop 0800                          __ptext0 0A44  
                        __ptext1 0B6A                          __ptext2 0FB8  
                        __ptext3 0F34                          __ptext4 1086  
                        __ptext5 11C0                          __ptext6 1276  
                        __ptext7 0CD6                          __ptext8 11FE  
                        __ptext9 10E2                  __size_of_traduz 00C4  
               ___awmod@dividend 0001                          main@UID 0043  
                        main@var 0052                     _MFRC522_Init 0EAE  
           end_of_initialization 1174                    __Lmediumconst 0000  
  MFRC522_ReadCardSerial@_status 0030                   ?_DelayFor18TCY 0001  
                        postdec1 000FE5                          postdec2 000FDD  
                        traduz@a 000D                          traduz@b 000E  
                        traduz@c 000F                          postinc0 000FEE  
                        postinc2 000FDE                       ??_putsXLCD 0004  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
                      _TRISDbits 000F95            __size_of_SetDDRamAddr 0052  
                     main@buffer 004D                MFRC522_Rd@Address 0001  
                _MFRC522_Set_Bit 12DA          MFRC522_Request@backBits 002A  
            MFRC522_ToCard@irqEn 0021                  _MFRC522_Request 1028  
                  __pidataCOMRAM 13CE                     _SetDDRamAddr 10E2  
                 __end_of_traduz 0C2E               SetDDRamAddr@DDaddr 0004  
            start_initialization 1134                ?_MFRC522_AntiColl 0026  
              MFRC522_AntiColl@i 002D          __size_of_MFRC522_ToCard 0238  
             ??_MFRC522_AntiColl 0028          __size_of_MFRC522_isCard 001C  
              __size_of_BusyXLCD 003A                  ??_DelayFor18TCY 0001  
       ??_MFRC522_ReadCardSerial 0030                __size_of_OpenXLCD 00A4  
                  ?_WriteCmdXLCD 0001                      __pdataBANK0 0060  
               __CFG_LPT1OSC$OFF 000000                         ??_traduz 000D  
              MFRC522_Wr@Address 0001             MFRC522_AntennaOn@stt 000F  
        __end_of_MFRC522_Set_Bit 130C                   putsXLCD@buffer 0002  
        __end_of_MFRC522_Request 1086              MFRC522_Set_Bit@addr 000E  
                       ?_Mydelay 0001              MFRC522_Set_Bit@mask 000B  
                 ??_WriteCmdXLCD 0001                         ?___awdiv 0001  
                       ?___awmod 0001                    ?_Delay10KTCYx 0001  
              __size_of_putsXLCD 005C            __end_of_WriteDataXLCD 11FE  
                    __smallconst 0800                        _inic_XLCD 1276  
                       _LATDbits 000F8C                    ?_DelayPORXLCD 0001  
                OpenXLCD@lcdtype 0005  __size_of_MFRC522_ReadCardSerial 002C  
               __CFG_WDTPS$32768 000000                        main@F4143 0058  
                 ??_Delay10KTCYx 0001                     Mydelay@tempo 0001  
                      main@i_340 0056                       ?_inic_XLCD 0001  
                      main@valor 003F                        main@vetor 0032  
               Delay10KTCYx@unit 0002                   _MFRC522_ToCard 080C  
                      copy_data0 1148                        copy_data1 1168  
                       _BusyXLCD 123C                   _MFRC522_isCard 137C  
         __size_of_MFRC522_Reset 0024                   ??_DelayPORXLCD 0001  
                       _OpenXLCD 0CD6                 ?_MFRC522_Set_Bit 000B  
                       Mydelay@i 0004                         __Hrparam 0000  
          MFRC522_Clear_Bit@addr 0012                 ?_MFRC522_Request 0026  
          MFRC522_Clear_Bit@mask 000B                         __Lrparam 0000  
               __size_of_Mydelay 0032                 __size_of___awdiv 0084  
               __size_of___awmod 0070           __end_of_MFRC522_ToCard 0A44  
         _MFRC522_ReadCardSerial 130C                         __ptext10 13AE  
                       __ptext11 1398                         __ptext20 117E  
                       __ptext12 123C                         __ptext21 0EAE  
                       __ptext13 13C0                         __ptext22 1338  
                       __ptext14 12A8                         __ptext23 135C  
                       __ptext15 137C                         __ptext24 12DA  
                       __ptext16 1028                         __ptext25 0E1E  
                       __ptext17 130C                         __ptext26 0D7A  
                       __ptext18 0C2E                         __ptext19 080C  
         __end_of_MFRC522_isCard 1398             __end_of_WriteCmdXLCD 123C  
    MFRC522_AntiColl@serNumCheck 0029                    __size_of_main 0126  
                     _MFRC522_Rd 0D7A                       _MFRC522_Wr 0E1E  
      __size_of_MFRC522_AntiColl 00A8                         _putsXLCD 1086  
                       main@cont 003D                    _MFRC522_Reset 1338  
          __CFG_CPUDIV$OSC1_PLL2 000000                      ??_inic_XLCD 0006  
                      traduz@txt 000B                  ?_MFRC522_ToCard 0013  
                ?_MFRC522_isCard 002C             __end_of_Delay10KTCYx 13AE  
          __end_of_DelayFor18TCY 13C8                   ?_MFRC522_Reset 0001  
            __CFG_FOSC$INTOSC_HS 000000             __end_of_DelayPORXLCD 13C0  
                  ?_MFRC522_Init 0001                      ?_MFRC522_Rd 0001  
                    ?_MFRC522_Wr 0001  
